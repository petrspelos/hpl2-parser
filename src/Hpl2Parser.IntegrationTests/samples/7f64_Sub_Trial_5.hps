void OnStart()	//NOTE: THIS IS NOW THE FOURTH MAP 
{				//Mapping and partial scripting by andyrockin123 (Adny)

	//PRELOAD SOUNDS and particles! DO EET!!! IMPORTANT!!! VERY!!! IF YOU ADD MORE SOUNDS, LOAD THEM AT APPROPRIATE TIMES!!
	//-----------------------------------------------------------------------------------------------------// 
	PreloadParticleSystem("ps_dust_elevator_crash.ps");
	// after elevator: PreloadSound("moan 2.wav"); PreloadSound("sub_thudding.ogg"); PreloadSound("crash 11.wav"); PreloadSound("moan.wav");
		
	/*if(ScriptDebugOn()) //Debug stuff
	{
		GiveItemFromFile("lantern", "lantern.ent");
		for(int i=0;i<10;i++) GiveItemFromFile("tinderbox_"+i, "tinderbox.ent");
		for(int i=0;i<10;i++) GiveItemFromFile("potion_health_"+i, "potion_health.ent");
		for(int i=0;i<10;i++) GiveItemFromFile("potion_sanity_"+i, "potion_sanity.ent");
		
		GiveItemFromFile("slide_door_lever_handle_1", "slide_door_lever_handle.ent");
	}*/
	//PlayMusic("trial_3.ogg", true, 2.0f, 1.5f, 0, true);
	
	
	SetupLoadScreen("Loading", "Load_5", 0, "load_check.png");
	
	//---Intro Stuff + Fade In, covers any initial lag------//
	BeginTrial();
	
	
	SetSanityDrainDisabled(true);
	AddBodyForce("prison_section_plain_7_Body", 300, 0, 800, "world");


	//--------variables nyuggah--------//
	SetLocalVarInt("event_door_var", 0);


	//---That Pesky Tunnel Entrance-----//
	SetEntityInteractionDisabled("prison_tunnel_entry_broken_1", true);
	SetPropStaticPhysics("prison_tunnel_entry_broken_1", true);


	//----Events------//




	//----Puzzle/Progression Callbacks--------//
	AddEntityCollideCallback("Player", "Explore_Area_1", "Exploration", true, 1);

	for(int i=0;i< 2;i++) 
	AddEntityCollideCallback("Player", "door_trigger_" + i, "door_event_yo", false, 1);

	AddUseItemCallback("", "slide_door_lever_handle_1", "Area_Use_Lever", "AttachLever", true);
	AddUseItemCallback("", "slide_door_lever_handle_1", "BrokeLever", "FailAttachLever", false);

	SetEntityPlayerInteractCallback("ElevatorArea", "Elevate", true);
	SetEntityConnectionStateChangeCallback("lever_simple01_1", "PullLever");
	//logan
	AddEntityCollideCallback("Player", "WardenFoundTrigger", "WardenFound", true, 0);
	
	
	AddEntityCollideCallback("Player", "RemoveSounds", "RemoveDaSounds", false, 0);

	AddUseItemCallback("BucketOnRope", "wooden_bucket_1", "AreaRopeInteraction", "UseBucketOnRope", false);
	AddUseItemCallback("BucketOnRope", "wooden_bucket_1", "crank_wheel_1", "UseBucketOnRope", false);

	AddEntityCollideCallback("invisible_box_mass_2_1", "AreaRopeInteraction","CollideRopeInteraction", false, 0);
	AddEntityCollideCallback("invisible_box_mass_2_1", "AreaRopeDown","CollideRopeDown", false, 0);
	
	AddUseItemCallback("", "key_tomb_1", "warden_door", "UseKeyOnWardenDoor", true);

	//----Scares 'n' Stuff------//
	AddEntityCollideCallback("Player", "Spooks_CloseDoor", "CloseDoor", true, 0);
	AddEntityCollideCallback("Player", "Spooks_Lantern", "ShakeLantern", false, -1);
	AddEntityCollideCallback("Player", "Spooks_Sound_1", "SpooksSound", true, 0);
	AddEntityCollideCallback("Player", "Spooks_Sound_2", "SpooksSound", true, 0);
	AddEntityCollideCallback("Player", "Spooks_Sound_3", "SpooksSound", true, 0);
	AddEntityCollideCallback("Player", "Spooks_Sound_4", "SpooksSound", true, 0);
	AddEntityCollideCallback("Player", "Spooks_Sound_5", "SpooksSound", true, 0);
	
	//khy
	AddEntityCollideCallback("Player", "after_elev_spooks", "moan_spook", true, 1);
	AddEntityCollideCallback("Player", "after_elev_spooks_2", "rubble_spook", true, 1);
	AddEntityCollideCallback("Player", "after_elev_spooks_3", "moan_spook_2", true, 1);
	
	AddEntityCollideCallback("Player", "before_elevator_music", "elevator_music", true, 1);

	//----Box light controls-----//
	InteractConnectPropWithRope("WellRope","crank_wheel_1", "RopeArea_3", false, 5,8,8, false, 0);

	AddTimer("", 5, "Heal");
	
	for(int i=0;i<10;i++) AddEntityCollideCallback("Player", "NOSTAND_"+i, "DebugCrouching", false, 0);
}

void DebugCrouching(string &in asParent, string &in asChild, int alState){
	if(alState==1){
		SetPlayerCrouching(true);
		SetPlayerCrouchDisabled(true);
		SetPlayerJumpDisabled(true);
	}
	else if(alState==-1){
		SetPlayerCrouchDisabled(false);
		SetPlayerJumpDisabled(false);
	}
}

void GrabNote(string &in asEntity){
	FadeLightTo("HelpLight_1", 0,0,0,0,-1,3);
}

void Heal(string &in asTimer){
	AddDebugMessage("Health: "+GetPlayerHealth(), false);
	AddPlayerHealth(5);
	AddTimer("", 5, "Heal");
}

void StopSound(string &in asTimer){
	StopSound(asTimer, 3.0f);
}
void RemoveDaSounds(string &in asParent, string &in asChild, int alState){
	AddTimer("s3", 1.0f, "StopSound");
}

//SCARES


void CloseDoor(string &in asParent, string &in asChild, int alState){
	SetLocalVarInt("DoorScareVar", 0);
	AddDebugMessage("Spooking!!!", false);
	AddTimer("prison_section_plain_7", 0.1f, "CloseDoorTimer");
}
void CloseDoorTimer(string &in asTimer){
	if(GetLocalVarInt("DoorScareVar")<7){
		AddPropForce(asTimer, 75, 0, -150, "world");
		AddTimer(asTimer, 0.001f, "CloseDoorTimer"); 
		AddLocalVarInt("DoorScareVar", 1);
	}
}

void ShakeLantern(string &in asParent, string &in asChild, int alState){
	AddBodyForce("hanging_lantern_ceiling_3_Body_1", 700, 0, 0, "world");
}

void SpooksSound(string &in asParent, string &in asChild, int alState){
	if(asChild=="Spooks_Sound_1") PlaySoundAtEntity("", "door_gate_bar_locked", "prison_section_plain_8", 2.0f, false);
	else if(asChild=="Spooks_Sound_2") AddTimer("Apple", 0.1f, "StepTimer");
	else if(asChild=="Spooks_Sound_3"){
		PlaySoundAtEntity("ScratchingSound", "scare_scratch", "Scratching", 1.0f, false);
		AddTimer("ScratchingSound", 15, "StopSound");
	}
	else if(asChild=="Spooks_Sound_4"){}
	else if(asChild=="Spooks_Sound_5"){}
}
void StepTimer(string &in asTimer){
	PlaySoundAtEntity("", "scare_walk_hallway.snt", "Sounds_Walking", 0.0f, false);
	if(asTimer=="Apple"){
		AddTimer("", 1.0f, "StepTimer"); 
		AddTimer("", 2.0f, "StepTimer");
		AddTimer("", 3.0f, "StepTimer");
		AddBodyForce("hanging_lantern_ceiling_4_Body_1", 0, 0, -850, "world");
	}
}
//khy spooks
/*-------------------------------------------------------------------------------------/
/-------------------------------------------------------------------------------------*/


void moan_spook(string &in asParent, string &in asChild, int alState){
	PlayGuiSound("moan.wav", 0.5f);
}
void moan_spook_2(string &in asParent, string &in asChild, int alState){
	PlayGuiSound("moan 2.wav", 0.2f);
}
void rubble_spook(string &in asParent, string &in asChild, int alState){
	PlayGuiSound("crash 11.wav", 0.15f);
}
void bucket_interact(string &in asEntity){
	AddEntityCollideCallback("Player", "bucket_spooks", "bucket_spook_sounds", true, 1);
}
void bucket_spook_sounds(string &in asParent, string &in asChild, int alState){
	AddTimer("", RandInt(3, 6), "actual_bucket_spooks");
	
}
void actual_bucket_spooks(string &in asTimer)
{
	CreateParticleSystemAtEntity("", "ptest_dust_falling.ps", "bucket_particle_spawn", false);
	PlayGuiSound("sub_thudding.ogg", 1.0f);
}

void elevator_music(string &in asParent, string &in asChild, int alState){
	StopMusic(15.0f, 0);
}
//kurt warden
void WardenFound(string &in asParent, string &in asChild, int alState)
{
	GiveSanityDamage(5, true);
	PlayMusic("trial_3_event_warden", false, 0.8, 0, 10, false);
}
//DOORS
void InteractJammedDoor(string &in asEntity)
	{SetMessage("Examine", "Trial4_StuckDoor", 0);}
void InteractEventDoor(string &in asEntity)
	{SetMessage("Examine", "Trial5_EventDoor", 0);}
void InteractWardenDoor(string &in asEntity){
	if(GetSwingDoorLocked("warden_door")==true) SetMessage("Examine", "Trial5_WardenDoor", 0);
}
	

//GAME STUFF
void Exploration(string &in asParent, string &in asChild, int alState){
	AddLocalVarInt("event_door_var", 1);
}

void explore_handle(string &in asEntity){
	AddLocalVarInt("event_door_var", 1);
	FadeLightTo("HelpLight_2", 0,0,0,0,-1,3);
}

void door_event_yo(string &in asParent, string &in asChild, int alState)
{
	if(GetLocalVarInt("event_door_var") == 2)
	{
		//SetPlayerActive(false);
		StartPlayerLookAt("look_door_event", 4.5f, 50.5f, "");
		AddTimer("", 0.7f, "ReturnMovement");
		
		SetEntityActive("event_door", false);
		CreateParticleSystemAtEntityExt("door_broken_particle_1", "ps_dust_elevator_crash.ps", "look_door_event", false,
1, 1, 1, 0.3f, true, 2, 8, 10, 20);
		PlaySoundAtEntity("", "break_wood", "look_door_event", 0.0f, false);
		PlaySoundAtEntity("", "react_breath", "Player", 0.0f, false);
		PlaySoundAtEntity("", "brute\amb_idle_whimp", "look_door_event", 0.0f, false);
		
		
		for(int i=0;i< 2;i++) 
		RemoveEntityCollideCallback("Player", "door_trigger_" + i);		
	}
}

void ReturnMovement(string &in asTimer)
{
	SetPlayerActive(true);
	StopPlayerLookAt();
}

void FailAttachLever(string &in asItem, string &in asEntity){
	SetMessage("Interact", "Trial5_FailLever", 0);
}
void AttachLever(string &in asItem, string &in asEntity)
{
	RemoveItem(asItem);
	CreateParticleSystemAtEntity("", "ps_hit_soft", "Area_Use_Lever", false);
	PlaySoundAtEntity("", "impact_metal_low", "Area_Use_Lever", 0.0f, false);	
	SetEntityActive("slide_door_lever_mount_2", false);
	SetEntityActive("lever_simple01_1", true);	
}

void PullLever(string &in asEntity, int alState){
	if(alState==-1 || alState==1){
		PlaySoundAtEntity("s1", "13_ignite", "cog_9", 0.2f, false);
		PlaySoundAtEntity("s2", "13_machine_fail", "cog_9", 0.2f, false);
		PlaySoundAtEntity("s3", "13_machine_extra", "cog_9", 0.2f, false);
		StartScreenShake(0.02f, 1.25f, 0.5f,0.75f);
		RotatePropToSpeed("cog_7", 1, -1, 0, 0, 1, false, "");
		RotatePropToSpeed("cog_9", 1, 1, 0, 0, 1, false, "");
		RotatePropToSpeed("cog_8", 1, -1, 0, 0, 1, false, "");
		SetMoveObjectState("castle_portcullis_1", 1);
		SetLeverStuckState("lever_simple01_1", alState, true);
		
		PlayMusic("trial_4_event_intense.ogg", false, 1.0f, 0.5f, 0, false);
		AddTimer("", 17.0f, "continue_music");
		
		//preloads for after spooks
		PreloadParticleSystem("ptest_dust_falling.ps");
		PreloadSound("moan 2.wav"); PreloadSound("sub_thudding.ogg"); PreloadSound("crash 11.wav"); PreloadSound("moan.wav");
	}
}
void continue_music(string &in asTimer){ PlayMusic("trial_3.ogg", true, 2.0f, 5.5f, 0, true); }

void Elevate(string &in asEntity){
	FadeOut(1.0f);
	AddTimer("", 1.4f, "ElevateTimer");
}
void ElevateTimer(string &in asTimer){ //Player wakes up
	AddLocalVarInt("ElevateVar", 1);	//What step to play in the event
	float fEventSpeed = 1.0f;	//The default time between steps in an event
	
	switch(GetLocalVarInt("ElevateVar")){
		case 1:
			//Preload
			PreloadSound("elevator_move_normal.snt"); PreloadSound("14_scrape_high.snt"); /*PreloadSound("14_scrape_low.snt");*/
			PreloadSound("elevator_stop"); PreloadSound("elevator_move_fall");
		
			TeleportPlayer("InsideElevator");
			FadeIn(1.0f);
			PlaySoundAtEntity("activate","14_elevator_activate","Player", 0, false);
		break;
		case 2:
			StartScreenShake(0.008, 11.1f, 2.0, 0.2);
			PlaySoundAtEntity("elevatorworking","elevator_move_normal.snt","Player", 1, false);
			PlaySoundAtEntity("elevatorworking", "14_scrape_high.snt", "area_elevator", 0.5f, false);
			PlaySoundAtEntity("elevatorworking", "14_scrape_low.snt", "area_elevator", 0.5f, false);
	
		break;
		case 3:
			SetMoveObjectStateExt("Elevator", 0.6, 0.16, 2, 0.1, false);
			
			fEventSpeed = 11.8f;
		break;
		case 4:
			StartScreenShake(0.03, 0.5, 0.05, 0.5);
			PlaySoundAtEntity("explosion","elevator_stop","Player", 0, false);
			fEventSpeed = 0.2f;
		break;
		case 5:
			StopSound("elevatorworking", 0.2f);
			
			PlayGuiSound("react_scare.snt", 1.0f);//?
			SetMoveObjectStateExt("Elevator", 0.54, 8.0, 20, 0, false);
			SetPlayerJumpDisabled(true);
			fEventSpeed = 1.0f;
		break;
		case 6:
			StartScreenShake(0.03, 3, 0.1, 0.1);
			SetMoveObjectStateExt("Elevator", -0.15, 6.0, 100, 0.1, false);
			
			PlaySoundAtEntity("FallSound","elevator_move_fall", "Player", 0.2f, false);
			MovePlayerHeadPos(0, 0.4f, 0, 0.8f, 0.5f);
			FadePlayerFOVMulTo(1.2f, 0.5f);
			fEventSpeed = 0.5f;
		break;
		case 7:
			FadeOut(1.0f);
			
			fEventSpeed = 1.0f;
		break;
		case 8:
			StopSound("FallSound", 1.8f);
			PlaySoundAtEntity("explosion","explosion_rock_large","Player", 0, false);
			PlaySoundAtEntity("clankadank","14_elevator_clank","Player", 0, false);
			SetPlayerCrouching(true);
			MovePlayerHeadPos(0, -0.3f, 0, 2, 5);
			FadePlayerFOVMulTo(0.9f, 1.0f);
			FadePlayerRollTo(20.0f, 10, 20);
			SetPlayerRunSpeedMul(0.6f);
			SetPlayerMoveSpeedMul(0.8f);
			fEventSpeed = 3.6f;
		break;
		case 9:
			TeleportPlayer("OutsideElevator");
			MovePlayerHeadPos(0, 0, 0, 0.5f, 0.5f);
			FadePlayerFOVMulTo(1.0f, 1.0f);
			FadePlayerRollTo(0, 1.5f, 8);
			FadeIn(6.0f);
			SetPlayerJumpDisabled(false);
			SetEntityActive("Elevator_Ladder", true);
			fEventSpeed = 2.0f;
			
			
		break;
		case 10:
		PlayGuiSound("general_wind_whirl6.ogg", 0.5f);
			SetPlayerRunSpeedMul(1);
			SetPlayerMoveSpeedMul(1);
			
		break;
	}
	
	if(GetLocalVarInt("ElevateVar") < 13)  AddTimer("", fEventSpeed, "ElevateTimer");	
}

//--------Rope Puzzle------------\\

void CollideRopeInteraction(string &in asParent, string &in asChild, int alState)
{
	//Set the variable that decides if the rope is up or not.
	SetLocalVarInt("RopeIsUp", alState==1 ? 1 : 0);
	AddDebugMessage("Rope up: "+alState, false);
}

void UseBucketOnRope(string &in asItem, string &in asEntity)
{
	//////////////////////////////
	//Rope is in right position
	if(GetLocalVarInt("RopeIsUp")==1)
	{
		AddAttachedPropToProp("invisible_box_mass_2_1", "wooden_bucket_onrope_1", "wooden_bucket_onrope.ent", 0,0,0, 0,0,0);
		RemoveItem(asItem);
		
		SetLocalVarInt("BucketOnRope", 1);
		
		PlaySoundAtEntity("attachb", "25_attach_bucket.snt", asEntity, 0.0f, false);	
	}
	//////////////////////////////
	//Rope is too low
	else 
	{
		SetMessage("Ch03Level25", "RopeTooLow", 0);	
	}
}

//If rope is down at bottom
void CollideRopeDown(string &in asParent, string &in asChild, int alState)
{
	if(alState!=1) return;
	
	AddDebugMessage("Rope is down!", false);
	
	// If lowering rope alone or bucked already filled, do nothing
	if(GetLocalVarInt("BucketOnRope")!=1 || GetLocalVarInt("BucketFilled")==1) 
	{
		return;
	}
	
	//Make it possible to pick up bone + have correct icon
	SetEntityPlayerInteractCallback("invisible_box_mass_2_1", "InteractFilledBucket", true);
	SetEntityCustomFocusCrossHair("invisible_box_mass_2_1","Pick"); 
	
	//need to turn off this area, else it is not possible to interact with entity on rope!
	SetEntityActive("AreaRopeInteraction", false);
	
	PlaySoundAtEntity("WaterSplash","impact_water_med.snt", "AreaBuckSplash", 0, false);
	
	//Replace Bucket with filled version, then tell Statyk he sucks the PEEN xD LMAO
	// haha" xdd Told him!
	//...
	//...
	//He didn't like it...
	SetLocalVarInt("BucketFilled", 1);
	RemoveAttachedPropFromProp("invisible_box_mass_2_1", "wooden_bucket_onrope_1");
	AddAttachedPropToProp("invisible_box_mass_2_1", "wooden_bucket_onrope_filled_1", "wooden_bucket_onrope_filled.ent", 0,0,0, 0,0,0);
}

// Pick up filled bucket
void InteractFilledBucket(string &in asEntity)
{
	RemoveAttachedPropFromProp("invisible_box_mass_2_1", "wooden_bucket_onrope_filled_1");
	PlaySoundAtEntity("pickb", "25_pick_bucket_water.snt", "Player", 0.0f, false);	
	SetMessage("Ch03Level25", "PickedUpFilledBucket", 0);
	PlaySoundAtEntity("PickUpItem", "pick_generic.snt", "Player", 0.1f, false);
	
	FadeOut(1.0f);
	SetPlayerActive(false);
	AddTimer("", 1.5f, "SpawnKey");
}

void SpawnKey(string &in asTimer)
{
	SetEntityActive("key_tomb_1", true);
	SetEntityActive("wooden_bucket_2", true);	
	SetEntityInteractionDisabled("wooden_bucket_2", true);
	FadeIn(1.0f);
	SetPlayerActive(true);
}

void UseKeyOnWardenDoor(string &in asItem, string &in asEntity)
{
	SetSwingDoorLocked(asEntity, false, false);
	PlaySoundAtEntity("", "unlock_door.snt", asEntity, 0.0f, false);	
}

void EndLevel(string &in asEntity){
	RemoveItem("key_tomb_1");
	ChangeMap("Sub_Trial_4", "Trial4_TestRoom", "","");
}

void BeginTrial(){
	FadeOut(0);
	FadeIn(2.0);
	StartPlayerLookAt("LookAtMe", 10,10,"");
	AddTimer("", 1.0f, "StopLookAtPls");
	AddTimer("", 4.0f, "Voices");
}
void StopLookAtPls(string &in asTimer)
	{StopPlayerLookAt();}
void Voices(string &in asTimer){
	AddEffectVoice("M4_S1_P1_01", "", "Voices", "04010101", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_02", "", "Voices", "04010102", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_03", "", "Voices", "04010103", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_04", "", "Voices", "04010104", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_05", "", "Voices", "04010105", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_06", "", "Voices", "04010106", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_07", "", "Voices", "04010107", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_08", "", "Voices", "04010108", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_09", "", "Voices", "04010109", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_10", "", "Voices", "04010110", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_11", "", "Voices", "04010111", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_12", "", "Voices", "04010112", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_13", "", "Voices", "04010113", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_14", "", "Voices", "04010114", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_15", "", "Voices", "04010115", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_16", "", "Voices", "04010116", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_17", "", "Voices", "04010117", false, "", 0, 0);
	AddEffectVoice("M4_S1_P1_18", "", "Voices", "04010118", false, "", 0, 0);
	SetEffectVoiceOverCallback("TeleportInTo");
}
void TeleportInTo(){
	StartEffectFlash(1.5, 1, 1.5);
	AddTimer("", 1.5, "Teleporting");
}
void Teleporting(string &in asTimer){
	PlayGuiSound("sub_warp.ogg", 1);
	TeleportPlayer("PlayerStartArea_1");
	PlayMusic("trial_3.ogg", true, 2.0f, 1.5f, 0, true);
}



void OnEnter(){
	AutoSave();
}	
void OnLeave(){
	StopMusic(2,0);
}