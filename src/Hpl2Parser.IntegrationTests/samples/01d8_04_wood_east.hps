void OnEnter()
{
	if(ScriptDebugOn())
	{
		SetGlobalVarInt("FastSeekerAchievement", 1);
		SetGlobalVarInt("HealthAchievement", 1);
		SetGlobalVarInt("ItemsAchievement", 1);
		SetGlobalVarInt("NoDeathAchievement", 1);
		//SetGlobalVarInt("StatuesAchievement", 1);
		SetGlobalVarInt("WardrobeAchievement", 1);
		SetGlobalVarInt("EnemiesAchievement", 1);
		SetGlobalVarInt("PuzzleAchievement", 1);
		//SetGlobalVarInt("NoPuzzleAchievement", 1);
		SetGlobalVarInt("NoStatuesAchievement", 1);
		SetGlobalVarInt("SanityAchievement", 1);
		SetGlobalVarInt("SlimesAchievement", 1);
		SetGlobalVarInt("LightsAchievement", 1);
	}
	
	PreloadParticleSystem("ps_acid_web_dissolve.ps");
	PreloadParticleSystem("ps_dust_falling.ps");
	PreloadParticleSystem("ps_light_dust.ps");
	PreloadParticleSystem("ps_light_dust_large.ps");
	PreloadParticleSystem("ps_area_fog.ps");
	PreloadParticleSystem("ps_area_fog_large.ps");
	PreloadParticleSystem("ps_area_fog_small.ps");
	PreloadParticleSystem("ps_area_fog_sewer_long_warmup.ps");
	PreloadParticleSystem("ps_door_damage_wood.ps");
	PreloadParticleSystem("ps_break_wood.ps");
	
	PreloadSound("01_ambience_forest.snt");
	PreloadSound("02_woosh.snt");
	PreloadSound("02_guardian_idle_rand.snt");
	PreloadSound("02_insanity_whisper_loop.snt");
	PreloadSound("02_insanity_whisper_rand.snt");
	PreloadSound("23_terror.snt");
	PreloadSound("12_epoxy_blow.snt");
	PreloadSound("explosion_rock_large.snt");
	PreloadSound("puzzle_acid.snt");
	PreloadSound("general_thunder.snt");
	
	PreloadSound("gameplay_acid_web.snt");
	PreloadSound("lock_door.snt");
	PreloadSound("locked_door.snt");
	PreloadSound("open_door.snt");
	PreloadSound("open_door_long.snt");
	PreloadSound("door_gate_bar_locked.snt");
	PreloadSound("door_mansion_close.snt");
	PreloadSound("door_mansion_open.snt");
	PreloadSound("close_door.snt");
	PreloadSound("close_door_long.snt");
	PreloadSound("unlock_door.snt");
	PreloadSound("react_breath.snt");
	PreloadSound("react_breath_slow.snt");
	PreloadSound("react_pant.snt");
	PreloadSound("react_scare.snt");
	PreloadSound("react_sigh.snt");
	PreloadSound("general_fire_burning.snt");
	PreloadSound("general_fire_burning_low.snt");
	PreloadSound("break_pottery.snt");
	PreloadSound("break_glass_bottle.snt");
	PreloadSound("break_glass_large.snt");
	PreloadSound("break_wood.snt");
	PreloadSound("break_wood_metal.snt");
	PreloadSound("guardian_activated.snt");
	PreloadSound("guardian_ontop.snt");
	PreloadSound("hit_wood.snt");
	PreloadSound("player_climb.snt");
	PreloadSound("player_crouch.snt");
	PreloadSound("player_jump.snt");
	PreloadSound("player_stand.snt");
	PreloadSound("roll_wood.snt");
	PreloadSound("slime_attack_normal_hit.snt");
	PreloadSound("slime_create.snt");
	PreloadSound("slime_loop.snt");
	PreloadSound("step_run_dirt.snt");
	PreloadSound("step_walk_dirt.snt");
	PreloadSound("step_sneak_dirt.snt");
	PreloadSound("step_run_fabric.snt");
	PreloadSound("step_walk_fabric.snt");
	PreloadSound("step_sneak_fabric.snt");
	PreloadSound("step_run_metal.snt");
	PreloadSound("step_walk_metal.snt");
	PreloadSound("step_sneak_metal.snt");
	PreloadSound("step_run_organic.snt");
	PreloadSound("step_walk_organic.snt");
	PreloadSound("step_sneak_organic.snt");
	PreloadSound("step_run_rock.snt");
	PreloadSound("step_walk_rock.snt");
	PreloadSound("step_sneak_rock.snt");
	PreloadSound("step_run_wood.snt");
	PreloadSound("step_run_wood_squeaky.snt");
	PreloadSound("step_walk_wood.snt");
	PreloadSound("step_walk_wood_squeaky.snt");
	PreloadSound("step_sneak_wood.snt");
	PreloadSound("step_sneak_wood_squeaky.snt");
	PreloadSound("flashback_flash.snt");
	PreloadSound("hurt_pant.snt");
	PreloadSound("sanity_damage.snt");
	PreloadSound("sanity_drain_high.snt");
	PreloadSound("sanity_drain_med.snt");
	PreloadSound("sanity_drain_low.snt");
	PreloadSound("sanity_heartbeat.snt");
	PreloadSound("sanity_pant.snt");
	PreloadSound("ui_add_quest.snt");
	PreloadSound("ui_lantern_off.snt");
	PreloadSound("ui_lantern_on.snt");
	PreloadSound("ui_sanity_gain.snt");
	PreloadSound("ui_terror_meter.snt");
	PreloadSound("enemy_hallucination_disappear.snt");

	SetMapDisplayNameEntry("Wood4");
	
	CheckPoint ("DefaultRespawn", "PlayerStartArea_2", "CPDefault", "DeathHints", "HesWatching");
	
	if(GetGlobalVarInt("CellQuest") == 1)
	{
		SetEntityActive("pine_527", false);
		SetEntityActive("pine_528", false);
		SetEntityActive("pine_566", false);
		SetEntityActive("pine_567", false);
		
		SetSwingDoorLocked("prison_section_plain_7", false, false);
		
		SetLightVisible("PointLight_5", true);
		
		SetupLoadScreen("LoadingHints", "18To19", 0, "game_loading_catacombs.jpg");
		
		SetEntityActive("slime_flashback_1", true);
		SetEntityActive("slime_flashback_2", true);
		PlaySoundAtEntity("slimesound_1", "slime_loop", "slime_flashback_1", 0.1f, true);
		PlaySoundAtEntity("slimesound_2", "slime_loop", "slime_flashback_2", 0.1f, true);
		
		if(HasItem("chemical_container_epoxy_1") == false)
		{
			SetEntityActive("chemical_container_epoxy_1", true);
			SetLightVisible("PointLight_4", true);
		}
		
		if(GetGlobalVarInt("CellQuestFailed") == 0)
		{
			SetEntityActive("note_scroll_1", true);
			SetEntityActive("potion_oil_1", true);
			PlaySoundAtEntity("cellmemorysound", "02_insanity_whisper_loop.snt", "note_scroll_1", 2.0f, true);
			SetLightVisible("PointLight_3", true);
			PlayMusic("02_wood_theme", true, 0.7f, 1.0f, 0, false);
			SetFogColor(0.5f, 0.5f, 0.6f, 1.0f);
			SetFogProperties(9.0f, 150.0f, 1.2f, false);
			SetSkyBoxColor(0.5f, 0.5f, 0.6f, 1.0f);
			
			if(GetGlobalVarInt("DarkDeathCount") == 0)
				AddTimer("SanityAchievement", 4.0f, "TimerUnlockAchievement");
		}
		else
		{
			PlayMusic("03_wood_theme_alternative.ogg", true, 1.0f, 1.3f, 0, false);		
			SetFogColor(0.1f, 0.025f, 0, 1.0f);
			SetFogProperties(1.0f, 15.0f, 0.5f, true);
			SetSkyBoxColor(0.1f, 0.025f, 0, 1.0f);
			SetLightVisible("PointLight_1", false);
			SetLightVisible("PointLight_2", false);
		}
	}
	
	if(GetGlobalVarInt("HealthAchievement") == 1)
		AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);	
}

void OnLeave()
{
	RemoveTimer("addhealth");
	RemoveTimer("checkhealth");
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
}

void OnStart()
{
	AddEntityCollideCallback("Player", "AreaBonfire", "CollideAreaBonfire", true, 1);
	AddEntityCollideCallback("Player", "AreaDiscoverChurch", "CollideAreaDiscoverChurch", true, 1);
	AddEntityCollideCallback("Player", "AreaStartVision_1", "CollideAreaStartVision", true, 1);
	
	AddEntityCollideCallback("Player", "AreaBoomDamage", "CollideBoomArea", false, 1);
	AddEntityCollideCallback("Player", "AreaBoomDeath", "CollideBoomArea", false, 1);
	AddEntityCollideCallback("Player", "AreaBoomEscape", "CollideBoomArea", false, 1);
	
	AddEntityCollideCallback("Player", "AreaDanStatue_1", "CollideAreaDanStatue", false, 0);
	
	AddUseItemCallback("AcidLock", "glass_container_mix_done_1", "padlock_rusty_1", "UsedAcidOnPadlock", true);
	AddUseItemCallback("NeedleLock", "hollow_needle_1", "padlock_rusty_1", "UsedNeedleOnPadlock", true);
	AddUseItemCallback("KnifeWeb2", "ceremony_knife_1", "web_2", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeWeb1", "ceremony_knife_1", "web_1", "UsedKnifeOnSlime", false);	
	AddUseItemCallback("KnifeSlime2", "ceremony_knife_1", "slime_flashback_2", "UsedKnifeOnSlime", true);	
	AddUseItemCallback("KnifeSlime1", "ceremony_knife_1", "slime_flashback_1", "UsedKnifeOnSlime", true);	
	AddUseItemCallback("ExplosiveCave", "chemical_container_epoxy_1", "cave_in_1", "UsedExplosiveOnCave", true);	
	
	SetMapDisplayNameEntry("Wood4");
	SetLightVisible("PointLight_1", false);
	SetLightVisible("PointLight_2", false);
	SetLightVisible("PointLight_3", false);
	SetLightVisible("PointLight_4", false);
	SetLightVisible("PointLight_5", false);
	
	if(GetGlobalVarInt("MetStatuesCount") == 0) 
		SetEntityActive("AreaDanStatue_1", false);
	
	if(ScriptDebugOn())
	{	
		if(HasItem("lantern_1") == false) GiveItemFromFile("lantern_1", "lantern.ent");
		if(HasItem("ceremony_knife_1") == false) GiveItemFromFile("ceremony_knife_1", "ceremony_knife.ent");
		if(HasItem("glass_container_mix_done_1") == false) GiveItem("glass_container_mix_done_1", "glass_container_mix_done", "ChemicalContainerFull", "chemical_container_full.tga" , 1.0f);
	}
}

void TimerHealthAchievement(string &in asTimer)
{
	if(asTimer == "addhealth")
	{
		if(GetPlayerHealth() <= 98.0f)
		{
			AddPlayerHealth(2.0f);
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "checkhealth")
	{
		if(GetPlayerHealth() > 98.0f)
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "pausehealth")
	{
		RemoveTimer("addhealth");
		RemoveTimer("checkhealth");
	}
}

void PickedUpExplosive(string &in asItem)
{
	SetLightVisible("PointLight_4", false);
}

void UsedExplosiveOnCave(string &in asItem, string &in asEntity)
{
	AddTimer("sound", 4, "TimerBigBoomEvent");
	AddTimer("1", 7, "TimerBigBoomEvent");
	SetMessage("Jack", "CellQuestSuccess", 5.0f);
		
	FadeLightTo("DangerLight", 1, 0, 0, 1, 4, 4);
		
	SetEntityActive("chemical_container_epoxy_static_1", true);
	
	PlaySoundAtEntity("placejar", "puzzle_place_jar", "chemical_container_epoxy_static_1", 0, false);
	
	RemoveItem(asItem);
	
	CompleteQuest("BlowUpCaveMission", "BlowUpCaveMission");
}

void UsedNeedleOnPadlock(string &in asItem, string &in asEntity)
{
	SetMessage("Jack", "UseNeedleFail", 5.0f);
}

void UsedKnifeOnSlime(string &in asItem, string &in asEntity)
{
	if(asEntity == "web_1" || asEntity == "web_2") SetMessage("Jack", "UseKnifeFail", 5.0f);
	else
	{
		GiveSanityBoostSmall();
		PlayGuiSound("02_attack_knife.snt", 1.0f);
		AddGlobalVarInt("GlobalSlimesCount", 1);
		CreateParticleSystemAtEntity("fadeoutslimeps", "particles/ps_acid_web_dissolve.ps", asEntity, false);
		PlaySoundAtEntity("fadeoutslimesound", "02_acid_web.snt", asEntity, 0.1f, false);
		SetPropActiveAndFade(asEntity, false, 2.0f);
		if(asEntity == "slime_flashback_1") StopSound("slimesound_1", 2.0f);
		if(asEntity == "slime_flashback_2") StopSound("slimesound_2", 2.0f);
		if(GetGlobalVarInt("GlobalSlimesCount") == 14) AddTimer("SlimesAchievement", 1.0f, "TimerUnlockAchievement");
	}
}

void CPDefault(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	if(GetGlobalVarInt("CellQuestFailed") == 0) 
		PlayMusic("02_wood_theme", true, 0.7f, 1.0f, 0, false);
	else 
		PlayMusic("03_wood_theme_alternative.ogg", true, 1.0f, 1.3f, 0, false);
}

void CollideAreaDanStatue(string &in asParent, string &in asChild, int alState)
{
	if(alState == -1)
	{
		if(asChild == "AreaDanStatue_1")
		{
			StopSound("danstatuesound1", 2.5f);
			StopSound("danstatueheartbeatsound1", 2.5f);
			RemoveTimer("danstatue1part1");
			RemoveTimer("danstatue1part2");
			FadeSepiaColorTo(0, 0.1f);
			FadeRadialBlurTo(0, 0.1f);
		}
	}
	else if(alState == 1)
	{
		GiveSanityDamage(0.5f, false);
		PlayGuiSound("hurt_pant.snt", 0.2f);
		if(asChild == "AreaDanStatue_1")
		{
			AddTimer("danstatue1part1", 8.0f, "TimerDanStatue");
			AddTimer("danstatue1part2", 12.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound1", "23_terror.snt", "Player", 3.0f, true);
		}
	}
}

void TimerDanStatue(string &in asTimer)
{
	if(asTimer == "danstatue1part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound1", "02_statue_heartbeat.snt", "Player", 0.0f, true);
		FadeSepiaColorTo(0.7f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
	}
	if(asTimer == "danstatue1part2")
	{
		GivePlayerDamage(1000000.0f, "BloodSplat", true, true);
		PlayGuiSound("slime_attack_normal_hit.snt", 1.0f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
}

void PickedUpNote(string &in asItem)
{
	if(asItem == "note_scroll_1")
	{
		AddGlobalVarInt("MemoryNoteCount", 1);
		if(GetGlobalVarInt("MemoryNoteCount") == 1) AddQuest("MemoriesMission", "MemoriesMission");
		FadeLightTo("PointLight_3", 0.0f ,0.0f ,0.0f ,0.0f , -1, 2);
		StopSound("cellmemorysound", 2.0f);
		
		AutoSave();
	}
}

void TimerBigBoomEvent(string &in asTimer)
{
	if(asTimer == "sound"){
		PlaySoundAtEntity("epoxyignite", "12_epoxy_blow", "cave_in_1", 0, false);
		FadeLightTo("DangerLight", 1, 0, 0, 1, 4, 4);
		StartScreenShake(0.01, 0, 0, 2.9f);
		return;
	}
	
	SetPropActiveAndFade("chemical_container_epoxy_static_1", false, 1.0f);
	
	SetPropHealth("cave_in_1", 0);
	
	StartScreenShake(0.08, 2.5f, 0, 1.0f);
	
	FadeImageTrailTo(0.5, 1);
	
	FadeLightTo("BoomLight", 1, 1, 1, 1, 8, 0.1f);
	FadeLightTo("DangerLight", 0, 0, 0, 0, 0, 0.5f);
	FadeLightTo("PointLight_5", 0, 0, 0, 0, 0, 1.0f);
	
	switch(GetLocalVarInt("BoomPlayer")){
		case 0:
			//GivePlayerDamage(25, "BloodSplat", true, false);
			//AddDebugMessage("Player got damage: -25", false);
		break;
		case 1:
			GivePlayerDamage(50, "BloodSplat", true, false);
			AddDebugMessage("Player got damage: -50", false);
		break;
		case 2:
			GivePlayerDamage(200, "BloodSplat", true, false);
			AddDebugMessage("Player got damage: -200", false);
		break;
	}
	
	PlayMusic("12_puzzle_cavein.ogg", false, 1, 0.0f, 10, true);
	
	AddTimer("cquest", 2, "TimerCompleteQuest");
	AddTimer("light", 0.75f, "TimerCompleteQuest");
}

void TimerCompleteQuest(string &in asTimer)
{
	if(asTimer == "light"){
		FadeLightTo("BoomLight", 0, 0, 0, 0, 0, 1.25f);
		return;
	}
	
	FadeImageTrailTo(0.0, 1);
	
	GiveSanityBoostSmall();
}

void CollideBoomArea(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "AreaBoomDeath") SetLocalVarInt("BoomPlayer", 2);
	else if(asChild == "AreaBoomEscape") SetLocalVarInt("BoomPlayer", 0);
	else SetLocalVarInt("BoomPlayer", 1);
	
	AddDebugMessage("Player to get damage: "+GetLocalVarInt("BoomPlayer"), false);
	
	if(asChild == "AreaBoomEscape" && QuestIsAdded("BlowUpCaveMission") == false && QuestIsCompleted("BlowUpCaveMission") == false)
		AddQuest("BlowUpCaveMission", "BlowUpCaveMission");
}

void UsedAcidOnPadlock(string &in asItem, string &in asEntity)
{
	RemoveItem(asItem);
	FadeLightTo("PointLight_14", 0.0f, 1.0f, 0.3f, 1.0f, -1, 1);
	AddTimer("endLight", 1.0f, "TimerEndlight");
	PlaySoundAtEntity("burnlock", "puzzle_acid", "prison_section_1", 1.0f, false);
	SetPropActiveAndFade("padlock_rusty_1", false, 2.0f);
	SetSwingDoorLocked("prison_section_1",false, false);	
	GiveSanityBoostSmall();
}

void TimerEndlight(string &in asTimer)
{
	FadeLightTo("PointLight_14", 0.0f, 0.0f, 0.0f, 0.0f, -1, 1);
}

void TimerLoadHouse(string &in asTimer)
{
	if(asTimer == "cell") ChangeMap("04_house_dark.map", "PlayerStartArea_1", "flashback_flash", "react_sigh");
}

void CollideAreaStartVision(string &in asParent, string &in asChild, int alState)
{
	AddTimer("scareeffect", 0.001f, "TimerPlayerReactions");
	AddTimer("breatheffect", 3.5f, "TimerPlayerReactions");
	AddTimer("cell", 5.0f, "TimerLoadHouse");
	PlayMusic("02_piano_eerie_stinger01", false, 0.8f, 0.0f, 10, true);
	SetPlayerActive(false);
	SetLanternActive(false, false);
	StartEffectFlash(0.0f, 1.0f, 0.3f);
	TeleportPlayer("PlayerStartVisionArea_1");
	SetupLoadScreen("LoadingHints", "16To17", 0, "game_loading_brennenburg.jpg");
}

void CollideAreaDiscoverChurch(string &in asParent, string &in asChild, int alState)
{
	AddTimer("resetspeedmul", 6.0f, "TimerStopLook");
	AddTimer("jack40", 10.0f, "TimerSaySomething");
	PlaySoundAtEntity("createwebsound", "slime_create", "web_1", 0, false);
	PlaySoundAtEntity("createwebsound", "slime_create", "web_2", 0, false);
	SetPropActiveAndFade("web_1", true, 2.0f);
	SetPropActiveAndFade("web_2", true, 2.0f);
	StartPlayerLookAt("cross_small_wood_1", 1.7f, 1.7f, "");
	SetPlayerMoveSpeedMul(0.1f);
	SetPlayerRunSpeedMul(0.1f);
	SetPlayerLookSpeedMul(0.1f);
	
	AddTimer("scare", 1.5f, "TimerPlayerReactions");
	AddTimer("breath", 6.0f, "TimerPlayerReactions");
	PlayGuiSound("21_alex_low_freq_rumble", 0.7f);
	PlayMusic("11_event_tree", false, 1.0f, 0.0f, 10, false);
	SetMessage("Strange", "02", 9.0f);
	StartScreenShake(0.02f, 6, 2, 2);
	
	SetEntityActive("pine_485", false);
	SetEntityActive("pine_533", false);
	SetEntityActive("pine_530", false);
	SetEntityActive("pine_532", false);
	SetEntityActive("pine_531", false);
	SetEntityActive("pine_527", false);
	SetEntityActive("pine_528", false);
	SetEntityActive("pine_566", false);
	SetEntityActive("pine_567", false);
}

void TimerSaySomething(string &in asTimer)
{
	if(asTimer == "jack40") 
	{
		SetMessage("Jack", "40", 8.0f);
		AddTimer("ChurchMission", 8.5f, "TimerSaySomething");
	}
	else if(asTimer == "ChurchMission") AddQuest("ChurchMission", "ChurchMission");
}

void CollideAreaBonfire(string &in asParent, string &in asChild, int alState)
{
	AddTimer("nightpart1", 8.0f, "TimerSleepEvents");
	FadeOut(7.0f);
	FadeGlobalSoundVolume(0.0f, 7.5f);
	StartPlayerLookAt("bonfire_1", 1.1f, 1.1f, "");
	SetMessage("Jack", "38", 6.5f);
	SetPlayerActive(false);
	StopMusic(2.0f, 0);
	StopMusic(2.0f, 1);
	StopMusic(2.0f, 10);
}

void TimerSleepEvents(string &in asTimer)
{
	if(asTimer == "nightpart1")
	{
		AddTimer("nightpart2", 3.0f, "TimerSleepEvents");
		SetMessage("Woman", "Jack", 3.0f);
	}
	if(asTimer == "nightpart2")
	{
		AddTimer("nightpart3", 3.0f, "TimerSleepEvents");
		SetMessage("Woman", "Please", 3.0f);
		SetEntityActive("block_box_27", true);
		SetLanternActive(false, false);
		SetLampLit("bonfire_1", false, false);
		SetLightVisible("PointLight_1", true);
		SetLightVisible("PointLight_2", true);
		SetFogColor(0.5f, 0.5f, 0.6f, 1.0f);
		SetFogProperties(9.0f, 150.0f, 1.2f, false);
		SetSkyBoxColor(0.5f, 0.5f, 0.6f, 1.0f);
		SetPlayerHealth(60.0f);
		SetPlayerSanity(71.0f);
		SetPlayerCrouching(true);
		StopPlayerLookAt();
		TeleportPlayer("PlayerStartArea_2");
	}
	if(asTimer == "nightpart3")
	{
		AddTimer("nightpart4", 3.0f, "TimerSleepEvents");
		SetMessage("Woman", "WakeUp", 3.0f);
	}
	if(asTimer == "nightpart4")
	{
		AddTimer("nightpart5", 3.0f, "TimerSleepEvents");
		SetMessage("Woman", "INeedYou", 3.0f);
	}
	if(asTimer == "nightpart5")
	{
		AddTimer("nightpart6", 5.0f, "TimerSleepEvents");
		PlayMusic("03_piano_eerie_stinger03", false, 1.0f, 5.0f, 10, false);
		FadeGlobalSoundVolume(1.0f, 5.0f);
		SetMessage("Woman", "Jack", 3.0f);
	}
	if(asTimer == "nightpart6")
	{
		AddTimer("nightpart7", 4.0f, "TimerSleepEvents");
		FadeIn(0.0f);
		GiveSanityDamage(1.0f, true);
		PlayGuiSound("react_pant", 0.7f);
		PlayMusic("02_wood_theme", true, 0.7f, 1.0f, 0, false);
	}
	if(asTimer == "nightpart7")
	{
		SetPlayerCrouching(false);
		SetPlayerActive(true);
		SetMessage("Jack", "39", 5.0f);
		if(GetGlobalVarInt("MetStatuesCount") == 0) AddTimer("NoStatuesAchievement", 6.0f, "TimerUnlockAchievement");
	}
}

void TimerUnlockAchievement(string &in asTimer)
{
	AddQuest(asTimer, asTimer);
	PlayMusic("00_achievement_unlocked", false, 0.7f, 0.5f, 10, false);
	SetGlobalVarInt(asTimer, 1);
	SetMessage("Hints", asTimer, 10.0f);
	if(asTimer == "SanityAchievement")
	{
		GiveSanityBoost();
	}
}

void TimerFadeScreen(string &in asTimer)
{
	if(asTimer == "fadein")
	{
		FadeIn(2.0f);
	}
	if(asTimer == "fadeout")
	{
		FadeOut(2.0f);
	}
	if(asTimer == "fadeinactiveplayer")
	{
		FadeIn(2.0f);
		SetPlayerActive(true);
	}
	if(asTimer == "fadeoutactiveplayer")
	{
		FadeOut(2.0f);
		SetPlayerActive(true);	
	}	
}

void TimerStopLook(string &in asTimer)
{
	if(asTimer == "resetspeedmul")
	{
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerLookSpeedMul(1.0f);
		if(GetGlobalVarInt("FastSeekerAchievement") == 1)
			SetPlayerRunSpeedMul(1.175f);
		if(GetGlobalVarInt("WardrobeAchievement") == 1)
			SetPlayerJumpForceMul(1.175f);		
	}
	if(asTimer == "activeplayer")
	{
		SetPlayerActive(true);
	}
	StopPlayerLookAt();
}

void TimerPlayerReactions(string &in asTimer)
{
	if(asTimer == "scareeffect")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "breatheffect")
	{
		PlayGuiSound("react_breath", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "sigheffect")
	{
		PlayGuiSound("react_sigh", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "panteffect")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "scare")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, true);
	}
	else if(asTimer == "breath")
	{
		PlayGuiSound("react_breath", 0.5f);
		GiveSanityDamage(4.0f, false);
	}
	else if(asTimer == "sigh")
	{
		PlayGuiSound("react_sigh", 0.5f);
		GiveSanityDamage(2.0f, false);
	}
	else if(asTimer == "pant")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, true);
	}
}