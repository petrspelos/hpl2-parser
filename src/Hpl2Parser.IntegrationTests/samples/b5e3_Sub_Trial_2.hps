void OnStart()
{
	/*if(ScriptDebugOn()) //Debug stuff
	{
		GiveItemFromFile("lantern", "lantern.ent");
		for(int i=0;i<10;i++) GiveItemFromFile("tinderbox_"+i, "tinderbox.ent");
		for(int i=0;i<10;i++) GiveItemFromFile("potion_health_"+i, "potion_health.ent");
		for(int i=0;i<10;i++) GiveItemFromFile("potion_sanity_"+i, "potion_sanity.ent");
		
		GiveItemFromFile("drilldo", "hand_drill.ent");
		GiveItemFromFile("closet_key", "key_study.ent");
		GiveItemFromFile("BoneSaw", "bone_saw.ent");
	}*/
	SetupLoadScreen("Loading", "Load_2", 0, "load_lab.png");
	GiveItemFromFile("BoneSaw", "bone_saw.ent");
	
	for(int i=0;i<10;i++) FadeLightTo("FFL_"+i, 0,0,0,0,-1, 0.1f);
	SetLocalVarInt("Quests", 0);
	SetGlobalVarInt("DrillNumber", 0);
	SetEntityInteractionDisabled("Oinker", true);
	SetEntityInteractionDisabled("STATICMeat", true);
	
	StartTrial(); //Call for opening
	
	AddEntityCollideCallback("Player", "lib_doors_unlockable", "lib_doors", false, 0);
	
	AddUseItemCallback("", "drilldo", "GuestRoom", "UnlockGuestDoor", true);
	AddUseItemCallback("", "closet_key", "small_cabinet", "UnlockCloset", false);
	
	AddUseItemCallback("", "Chemical", "PigArea", "DressPig", false);
	AddUseItemCallback("", "BoneSaw", "PigArea", "DressPig", false);
	
	AddUseItemCallback("", "PigMeat", "Wine_1", "WinedPig", false);
	AddUseItemCallback("", "PigMeat", "Wine_2", "WinedPig", false);
	
	AddUseItemCallback("", "PigMeat", "OvenArea", "HotPork", false);
	AddUseItemCallback("", "PigMeatWine", "OvenArea", "HotPork", false);
	
	AddTimer("", 2.0f, "StaticPig");
	
	AddTimer("", 5, "Heal");
	
	SetEntityPlayerLookAtCallback("LookTrapDoor", "TrapMomentoGet", true);
}

void TrapMomentoGet(string &in asEntity, int alState){
	AddQuest("TrapDoor", "02_TrapDoor");
}

void Heal(string &in asTimer){
	AddDebugMessage("Health: "+GetPlayerHealth(), false);
	AddPlayerHealth(5);
	AddTimer("", 5, "Heal");
}

//Beginning Note
void GrabNote(string &in asEntity){
	FadeLightTo("HelpLight_1", 0,0,0,0,-1,3);
	AddQuest("Fireplace", "02_Fireplace");
	AddQuest("Pig", "02_Pig");
	AddQuest("Lock", "02_Lock");
}
void TouchBox(string &in asEntity){
	FadeLightTo("HintLight1", 0,0,0,0,-1,3);
	FadeLightTo("HintLight2", 0,0,0,0,-1,3);
	FadeLightTo("HintLight2_1", 0,0,0,0,-1,3);
}

//General
void NoEndDoor(string &in asEntity){SetMessage("Examine", "Trial2_NoEndDoor", 0);}
void UnlockableDoors(string &in asEntity){
	SetMessage("Examine", "Trial2_UnlockableDoor", 0);
	PlaySoundAtEntity("", "locked_door.snt", asEntity, 0.0f, true);
}
void UnlockDoor(string &in asItem, string &in asEntity){
	PlaySoundAtEntity("", "unlock_door.snt", asEntity, 0.0f, false);	
	SetSwingDoorLocked(asEntity, false, true);
}
void StuckDoor(string &in asEntity){
	SetMessage("Examine", "Trial2_StuckDoor", 0);
	PlaySoundAtEntity("", "locked_door.snt", asEntity, 0.0f, true);
}
void EndLook(string &in asTimer) //Call to end a LookAt
	{StopPlayerLookAt();}
void StaticPig(string &in asTimer)
	{SetPropStaticPhysics("Oinker", true);}

void Phonograph(string &in EntityName, int alState)
{
	if(alState==1){
		AddDebugMessage("MUSIC", false);
		PlaySoundAtEntity("", "sub_phonograph.snt", "phonograph_1", 2.25f, false);
		SetPropStaticPhysics("phonograph_1", true);
	}
}

void FuckThisLadder(string &in asEntity){
	if(QuestIsAdded("TrapDoor")==true){
		SetPlayerActive(false);
		FadeOut(1.0f);
		AddTimer(asEntity, 1.5, "LadderTimer");
		SetEntityActive("DaLadder", true);
		SetEntityActive("LadderArea", true);
	}
}
void LadderTimer(string &in asTimer){
	StartPlayerLookAt("LookAt_Ladder_2", 1.5, 5, "");
	SetPlayerActive(true);
	SetEntityActive(asTimer, false);
	TeleportPlayer("Trial2_Ladder");
	FadeIn(1.0f);
	AddTimer("", 1.0f, "EndLook");
	AddEntityCollideCallback("hatch_ceiling_1", "traphitto", "stopit", true, 0);
	CompleteQuest("TrapDoor", "02_TrapDoor");
}
void stopit(string &in asParent, string &in asChild, int alState){
	SetEntityActive("trapblock", true);
	SetEntityActive("trapblock_1", true);
}

//Able to unlock the library doors
void lib_doors(string &in asParent, string &in asChild, int alState){
	if(alState==1){
		AddDebugMessage("Can Unlock Doors", false);
		if(GetSwingDoorLocked("lib_door_1")==true){
			SetEntityPlayerInteractCallback("lib_door_1", "UnlockDatDoor", true);
		}
		if(GetSwingDoorLocked("lib_door_2")==true){
			SetEntityPlayerInteractCallback("lib_door_2", "UnlockDatDoor", true);
		}
		SetEntityPlayerInteractCallback("possibledoor", "UnlockDatDoor", true);
	}
	else if(alState==-1){
		AddDebugMessage("Can NOT Unlock Doors", false);
		if(GetSwingDoorLocked("lib_door_1")==true){
			SetEntityPlayerInteractCallback("lib_door_1", "UnlockableDoors", false);
		}
		if(GetSwingDoorLocked("lib_door_2")==true){
			SetEntityPlayerInteractCallback("lib_door_2", "UnlockableDoors", false);
		}
	}
}
void UnlockDatDoor(string &in asEntity){
	PlaySoundAtEntity("", "unlock_door.snt", asEntity, 0.0f, false);	
	SetSwingDoorLocked(asEntity, false, true);
	SetMessage("Interact", "UnlockedDoor", 0);
}

//Drill and Guest Room
void DrillNumber(string &in asEntity) //Called when a drill piece is picked up
{
	AddGlobalVarInt("DrillNumber", 1);
	AddDebugMessage("Drill Parts: "+GetGlobalVarInt("DrillNumber"), false);
}
void UnlockGuestDoor(string &in asItem, string &in asEntity)
{
	RemoveItem(asItem);
	PlaySoundAtEntity("DrillSound", "12_drill.snt", asEntity, 0.0f, false);
	AddTimer("1", 1.5, "GuestDoorTimer");
}
void GuestDoorTimer(string &in asTimer){
	if(asTimer=="1"){
		PlaySoundAtEntity("", "impact_metal_chain_med.snt", "GuestRoom", 0.0f, false);
		AddTimer("2", 0.5, "GuestDoorTimer");
	}
	else if(asTimer=="2"){
		SetEntityPlayerInteractCallback("GuestRoom", "", true);
		SetMessage("Interact", "Trial2_GuestDoorDrilled", 0);
		StopSound("DrillSound", 0.0);
		PlaySoundAtEntity("", "unlock_door.snt", "GuestRoom", 0.0f, false);	
		GiveItemFromFile("drilldo", "hand_drill.ent");
		SetSwingDoorLocked("GuestRoom", false, true);
		AddLocalVarInt("Quests", 1);
		AddDebugMessage(GetLocalVarInt("Quests")+"/3 Quests Complete!", false);
		CheckQuests();
		CompleteQuest("Lock", "02_Lock");
	}
}

//Cabinet
void LockedCabinet(string &in asEntity){SetMessage("Examine", "Trial2_LockedCabinet", 0);}
void UnlockCloset(string &in asItem, string &in asEntity){
	PlaySoundAtEntity("", "impact_metal_chain_med.snt", asEntity, 0.0f, false);
	SetSwingDoorLocked(asEntity, false, true);
	SetEntityPlayerInteractCallback(asEntity, "", true);
}

void FirePlace(string &in asEntity, string &in OnIgnite){
	AddDebugMessage("420 blaze it xDD", false);
	FadeLightTo("FFL_1", 1,0.5f,0.172f,1,-1, 1.0f);
	FadeLightTo("FFL_2", 0.828f,0.559f,0.204f,0,-1, 1.0f);
	FadeLightTo("FFL_3", 0.363f,0.128f,0,0,-1, 1.0f);
	AddLocalVarInt("Quests", 1);
	AddDebugMessage(GetLocalVarInt("Quests")+"/3 Quests Complete!", false);
	CheckQuests();
	CompleteQuest("Fireplace", "02_Fireplace");
}

//PIG
void InteractPig(string &in asEntity){
	if(GetLocalVarInt("PigVar")==0) SetMessage("Examine", "Trial2_Pig1", 0);
	if(GetLocalVarInt("PigVar")==1) SetMessage("Examine", "Trial2_Pig2", 0);
	if(GetLocalVarInt("PigVar")==2) SetMessage("Examine", "Trial2_Pig3", 0);
}
void DressPig(string &in asItem, string &in asEntity){
	if(GetLocalVarInt("PigVar")==0 && asItem=="Chemical"){
		AddLocalVarInt("PigVar", 1);
	}
	else if(GetLocalVarInt("PigVar")==0 && asItem=="BoneSaw")
		{SetMessage("Interact", "Trial2_BonesawOnPigBefore", 0);}
	else if(GetLocalVarInt("PigVar")!=0 && asItem=="Chemical") 
		{SetMessage("Interact", "Trial2_ChemOnPigAgain", 0);}
	else if(GetLocalVarInt("PigVar")==1 && asItem=="BoneSaw"){
		AddLocalVarInt("PigVar", 1);
		GiveItem("PigMeat", "Puzzle", "Trial2_PigMeat", "fresh_meat.tga", 1);
	}
	else if(GetLocalVarInt("PigVar")==2 && asItem=="BoneSaw")
		{SetMessage("Interact", "Trial2_NoMoreMiku", 0);}
}
void WinedPig(string &in asItem, string &in asEntity){
	if(GetLocalVarInt("WinePig?")==0){
		SetPlayerActive(false);
		RemoveItem(asItem);
		FadeOut(2);
		AddTimer("1", 1.75f, "WinedPiggy");
		AddTimer("2", 3, "WinedPiggy");
		SetLocalVarInt("WinePig?", 1);
	}
	else if(GetLocalVarInt("WinePig?")==1)
		{SetMessage("Interact", "Trial2_NoMoreWine", 0);}
}
void WinedPiggy(string &in asTimer){
	if(asTimer=="1"){
		PlaySoundAtEntity("WineSound", "12_epoxy_drip", "Player", 0, false);
		AddTimer("3", 1.5f, "WinedPiggy");
	}
	else if(asTimer=="2"){
		SetEntityActive("wine02_item_1", false);
		FadeIn(2);
		GiveItem("PigMeatWine", "Puzzle", "Trial2_PigMeatWine", "fresh_meat.tga", 1);
		SetPlayerActive(true);
		SetMessage("Interact", "Trial2_SoakingMeat", 0);
	}
	else if(asTimer=="3")
		{StopSound("WineSound", 0.5f);}
}

void HotPork(string &in asItem, string &in asEntity){
	if(asItem=="PigMeat")
		{SetMessage("Interact", "Trial2_NotReadyToCook", 0);}
	else if(asItem=="PigMeatWine"){
		RemoveItem(asItem);
		SetEntityActive("STATICMeat", true);
		SetMessage("Interact", "Trial2_PigDone", 0);
		AddLocalVarInt("Quests", 1);
		AddDebugMessage(GetLocalVarInt("Quests")+"/3 Quests Complete!", false);
		CheckQuests();
		CompleteQuest("Pig", "02_Pig");
	}
}

//CHECK FOR AMOUNT OF QUESTS DONE
void CheckQuests(){
	if(GetLocalVarInt("Quests")==3){
		SetMessage("Interact", "Trial2_Done", 0);
		SetEntityPlayerInteractCallback("bed_simple_movable_1", "EndLevel", true);
		AddDebugMessage("LOL NOW WHAT!!?!?!?!", false);
	}
	else return; //Quests done =! 3
}
void EndLevel(string &in asEntity){
	SetPlayerActive(false);
	FadeOut(2);
	AddTimer("", 2, "EndLevelTimer");
}
void EndLevelTimer(string &in asTimer){
	SetPlayerActive(true);
	RemoveItem("Chemical");
	RemoveItem("drilldo");
	RemoveItem("BoneSaw");
	RemoveItem("closet_key");
	ChangeMap("Sub_Trial_3", "Start_StartRoom", "","");
}


void StartTrial(){
	FadeOut(0);
	FadeIn(1.5);
	SetPlayerMoveSpeedMul(0);
	SetPlayerJumpDisabled(true);
	SetPlayerCrouchDisabled(true);
	MovePlayerHeadPos(0,-0.15,0,0.5, 0.1);
	AddTimer("Voices", 4.0f, "BeginCS");
	AddTimer("LookIt", 4.25f, "BeginCS");
	AddTimer("STARTO", 29.0f, "BeginCS");
	AddTimer("STARTO2", 30.5f, "BeginCS");
	AddTimer("STARTO3", 31.0f, "BeginCS");
}
void BeginCS(string &in asTimer){
	if(asTimer=="Voices"){
		AddEffectVoice("M2_S1_P1_01", "", "Voices", "02010101", false, "", 0, 0);
		AddEffectVoice("M2_S1_P1_02", "", "Voices", "02010102", false, "", 0, 0);
		AddEffectVoice("M2_S1_P1_03", "", "Voices", "02010103", false, "", 0, 0);
		AddEffectVoice("M2_S1_P1_04", "", "Voices", "02010104", false, "", 0, 0);
	}
	else if(asTimer=="LookIt")
	{
		StartPlayerLookAt("LOKKASRddarw", 1.0, 1.0, "");
	}
	else if(asTimer=="STARTO"){
		StopPlayerLookAt();
		StartEffectFlash(1.5, 1, 1.5); //TESTING THIS OUT PLS
	}
	else if(asTimer=="STARTO2"){
		MovePlayerHeadPos(0,0,0,1.0, 0.1);
		SetPlayerMoveSpeedMul(1.0);
		SetPlayerJumpDisabled(false);
		SetPlayerCrouchDisabled(false);
		PlayGuiSound("sub_warp.ogg", 1);
		TeleportPlayer("TheBed");
		PlaySoundAtEntity("", "03_amb_library.snt", "Sound_1", 0.8f, false);
		PlayMusic("trial_1.ogg", true, 1.25f, 1.5f, 0, true);
	}
}

void OnEnter(){
	AutoSave();
	PreloadSound("sub_phonograph.snt");
}
void OnLeave(){
	SetPlayerActive(true);
	RemoveItem("BoneSaw");
	RemoveItem("Tinderbox");
	RemoveItem("Tinderbox");
	RemoveItem("Tinderbox");
	RemoveItem("Tinderbox");
	RemoveItem("Tinderbox");
	StopMusic(0,0);
}