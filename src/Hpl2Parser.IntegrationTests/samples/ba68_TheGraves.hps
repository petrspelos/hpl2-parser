////////////////////////////
//Run when enteing map
void OnStart()
{ 
PlayMusic("Temple", true, 1.0f, 4.0f, 0, false);
SetPropHealth("castle_1", 40.0f);
AddUseItemCallback("","stone_hammer_chipper","boards","UsedHammerChipper",true);
AddUseItemCallback("","stone_hammer_chipper","AreaUnlock","UsedHammerChipperUnlock",true);
AddUseItemCallback("","hammer","boards","UsedHammer",true);
AddUseItemCallback("","keygraves","gravedoor","UsedKeyOnDoor",true);
AddUseItemCallback("","finishedexplosive","BombArea","explosion",true);
AddUseItemCallback("", "handle", "UseLever", "Lever", true);
AddEntityCollideCallback("Player", "AreaBrute", "Brute", true, 1);
AddEntityCollideCallback("Player", "death", "death", true, 1);
AddEntityCollideCallback("Player", "hurt", "hurt", true, 1);
AddEntityCollideCallback("Player", "hurt2", "hurt2", true, 1);
AddEntityCollideCallback("Player", "AreaSkulls", "Skulls", true, 1);
AddEntityCollideCallback("Player", "AreaMonster", "Monster", true, 1);
AddEntityCollideCallback("Player", "AreaSteps", "Steps", true, 1);
AddEntityCollideCallback("Player", "AreaScream", "Scream", true, 1);
AddEntityCollideCallback("Player", "AreaLadder", "LadderEvent", true, 1);
AddEntityCollideCallback("Player", "AreaNoBack", "deadend", false, 1);
AddEntityCollideCallback("Player", "AreaLockDoor", "LockDoor", true, 1);
AddEntityCollideCallback("Player", "AreaMusic", "Hallwaymusic", true, 1);
AddEntityCollideCallback("Player", "AreaMorality", "Morality", true, 1);
AddEntityCollideCallback("doorenemy", "AreaMonsterDoor2", "MonsterBreakDoor2", true, 1);
AddEntityCollideCallback("doorenemy2", "AreaMonsterDoor2", "MonsterBreakDoor2", true, 1);
AddEntityCollideCallback("cross2", "AreaCross", "Cross", true, 1);
AddEntityCollideCallback("bible2", "AreaBible", "Bible", true, 1);
AddEntityCollideCallback("coal_1", "AreaCoal", "coal", true, 1);
AddEntityCollideCallback("coal_2", "AreaCoal", "coal", true, 1);
AddEntityCollideCallback("coal_3", "AreaCoal", "coal", true, 1);
AddEntityCollideCallback("torch", "AreaFire", "LitPath", true, 1);
AddEntityCollideCallback("wolf", "AreaWolf", "ladderevent3", true, 1);
AddEntityCollideCallback("Player", "AreaGround", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround2", "CollideAreaGround2", false, 1);
AddEntityCollideCallback("Player", "cockroach_1", "cockroach1", true, 1);
AddEntityCollideCallback("Player", "cockroach_2", "cockroach2", true, 1);
AddEntityCollideCallback("Player", "cockroach_3", "cockroach3", true, 1);
AddEntityCollideCallback("Player", "cockroach_4", "cockroach4", true, 1);
AddEntityCollideCallback("Player", "cockroach_5", "cockroach5", true, 1);
SetLightVisible("PointLight_1", false);
SetLightVisible("PointLight_2", false);
SetLightVisible("PointLight_9", false);
SetEntityInteractionDisabled("orb", true);
SetPropEffectActive("coal_1" "", false, false);
SetPropEffectActive("coal_2" "", false, false);
SetPropEffectActive("coal_3" "", false, false);
AutoSave();
AddTimer("cavesounds", 50, "cavesounds");
AddTimer("ChapterStart", 3, "ChapterStart");
AddTimer("whispers", 80, "whispers");
SetMapDisplayNameEntry("TheGraves");
}

void ChapterStart(string &in asTimer)
{
SetMessage("Messages", "gravestart", 4);
AddTimer("chapterstart2", 5, "chapterstart2");
}

void chapterstart2(string &in asTimer)
{
SetMessage("Messages", "chapter4", 4);
}

void UsedHammer(string &in asItem, string &in asEntity)
{
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaBoards", false);
PlaySoundAtEntity("","break_wood_metal.snt","AreaBoards", 0,false);
SetEntityActive("hammerboards", true);
AddTimer("ch4hammer", 1, "ch4hammer");	
}

void UsedHammerChipper(string &in asItem, string &in asEntity)
{
SetEntityActive("chipperboards", true);
SetPlayerActive(false);
StartPlayerLookAt("AreaBoards2", 5, 50, "");
PlaySoundAtEntity("","puzzle_place_jar.snt","AreaBoards2", 0,false);
AddTimer("usedhammerchipper2", 2, "usedhammerchipper2");
}

void usedhammerchipper2(string &in asTimer)
{
SetEntityActive("hammerboards2", true);
AddTimer("usedhammerchipper3", 1, "usedhammerchipper3");
}

void usedhammerchipper3(string &in asTimer)
{
SetEntityActive("hammerboards2", false);
SetEntityActive("hammerboards3", true);
SetEntityActive("chipperboards", false);
SetEntityActive("chipperboards2", true);
SetEntityActive("boards", false);
SetEntityActive("boards2", true);
AddTimer("usedhammerchipper4", 1, "usedhammerchipper4");
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaBoards2", false);
PlaySoundAtEntity("","break_wood_metal.snt","AreaBoards2", 0,false);
PlaySoundAtEntity("","15_hammer.snt","AreaBoards2", 0,false);
}

void usedhammerchipper4(string &in asTimer)
{
SetEntityActive("hammerboards3", false);
SetEntityActive("chipperboards2", false);
SetPlayerActive(true);
StopPlayerLookAt();
}

void UsedHammerChipperUnlock(string &in asItem, string &in asEntity)
{
SetEntityActive("chipperunlock", true);
SetPlayerActive(false);
StartPlayerLookAt("AreaLook2", 5, 50, "");
PlaySoundAtEntity("","puzzle_place_jar.snt","AreaLook2", 0,false);
AddTimer("usedhammerchipperunlock2", 2, "usedhammerchipperunlock2");
}

void usedhammerchipperunlock2(string &in asTimer)
{
SetEntityActive("hammerunlock", false);
AddTimer("usedhammerchipperunlock3", 1, "usedhammerchipperunlock3");
}

void usedhammerchipperunlock3(string &in asTimer)
{
SetEntityActive("hammerunlock2", true);
SetEntityActive("chipperunlock2", true);
SetEntityActive("chipperunlock", false);
AddTimer("usedhammerchipperunlock4", 1, "usedhammerchipperunlock4");
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaLook2", false);
PlaySoundAtEntity("","break_wood_metal.snt","AreaLook2", 0,false);
PlaySoundAtEntity("","15_hammer.snt","AreaLook2", 0,false);
}

void usedhammerchipperunlock4(string &in asTimer)
{
SetEntityActive("hammerunlock2", false);
SetEntityActive("chipperunlock2", false);
SetEntityActive("AreaUnlock", false);
SetEntityActive("exit2", false);
SetEntityActive("exit3", true);
SetPlayerActive(true);
StopPlayerLookAt();
CompleteQuest("Ch4wayout", "Ch4wayout");
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","unlock_door","gravedoor", 0,false);
SetSwingDoorLocked("gravedoor",false, true);
SetEntityPlayerInteractCallback("gravedoor", "", false);
RemoveItem("keygraves");
}

void skull(string &in asEntity)
{
SetEntityActive("skull", false);
SetEntityActive("skull2", true);
PlaySoundAtEntity("","static_rock_stop.snt","skull2", 0,true);
SetLightVisible("PointLight_1", true);
SetLightVisible("PointLight_2", true);
}

//---- Cave in ----//
//Blowing up the cave in

void explosion(string &in asItem, string &in asEntity)
{
SetEntityActive("bomb", true);
SetEntityInteractionDisabled("bomb", true);
SetEntityActive("BombArea", false);
AddTimer("explosion2", 5, "explosion2");
RemoveItem("finishedexplosive");
SetMessage("Messages", "cover", 5);
PlaySoundAtEntity("","ui_use_tinderbox.snt","Player", 0,false);
}

void explosion2(string &in asTimer)
{
SetEntityActive("bomb", false);
SetEntityActive("block", false);
SetEntityActive("rock1", false);
SetEntityActive("rock2", false);
SetEntityActive("rock3", false);
SetEntityActive("rock4", false);
SetEntityActive("rock5", false);
SetEntityActive("rock6", false);
SetEntityActive("rock7", true);
SetEntityActive("rock8", true);
SetEntityActive("rock9", true);
SetEntityActive("rock10", true);
SetEntityActive("rock11", true);
SetEntityActive("rock12", true);
SetEntityActive("death", true);
SetEntityActive("hurt", true);
SetEntityActive("hurt2", true);
PlaySoundAtEntity("","explosion_rock_large","BombArea", 0,false);
CreateParticleSystemAtEntity("dustps", "ps_dust_break_25", "BombArea", false);
CreateParticleSystemAtEntity("dustps", "ps_dust_falling_rumble", "BombArea", false);
AddTimer("explosion3", 1, "explosion3");
CompleteQuest("Ch4cavein", "Ch4cavein");
CompleteQuest("Ch4bottles", "Ch4bottles");
}

void explosion3(string &in asTimer)
{
SetEntityActive("death", false);
SetEntityActive("hurt", false);
SetEntityActive("hurt2", false);
}

void death(string &in asParent, string &in asChild, int alState)
{
SetDeathHint("DeathHints", "Death5");
GivePlayerDamage(200, "BloodSplat", false, true);	
}

void hurt(string &in asParent, string &in asChild, int alState)
{
SetDeathHint("DeathHints", "Death5");
GivePlayerDamage(50, "BloodSplat", false, true);	
}

void hurt2(string &in asParent, string &in asChild, int alState)
{
SetDeathHint("DeathHints", "Death5");
GivePlayerDamage(25, "BloodSplat", false, true);	
}

//---- Open door ----//

void Bible(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("bible", true);
SetEntityActive("bible2", false);
PlaySoundAtEntity("","impact_book_low.snt", "AreaBible", 0, true);
AddLocalVarInt("VarIntGate", 1);
	GateDone();
}

void Cross(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("cross", true);
SetEntityActive("cross2", false);
PlaySoundAtEntity("","impact_metal_low.snt", "AreaCross", 0, true);
AddLocalVarInt("VarIntGate", 1);
	GateDone();
}

void GateDone(){

	if(GetLocalVarInt("VarIntGate") == 2){
		CompleteQuest("Ch4gate", "Ch4gate");
                SetMoveObjectState("Gate", 1.0f);
                PlayMusic("11_paper_howl.ogg", false, 1.0, 0, 0, true);
	}
}

void Skulls(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("s1", true);
SetEntityActive("s2", true);
SetEntityActive("s3", true);
SetEntityActive("s4", true);
SetEntityActive("s5", true);
SetEntityActive("s6", true);
SetEntityActive("s7", true);
SetEntityActive("s8", true);
SetEntityActive("s9", true);
SetEntityActive("s10", true);
SetEntityActive("s11", true);
SetEntityActive("s12", true);
SetEntityActive("s13", true);
SetEntityActive("s14", true);
FadeOut(3.5f);
FadeRadialBlurTo(0.10, 2);
FadeRadialBlurTo(0.10, 2);
FadeImageTrailTo(1, 2);
FadePlayerAspectMulTo(1.5, 1);
MovePlayerHeadPos(0.0f, -1.25f, 0.0f, 1.0f, 0.5f);
FadePlayerRollTo(-60, 10, 25);
SetPlayerRunSpeedMul(0.2f);
SetPlayerMoveSpeedMul(0.2f);
SetPlayerLookSpeedMul(0.2f);
SetPlayerCrouchDisabled(true);
SetInventoryDisabled(true);
SetLanternDisabled(true);
AddTimer("skulls2", 3, "skulls2");
PlaySoundAtEntity("","enemy_hallucination_disappear","Player", 0,false);
PlayMusic("04_event_stairs", false, 1.0f, 2.0f, 0, true);
PlaySoundAtEntity("","Whispers.snt","Player", 0,false);
}

void skulls2(string &in asTimer)
{
SetEntityActive("s1", false);
SetEntityActive("s2", false);
SetEntityActive("s3", false);
SetEntityActive("s4", false);
SetEntityActive("s5", false);
SetEntityActive("s6", false);
SetEntityActive("s7", false);
SetEntityActive("s8", false);
SetEntityActive("s9", false);
SetEntityActive("s10", false);
SetEntityActive("s11", false);
SetEntityActive("s12", false);
SetEntityActive("s13", false);
SetEntityActive("s14", false);
FadeIn(2.0f);
FadeImageTrailTo(0, 1.0f);
FadePlayerRollTo(0, 33, 33);
FadeRadialBlurTo(0.0, 1);
FadePlayerAspectMulTo(1, 3);
MovePlayerHeadPos(0.0, 0, 0, 1.0f, 0.5f);
SetPlayerRunSpeedMul(1.0f);
SetPlayerMoveSpeedMul(1.0f);
SetPlayerLookSpeedMul(1.0f);
SetPlayerCrouchDisabled(false);
SetInventoryDisabled(false);
SetLanternDisabled(false);
SetPlayerJumpDisabled(false);
PlaySoundAtEntity("breath", "react_breath.snt", "Player", 1.0 / 0.8f, false);
}

void OrbEvent(string &in asEntity)
{
SetEntityActive("AreaFire", true);
AddQuest("Ch4fire", "Ch4fire");
SetPlayerRunSpeedMul(0.0f);
SetPlayerMoveSpeedMul(0.0f);
AddTimer("orbevent2", 8, "orbevent2");
AddEffectVoice("ch4artifact.ogg", "", "Voice", "00_Ch4artifact", false, "", 0, 0 );
}

void orbevent2(string &in asTimer)
{
SetPlayerRunSpeedMul(1.0f);
SetPlayerMoveSpeedMul(1.0f);
}

void LitPath(string &in asParent, string &in asChild, int alState)
{
FadeOut(2.7f);
AddTimer("lit2", 3, "lit2");
CompleteQuest("Ch4fire", "Ch4fire");
SetPlayerRunSpeedMul(0.0f);
SetPlayerMoveSpeedMul(0.0f);
}

void lit2(string &in asTimer)
{
TeleportPlayer("PlayerStartArea_2");
RemoveItem("tinderbox");
AddTimer("lit3", 3, "lit3");
}

void lit3(string &in asTimer)
{
FadeIn(2.0f);
AddTimer("lit4", 7, "lit4");
CreateParticleSystemAtEntity("fire", "ps_fire_orb_room_orange", "AreaBurn", false);
CreateParticleSystemAtEntity("fire", "ps_fire_orb_room_orange", "AreaBurn2", false);
CreateParticleSystemAtEntity("fire", "ps_fire_orb_room_orange", "AreaBurn3", false);
CreateParticleSystemAtEntity("fire", "ps_fire_orb_room_orange", "AreaBurn4", false);
SetLightVisible("PointLight_9", true);
PlayMusic("08_amb_success.ogg", false, 1.0, 0, 0, true);
}

void lit4(string &in asTimer)
{
FadeOut(2.0f);
AddTimer("lit5", 3, "lit5");
}

void lit5(string &in asTimer)
{
SetPlayerRunSpeedMul(1.0f);
SetPlayerMoveSpeedMul(1.0f);
FadeIn(2.0f);
SetLightVisible("PointLight_9", false);
DestroyParticleSystem("fire");
SetEntityActive("platform", false);
SetEntityActive("platform2", false);
SetEntityActive("torch", false);
SetEntityPlayerInteractCallback("AreaBible", "AreaBible", true);
AddQuest("Ch4bible", "Ch4bible");
}

void AreaBible(string &in asEntity)
{
AddQuest("Ch4leave", "Ch4leave");
CompleteQuest("Ch4bible", "Ch4bible");
SetEntityActive("AreaMonster", true);
SetEntityActive("bible", false);
SetEntityActive("block2", true);
SetEntityActive("slime", true);
SetEntityActive("cave_in_1", true);   
SetMoveObjectState("Gate", 0.0f);
PlaySoundAtEntity("","scare_wall_crawl_single.snt", "Player", 0, true);
CreateParticleSystemAtEntity("", "ps_impact_dust_low", "AreaBible", false);
SetEntityPlayerInteractCallback("exit", "panicevent", false);
}

//---- On the way back ----//

void Monster(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("enemie", true);
SetPropHealth("door", 0.0f);
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaDoor", false);
PlaySoundAtEntity("","break_wood_metal","AreaDoor", 0,false);
AddEnemyPatrolNode("enemie","node_1",0,"");
AddEnemyPatrolNode("enemie","node_2",0,"");
AddEnemyPatrolNode("enemie","node_3",0,"");
AddEnemyPatrolNode("enemie","node_2",0,"");
AddEnemyPatrolNode("enemie","node_4",0,"");
AddEnemyPatrolNode("enemie","node_5",0,"");
AddEnemyPatrolNode("enemie","node_2",0,"");
AddEnemyPatrolNode("enemie","node_6",0,"");
AddEnemyPatrolNode("enemie","node_7",0,"");
AddEnemyPatrolNode("enemie","node_6",0,"");
AddEnemyPatrolNode("enemie","node_1",0,"");
CheckPoint ("Checkpoint2", "PlayerStartArea_4", "DeathSettings2", "DeathHints", "Killed");
}

//---- Panic events ----//

void panicevent(string &in asEntity)
{
AddTimer("panic2", 1, "panic2");
PlaySoundAtEntity("","door_prison_locked.snt","Player", 0,false);
SetPlayerActive(false);
StopMusic(10, 0);
}

void panic2(string &in asTimer)
{
SetMessage("Messages", "ch4locked", 5);
AddTimer("panic3", 2, "panic3");
}

void panic3(string &in asTimer)
{
StartPlayerLookAt("AreaLook", 5, 50, "");
AddTimer("panic4", 2, "panic4");
}

void panic4(string &in asTimer)
{
StopPlayerLookAt();
SetPlayerActive(true);
AddQuest("Ch4wayout", "Ch4wayout");
CompleteQuest("Ch4leave", "Ch4leave");
SetEntityActive("AreaUnlock", true);
}

void LadderEvent(string &in asParent, string &in asChild, int alState)
{	
SetPlayerActive(false);
StartPlayerLookAt("AreaLook3", 5, 50, "");
PlayGuiSound("player_falldamage_max.snt", 1.0f);
StartScreenShake(0.3f, 0.5f, 0.1f, 0.4f);
MovePlayerHeadPos(0.0f, -1.25f, 0.0f, 1.0f, 0.5f);
AddTimer("ladderevent2", 2, "ladderevent2");
}

void ladderevent2(string &in asTimer)
{
SetEntityActive("enemie2", true);
SetEntityActive("wolf", true);
AddEnemyPatrolNode("enemie2","node_77",0,"");
AddEnemyPatrolNode("wolf","node_77",0,"");
StartPlayerLookAt("AreaLook4", 5, 50, "");
}

void ladderevent3(string &in asParent, string &in asChild, int alState)
{	
StartPlayerLookAt("AreaLook3", 5, 50, "");
AddTimer("ladderevent4", 1, "ladderevent4");
PlaySoundAtEntity("","scare_wood_creak_mix.snt", "Player", 0, true);
}

void ladderevent4(string &in asTimer)
{
SetEntityActive("enemie2", false);
SetEntityActive("wolf", false);
SetEntityActive("wolf2", true);
MovePlayerHeadPos(0.0, 0, 0, 1.0f, 0.5f);
SetPlayerActive(true);
StopPlayerLookAt();
SetMessage("Messages", "ch4ladder", 4);
AddEnemyPatrolNode("wolf2","node_77",0,"");
}

void panic3timer(string &in asTimer)
{
ShowEnemyPlayerPosition("doorenemy");
AddTimer("panic3timer", 1, "panic3timer");
}

void panic3timer2(string &in asTimer)
{
ShowEnemyPlayerPosition("doorenemy2");
AddTimer("panic3timer2", 1, "panic3timer2");
}

void MonsterBreakDoor(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("section", false);
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "section", false);
PlaySoundAtEntity("","break_wood_metal","section", 0,false);
SetEntityActive("AreaMonsterDoor", false);
}

void MonsterBreakDoor2(string &in asParent, string &in asChild, int alState)
{	
SetPropHealth("sewer_arched_2", 0.0f);
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "sewer_arched_2", false);
PlaySoundAtEntity("","break_wood_metal","sewer_arched_2", 0,false);
SetEntityActive("AreaMonsterDoor2", false);
}

//---- Puzzles and events after the panics ----//

void Lever(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
SetEntityActive("lever", false);
SetEntityActive("lever2", true);
PlaySoundAtEntity("", "puzzle_place_jar.snt", "Player", 0.0f, false);
}

void lever_fail(string &in asEntity, int alState)
{
     if (alState == -1)
     {
SetMessage("Messages", "ch4leverfail", 4);
          return;
     }
}

void lever_sucess(string &in asEntity, int alState)
{
     if (alState == -1)
     {
SetMoveObjectState("section", 1.0f);
PlaySoundAtEntity("","unlock_door","section", 0,false);
SetEntityActive("lever", true);
SetEntityActive("lever2", false);
ClearEnemyPatrolNodes("doorenemy");
ShowEnemyPlayerPosition("doorenemy");
CheckPoint ("Checkpoint5", "PlayerStartArea_8", "DeathSettings4", "DeathHints", "Ch4run");
AddTimer("panic3timer", 1, "panic3timer");
GiveItem("handle", "", "lever", "lever_l03.tga", 0);
          return;
     }
}

void coal_fail(string &in asEntity, int alState)
{
     if (alState == -1)
     {
SetMessage("Messages", "ch4coalfail", 4);
          return;
     }
}

void valve(string &in asEntity, int alState)
{
     if (alState == -1)
     {
SetEntityInteractionDisabled("valve", true);
CreateParticleSystemAtEntity("", "ps_steam_puff", "AreaValve", false);
CreateParticleSystemAtEntity("", "ps_steam", "AreaPipe", false);
PlaySoundAtEntity("", "13_press_done.snt", "AreaValve", 0.0f, false);
PlaySoundAtEntity("", "13_steam.snt", "AreaPipe", 0.0f, false);
AddLocalVarInt("VarIntMachine", 1);
MachineDone();
          return;
     }
}

void coal_sucess(string &in asEntity, int alState)
{
     if (alState == -1)
     {
SetEntityConnectionStateChangeCallback("coalever", "");
SetPropEffectActive("coal_1" "", true, true);
SetPropEffectActive("coal_2" "", true, true);
SetPropEffectActive("coal_3" "", true, true);
PlaySoundAtEntity("", "13_ignite.snt", "Player", 0.0f, false);
CreateParticleSystemAtEntity("", "ps_fire_orb_room_orange", "AreaCoal", false);
PlaySoundAtEntity("", "general_fire_burning.snt", "AreaCoal", 0.0f, false);
AddLocalVarInt("VarIntMachine", 1);
MachineDone();
          return;
     }
}

float gfCogWheelSpeed = 2.0;
//------------------------------------------

void CeilingCogWheelInteracted(string &in asEntity)
{
	AddDebugMessage("Interacted with cogwheel!", false);
	
	AttachBodyToStickyArea("StickyArea_1", "ceiling_machinery_cog_interact_1_Body_1");
	
	PlaySoundAtEntity("wheel11", "21_cog_slide.snt", "Player", 0.0f, true);

	AddTimer("CogWheelAttached", 0.5f, "TimerCogWheelAttached");
}

void TimerCogWheelAttached(string &in asTimer)
{
	//Remove the interactable cog wheel
	SetEntityActive("ceiling_machinery_cog_interact_1", false);
	
	//Make the non-interable wheel visible
	SetEntityActive("ceiling_machinery_cog_interact_static_2", true);
	
	PlaySoundAtEntity("wheel13", "21_cog_attach.snt", "Player", 0.0f, true);
	PlaySoundAtEntity("wheel2", "21_cog_wheel_big.snt", "Player", 1.0f, true);
        PlaySoundAtEntity("", "21_cog_wheel01.snt", "AreaCog", 0.0f, true);
	
	//Make all remaining wheel rotate
	RotatePropToSpeed("ceiling_machinery_cog_interact_static_2", 10, gfCogWheelSpeed, 0, 1, 0, true, ""); 
	RotatePropToSpeed("ceiling_machinery_cog_2", 10, gfCogWheelSpeed, 0, -1, 0, true, ""); 
	RotatePropToSpeed("ceiling_machinery_cog_5", 10, gfCogWheelSpeed, 0, 1, 0, true, "");
AddLocalVarInt("VarIntMachine", 1);
MachineDone(); 
	

}

void coal(string &in asParent, string &in asChild, int alState)
{
AddLocalVarInt("VarIntCoal", 1);
	CoalDone();
}

void CoalDone(){

	if(GetLocalVarInt("VarIntCoal") == 3){
	   SetEntityConnectionStateChangeCallback("coalever", "coal_sucess");
                
	}
}

void MachineDone(){

	if(GetLocalVarInt("VarIntMachine") == 3){
	   SetEntityPlayerInteractCallback("button", "button_sucess", true); 
	}
}

void button_sucess(string &in asEntity)
{
SetEntityConnectionStateChangeCallback("lever2", "lever_sucess");
SetEntityConnectionStateChangeCallback("button", "");
CompleteQuest("Ch4machine", "Ch4machine");
PlayMusic("04_puzzle_acid.ogg", false, 1.0f, 0.5, 15, false);
SetEntityActive("block3", true);
SetEntityActive("AreaNoBack", true);
SetEntityActive("blood", true);
SetEntityActive("blood_1", true);
SetEntityActive("blood_2", true);
SetEntityActive("blood_3", true);
SetEntityActive("blood_4", true);
SetEntityActive("blood_5", true);
SetEntityActive("doorenemy", true);
AddEnemyPatrolNode("doorenemy","node_78",0,"");
AddEnemyPatrolNode("doorenemy","node_79",0,"");
AddEnemyPatrolNode("doorenemy","node_80",0,"");
AddEnemyPatrolNode("doorenemy","node_81",0,"");
AddEnemyPatrolNode("doorenemy","node_80",0,"");
AddEnemyPatrolNode("doorenemy","node_79",0,"");
AddEnemyPatrolNode("doorenemy","node_80",0,"");
AddEnemyPatrolNode("doorenemy","node_79",0,"");
AddEnemyPatrolNode("doorenemy","node_78",0,"");
CheckPoint ("Checkpoint4", "PlayerStartArea_7", "DeathSettings3", "DeathHints", "Killed");
}

void LockDoor(string &in asParent, string &in asChild, int alState)
{	
SetPlayerActive(false);
StartPlayerLookAt("AreaLook5", 5, 50, "");
SetSwingDoorLocked("lastdoor",true, true);
AddTimer("lockdoor2", 2, "lockdoor2");
AddTimer("lockdoor3", 6, "lockdoor3");
SetEntityActive("doorenemy", false);
SetEntityActive("doorenemy2", false);
RemoveTimer("panic3timer");
RemoveTimer("panic3timer2");
SetPlayerRunSpeedMul(1.0f);
CheckPoint ("Checkpoint7", "PlayerStartArea_9", "DeathSettings", "DeathHints", "Killed");
}

void lockdoor2(string &in asTimer)
{
StopPlayerLookAt();
AddQuest("Ch4lastroom", "Ch4lastroom");
SetSwingDoorLocked("barricade",true, true);
}

void lockdoor3(string &in asTimer)
{
AddTimer("lockdoor4", 2, "lockdoor4");
PlaySoundAtEntity("","16_ladder_imp1.snt", "AreaLook5", 0, true);
CreateParticleSystemAtEntity("", "ps_hit_metal", "AreaLook5", false);
AddEffectVoice("ch4giveup.ogg", "", "Voice", "00_Ch4giveup", false, "", 0, 0 );	
}

void lockdoor4(string &in asTimer)
{
SetPlayerActive(true);
PlaySoundAtEntity("","16_ladder_imp2.snt", "AreaLook5", 0, true);
CreateParticleSystemAtEntity("", "ps_hit_metal", "AreaLook5", false);
}

//---- Etc ----//

void Morality(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);
}

void cockroach1(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("cockroach_1", false);
PlaySoundAtEntity("","impact_organic_low.snt", "cockroach_1", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "cockroach_1", false);	
}

void cockroach2(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("cockroach_2", false);
PlaySoundAtEntity("","impact_organic_low.snt", "cockroach_2", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "cockroach_2", false);		
}

void cockroach3(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("cockroach_3", false);
PlaySoundAtEntity("","impact_organic_low.snt", "cockroach_3", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "cockroach_3", false);		
}

void cockroach4(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("cockroach_4", false);
PlaySoundAtEntity("","impact_organic_low.snt", "cockroach_4", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "cockroach_4", false);		
}

void cockroach5(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("cockroach_5", false);
PlaySoundAtEntity("","impact_organic_low.snt", "cockroach_5", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "cockroach_5", false);		
}

void bottlequest(string &in asEntity)
{
AddQuest("Ch4bottles", "Ch4bottles");
}

void Steps(string &in asParent, string &in asChild, int alState)
{	
PlaySoundAtEntity("","scare_wood_creak_mix.snt", "Player", 0, true);
AddTimer("scare2", 3, "scare2");
AddTimer("steps2", 2, "steps2");
}

void steps2(string &in asTimer)
{
PlaySoundAtEntity("","scare_slam_door.snt", "Player", 0, true);
SetEntityActive("AreaScream", true);
AddEffectVoice("victor_terrorized_01.ogg", "", "Blank", "Blank", false, "", 0.2, 5);
}

void Scream(string &in asParent, string &in asChild, int alState)
{	
AddEffectVoice("victor_dying_01.ogg", "", "Blank", "Blank", false, "", 0.2, 5);
}

void closet(string &in asEntity)
{
SetEntityActive("1", true);
SetEntityActive("2", true);
SetEntityActive("3", true);
SetEntityActive("4", true);
SetEntityActive("5", true);
SetEntityActive("6", true);
AddPropImpulse("closet", 20, 5, 5, "world");
SetEntityPlayerInteractCallback("closet", "", false);
AddTimer("scare", 1, "scare");
}

void scare(string &in asTimer)
{
GiveSanityDamage(10, true);
PlaySoundAtEntity("breath", "react_breath.snt", "Player", 1.0 / 0.8f, false);
}

void scare2(string &in asTimer)
{
PlaySoundAtEntity("breath", "react_breath.snt", "Player", 1.0 / 0.8f, false);
}

void bed(string &in asEntity)
{
SetEntityActive("body", true);
AddTimer("bed2", 3, "bed2");
StartPlayerLookAt("AreaBody", 5, 50, "");
PlaySoundAtEntity("","24_mb_04.snt", "AreaBody", 0, true);
}

void bed2(string &in asTimer)
{
GiveSanityDamage(10, true);
PlaySoundAtEntity("breath", "react_breath.snt", "Player", 1.0 / 0.8f, false);
SetEntityActive("body", false);
StopPlayerLookAt();
}

void Hallwaymusic(string &in asParent, string &in asChild, int alState)
{
AddEffectVoice("ch4dog.ogg", "", "Voice", "00_Ch4dog", false, "", 0, 0 );
PlayMusic("05_paper_transformation", false, 1.0f, 2.0f, 0, true);
AutoSave();
}

void notemusic(string &in asEntity)
{
AddTimer("notemusic2", 1, "notemusic2");
PlayMusic("18_paper_daniel02", false, 1.0f, 2.0f, 0, true);
}

void notemusic2(string &in asTimer)
{
PlayMusic("Temple", true, 1.0f, 4.0f, 0, true);
}

void cavesounds(string &in asTimer)
{
AddTimer("cavesounds", 50, "cavesounds");
PlaySoundAtEntity("","04_rock.snt", "Player", 0, false);
StartScreenShake(0.03f,0.35f, 0.03f,4.5f);
}

void quest(string &in asEntity)
{
AddQuest("Ch4gate", "Ch4gate");
SetEntityActive("bible3", false);
SetEntityActive("bible2", true);
SetEntityActive("AreaCross", true);
SetEntityActive("AreaBible2", false);
}

void voice(string &in asEntity)
{
PlaySoundAtEntity("","Jonathansomewhere.snt", "AreaVoice", 0, false);
SetEntityPlayerInteractCallback("door", "", false);
}

void whispers(string &in asTimer)
{
PlaySoundAtEntity("","HalluVoices.snt", "Player", 0, false);
AddTimer("whispers", 250, "whispers");
}

//---- Easter egg ----//

void candle(string &in asEntityName, string &in asType)
{
AddLocalVarInt("VarIntCandles", 1);
	Easter();
}

void candle2(string &in asEntityName, string &in asType)
{
AddLocalVarInt("VarIntCandles", 1);
	Easter();
}

void candle3(string &in asEntityName, string &in asType)
{
AddLocalVarInt("VarIntCandles", 1);
	Easter();
}

void Easter(){

	if(GetLocalVarInt("VarIntCandles") == 3){
PlaySoundAtEntity("","03_in_a_bottle.snt", "AreaEaster", 0, true);
PlaySoundAtEntity("","00_faint.snt", "AreaEaster", 0, true);
CreateParticleSystemAtEntity("", "ps_dust_whirl", "AreaEaster", false);
CreateParticleSystemAtEntity("", "ps_orb_room_alex_die", "AreaEaster", false);
AddTimer("eastermessage", 3, "eastermessage");	
	}
}

//----- Insight ----//

void secretbutton(string &in asEntity)
{
SetMoveObjectState("movingwall_1", 10.5f);
}

void Insight(string &in asEntity)
{
SetPlayerActive(false);
PlaySoundAtEntity("","Insight.snt", "Player", 0, true);
SetMessage("Messages", "insight", 5);
AddTimer("insight2", 5, "insight2");
}

void insight2(string &in asTimer)
{
StartEffectEmotionFlash("Flash", "InsightJonathan", "");
SetPropActiveAndFade("orb_6_of_7", false, 1);
DestroyParticleSystem("ParticleSystem_40");
SetPlayerActive(true);
AddGlobalVarInt("Insight", 1);
}

//---- Death by fall ----//

void CollideAreaGround(string &in asParent, string &in asChild, int alState)
{
	
	GivePlayerDamage(200, "BloodSplat", true, true);
	PlayGuiSound("player_falldamage_max.snt", 1.0f);
        PlayGuiSound("L03_meat_snapsnt", 1.0f);
	StartScreenShake(0.3f, 0.5f, 0.1f, 0.4f);
        CheckPoint ("Checkpoint", "PlayerStartArea_2", "DeathSettings", "DeathHints", "Fall");
}

void CollideAreaGround2(string &in asParent, string &in asChild, int alState)
{
	AddDebugMessage("Speed is: "+GetPlayerYSpeed(), false);
	
	if(GetPlayerYSpeed() > -11) return;
 	
	GivePlayerDamage(200, "BloodSplat", true, true);
	PlayGuiSound("player_falldamage_max.snt", 1.0f);
        PlayGuiSound("L03_meat_snapsnt", 1.0f);
	StartScreenShake(0.3f, 0.5f, 0.1f, 0.4f);
        CheckPoint ("Checkpoint3", "PlayerStartArea_6", "DeathSettings", "DeathHints", "Fall");
}

void DeathSettings(string &in asName, int alCount)
{
SetPlayerHealth(50);
SetPlayerSanity(50);
}

void DeathSettings2(string &in asName, int alCount)
{
SetEntityActive("enemie", true);
SetPropHealth("door", 0.0f);
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaDoor", false);
PlaySoundAtEntity("","break_wood_metal","AreaDoor", 0,false);
AddEnemyPatrolNode("enemie","node_1",0,"");
AddEnemyPatrolNode("enemie","node_2",0,"");
AddEnemyPatrolNode("enemie","node_3",0,"");
AddEnemyPatrolNode("enemie","node_2",0,"");
AddEnemyPatrolNode("enemie","node_4",0,"");
AddEnemyPatrolNode("enemie","node_5",0,"");
AddEnemyPatrolNode("enemie","node_2",0,"");
AddEnemyPatrolNode("enemie","node_6",0,"");
AddEnemyPatrolNode("enemie","node_7",0,"");
AddEnemyPatrolNode("enemie","node_6",0,"");
AddEnemyPatrolNode("enemie","node_1",0,"");
}

void DeathSettings3(string &in asName, int alCount)
{
SetPlayerHealth(50);
SetPlayerSanity(50);
SetEntityActive("doorenemy", true);
AddEnemyPatrolNode("doorenemy","node_78",0,"");
AddEnemyPatrolNode("doorenemy","node_79",0,"");
AddEnemyPatrolNode("doorenemy","node_80",0,"");
AddEnemyPatrolNode("doorenemy","node_81",0,"");
AddEnemyPatrolNode("doorenemy","node_80",0,"");
AddEnemyPatrolNode("doorenemy","node_79",0,"");
AddEnemyPatrolNode("doorenemy","node_80",0,"");
AddEnemyPatrolNode("doorenemy","node_79",0,"");
AddEnemyPatrolNode("doorenemy","node_78",0,"");
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaDoor2", false);
PlaySoundAtEntity("","break_wood_metal","AreaDoor2", 0,false);
}

void DeathSettings4(string &in asName, int alCount)
{
SetPlayerHealth(50);
SetPlayerSanity(50);
SetEntityActive("doorenemy2", true);
AddTimer("panic3timer2", 1, "panic3timer2");
CheckPoint ("Checkpoint6", "PlayerStartArea_8", "DeathSettings5", "DeathHints", "Ch4run");
}

//If the player dies twice, make the event a little easier to survive

void DeathSettings5(string &in asName, int alCount)
{
SetPlayerHealth(80);
SetPlayerSanity(80);
SetEntityActive("doorenemy2", true);
AddTimer("panic3timer2", 1, "panic3timer2");
SetPlayerRunSpeedMul(1.2f);
}

//---- Messages ----//

void locked(string &in asEntity)
{
SetMessage("Messages", "locked", 4);
}

void brokenlock(string &in asEntity)
{
SetMessage("Messages", "ch4brokenlock", 4);
}

void brokenlock2(string &in asEntity)
{
SetMessage("Messages", "ch4brokenlock2", 4);
}

void bugde(string &in asEntity)
{
SetMessage("Messages", "bugde", 4);
}

void cavein(string &in asEntity)
{
SetMessage("Messages", "cavein", 5);
AddQuest("Ch4cavein", "Ch4cavein");
}

void explorefirst(string &in asEntity)
{
SetMessage("Messages", "explorefirst2", 4);
}

void abible(string &in asEntity)
{
SetMessage("Messages", "ch4abible", 4);
}

void ch4hammer(string &in asTimer)
{
SetMessage("Messages", "ch4hammer", 4);
SetEntityActive("hammerboards", false);
}

void eastermessage(string &in asTimer)
{
SetMessage("Messages", "eastermessage", 8);
SetEntityActive("potion_oil_large_1", true);
}

void buttonfail(string &in asEntity)
{
SetMessage("Messages", "machinefail", 4);
PlaySoundAtEntity("","14_elevator_clank.snt", "Player", 0, true);
AddQuest("Ch4machine", "Ch4machine");
}

void deadend(string &in asParent, string &in asChild, int alState)
{	
SetMessage("Messages", "ch4deadend", 4);
}

////////////////////////////
// Run when entering map
void OnEnter()
{
          
}

////////////////////////////
// Run when leaving map
void OnLeave()
{ 
SetupLoadScreen("loadscreentext", "...", 1, "load_ch4grave.png");
}



