string gsPathNodePrefix = "PathNodeArea_";
void OnEnter()
{
	PreloadParticleSystem("ps_area_fog_large.ps");
	PreloadParticleSystem("ps_area_fog_sewer_long_warmup.ps");
	PreloadParticleSystem("ps_dust_falling.ps");
	PreloadParticleSystem("ps_light_dust.ps");
	PreloadParticleSystem("ps_break_wood.ps");
	PreloadParticleSystem("ps_blood_drop.ps");
	PreloadParticleSystem("ps_orb_light_fade.ps");
	PreloadParticleSystem("ps_rose_petals.ps");

	PreloadSound("scare_scratch.snt");
	PreloadSound("scare_thump_low_loop.snt");
	PreloadSound("critter_rat.snt");
	PreloadSound("01_maze_amb_guardian.snt");
	PreloadSound("01_maze_amb_library.snt");
	PreloadSound("01_maze_clock_grandfather.snt");
	PreloadSound("01_maze_clock_desk.snt");
	PreloadSound("01_maze_deep_fog_blockable.snt");
	PreloadSound("01_maze_general_fire_burning.snt");
	PreloadSound("01_maze_slime_loop.snt");
	PreloadSound("01_maze_Agrippa_Strained_01.snt");
	PreloadSound("01_maze_angel_laugh.snt");
	PreloadSound("01_maze_checkpoint.snt");
	PreloadSound("01_maze_deep_fog.snt");
	PreloadSound("01_maze_door_knocking.snt");
	PreloadSound("01_maze_door_storage.snt");
	PreloadSound("01_maze_girl_cry.snt");
	PreloadSound("01_maze_hector_saved.snt");
	PreloadSound("01_maze_IGreetYou.snt");
	PreloadSound("01_maze_ImAlmostOutOfTime.snt");
	PreloadSound("01_maze_knock_door_strong.snt");
	PreloadSound("01_maze_orb_loop.snt");
	PreloadSound("01_maze_prisoner_whimp.snt");
	PreloadSound("01_maze_scare_whine_loop3.snt");
	PreloadSound("01_maze_stop_phonograph.snt");
	PreloadSound("01_maze_stranger_things.snt");
	PreloadSound("01_maze_ThankYou.snt");
	PreloadSound("01_maze_the_big_scream.snt");
	PreloadSound("01_maze_touch_painting.snt");
	PreloadSound("01_maze_touch_piano.snt");
	PreloadSound("01_maze_WatchYourBack.snt");
	PreloadSound("01_maze_woosh.snt");
	PreloadSound("01_maze_YourSoulShallSuffer.snt");
	PreloadSound("01_memory_whisper_rand.snt");
	PreloadSound("03_in_a_bottle.snt");
	PreloadSound("insanity_imageflash01.snt");
	PreloadSound("insanity_whisper.snt");
	PreloadSound("general_rain.snt");
	PreloadSound("15_fire.snt");
	
    SetMapDisplayNameEntry("Maze");
	SetInDarknessEffectsActive(false);
	SetupLoadScreen("LoadingHints", "01To02", 0, "game_loading_light.jpg");
}
void OnLeave()
{
	SetInDarknessEffectsActive(false);
}
void OnStart()
{	
	SetPlayerMoveSpeedMul(1.005f);
	AddTimer("one", 3.0f, "TimerWakeUp");
	AddTimer("blooddrop", 1, "TimerBloodDrop");
	AddTimer("TimerGirlCry", 50.0f, "TimerGirlCry");

	CheckPoint ("DefaultCheckPoint", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheKey");

	AddEntityCollideCallback("Player", "FallingBottlesArea", "CollideFallingBottlesArea", true, 1);
	AddEntityCollideCallback("Player", "AreaDeepFog_1", "CollideAreaDeepFog", false, 0);
	AddEntityCollideCallback("bruteevent01", "AreaPoofBruteEvent01", "PoofBruteEvent1", true, 1);
	AddEntityCollideCallback("suitorevent02", "AreaBloodDrop", "PoofSuitorEvent2", true, 1);
	AddEntityCollideCallback("Player", "NearPortalArea", "CollideNearPortalArea", true, 1);
	AddEntityCollideCallback("Player", "PortalEffectArea", "CollidePortalEffectArea", true, 1);
	AddEntityCollideCallback("Player", "PaintJumpScareArea", "CollidePaintJumpScareArea", true, 1);
	AddEntityCollideCallback("Player", "StrangeArea", "PlayStrangePiano", true, 1);
	AddEntityCollideCallback("Player", "AggroArea", "PlayAggroPiano", true, 1);
	AddEntityCollideCallback("Player", "LoveArea", "PlayLovePiano", true, 1);
	AddEntityCollideCallback("Player", "LookAtTinyDoorArea", "CollideLookAtTinyDoorArea", true, 1);
	AddEntityCollideCallback("Player", "NoPassArea_1", "CollideNoPassArea", false, 1);
	AddEntityCollideCallback("Player", "NoPassArea_2", "CollideNoPassArea", false, 1);
	AddEntityCollideCallback("Player", "NoPassArea_3", "CollideNoPassArea", false, 1);
	AddEntityCollideCallback("Player", "NoPassArea_4", "CollideNoPassArea", false, 1);
	AddEntityCollideCallback("Player", "nogoingback1", "ActivateBlockBox", false, 1);
	AddEntityCollideCallback("Player", "nogoingback2", "ActivateBlockBox", false, 1);
	AddEntityCollideCallback("Player", "nogoingback3", "ActivateBlockBox", false, 1);
	AddEntityCollideCallback("Player", "nogoingback4", "ActivateBlockBox", false, 1);
	AddEntityCollideCallback("Player", "DownTheHoleArea", "FallDownTheHole", true, 1);
	AddEntityCollideCallback("Player", "CloseLoveDoorArea", "CollideCloseLoveDoorArea", true, 1);
	AddEntityCollideCallback("Player", "CantYouSeeArea_1", "CollideCantYouSeeArea", true, 1);
	AddEntityCollideCallback("Player", "CantYouSeeArea_2", "CollideCantYouSeeArea", true, 1);
	AddEntityCollideCallback("Player", "GoDownLoveArea", "CollideGoDownArea", true, 1);
	AddEntityCollideCallback("Player", "GoDownGrandpaArea", "CollideGoDownArea", true, 1); 
	AddEntityCollideCallback("Player", "AreaVase_5", "CollideVase5Area", true, 1);
	AddEntityCollideCallback("Player", "AreaFoundTinyDoor", "CollideFoundTinyDoorArea", true, 1);
	AddEntityCollideCallback("Player", "AreaFire", "CollideAreaFire", false, 0);
	AddEntityCollideCallback("Player", "AreaFire_1", "CollideAreaFire", false, 0);
	AddEntityCollideCallback("Player", "DeathArea_1", "OutOfMap", false, 1);
	AddEntityCollideCallback("Player", "DeathArea_2", "OutOfMap", false, 1);
	AddEntityCollideCallback("Player", "RunForMonstersArea", "CollideRunForMonstersArea", true, 1);
	AddEntityCollideCallback("Player", "NearDoorArea01", "LoveFrameDoorFound", true, 1);
	AddEntityCollideCallback("Player", "NearDoorArea02", "SolitudeFrameDoorFound", true, 1);
	AddEntityCollideCallback("Player", "NearDoorArea03", "GrandpaFrameDoorFound", true, 1);
	AddEntityCollideCallback("Player", "NearDoorArea04", "EmptyFrameDoorFound", true, 1);
	AddEntityCollideCallback("Player", "EagleDoorArea01", "NearTheWayIsShut1", true, 1);
	AddEntityCollideCallback("Player", "EagleDoorArea02", "NearTheWayIsShut2", true, 1);
	AddEntityCollideCallback("Player", "EagleDoorArea03", "NearTheWayIsShut3", true, 1);
	AddEntityCollideCallback("Player", "EagleDoorArea04", "NearTheWayIsShut4", true, 1);
	AddEntityCollideCallback("suitorevent02", "SuitorGateArea", "SuitorDestroysGate", true, 1);
	AddEntityCollideCallback("Player", "CabinetArea", "PlayCabinetMusic", true, 1);
	AddEntityCollideCallback("Player", "ViolinArea", "PlayViolinMusic", true, 1);
	AddEntityCollideCallback("Player", "BlockedWayArea", "CollideBlockedWayArea1", true, 1);
	AddEntityCollideCallback("Player", "SecondBlockedWayArea", "CollideBlockedWayArea2", true, 1);
	AddEntityCollideCallback("Player", "ThirdBlockedWayArea", "CollideBlockedWayArea3", true, 1);
	AddEntityCollideCallback("Player", "FourthBlockedWayArea", "CollideBlockedWayArea4", true, 1);
	AddEntityCollideCallback("Player", "ReadyToRunArea", "CollideReadyToRunArea", true, 1);
	AddEntityCollideCallback("Player", "ScareArea_1", "CollideRedCandleArea", true, 1);
	AddEntityCollideCallback("Player", "HuntArea01", "CollideHuntArea1", true, 1);
	AddEntityCollideCallback("Player", "HuntArea02", "CollideHuntArea2", true, 1);
	AddEntityCollideCallback("Player", "HuntArea03", "CollideHuntArea3", true, 1);
	AddEntityCollideCallback("Player", "HuntArea04", "CollideHuntArea4", true, 1);
	AddEntityCollideCallback("Player", "HuntArea05", "CollideHuntArea5", true, 1);
	AddEntityCollideCallback("Player", "HuntArea06", "CollideHuntArea6", true, 1);
	AddEntityCollideCallback("Player", "HuntArea07", "CollideHuntArea7", true, 1);
	AddEntityCollideCallback("Player", "EscapedArea01", "CollideEndHuntArea", true, 1);
	AddEntityCollideCallback("Player", "BruteEventArea_1", "CollideBruteEventArea", true, 1);
	AddEntityCollideCallback("Player", "GruntEventArea_1", "CollideGruntEventArea", true, 1);
	AddEntityCollideCallback("Player", "GruntEventArea_2", "CollideGruntEventArea", true, 1);
	AddEntityCollideCallback("gruntevent05", "PoofGruntEvent5Area", "PoofGruntEvent5", true, 1);
	AddEntityCollideCallback("Player", "DeadWayArea", "CollideIGreetYouArea", true, 1);
	AddEntityCollideCallback("bruteevent01", "AreaDestroyDoorBrute", "CheckBruteBreakDoorEvent", true, 1);
	AddEntityCollideCallback("Player", "StorageArea", "ActivateTrapMemory", false, 1);
	AddEntityCollideCallback("Player", "WooshArea_3", "CollideWooshArea3", true, 1);
	AddEntityCollideCallback("Player", "WooshArea_2", "CollideWooshArea2", true, 1);
	AddEntityCollideCallback("Player", "WooshArea_1", "CollideWooshArea1", true, 1);
	AddEntityCollideCallback("Player", "SuitorEventArea_1", "CollideSuitorEventArea1", true, 1);
	AddEntityCollideCallback("Player", "RottenApplesArea_1", "ActivateRottenApples1", true, 1);
	AddEntityCollideCallback("Player", "RottenApplesArea_2", "ActivateRottenApples2", true, 1);
	AddEntityCollideCallback("Player", "KnockingArea", "StartKnocking", true, 1);
	AddEntityCollideCallback("Player", "Statue47Area", "ActivateStatue47", false, 0);
	AddEntityCollideCallback("Player", "Statue48Area", "ActivateStatue48", false, 0);
	AddEntityCollideCallback("Player", "BarrelArea_1", "TriggerSkyEvent1", true, 1);
	AddEntityCollideCallback("Player", "BarrelArea_2", "TriggerSkyEvent2", true, 1);
	AddEntityCollideCallback("Player", "BarrelArea_3", "TriggerSkyEvent3", true, 1);
	AddEntityCollideCallback("Player", "BarrelArea_4", "TriggerSkyEvent4", true, 1);
	AddEntityCollideCallback("Player", "BarrelArea_5", "TriggerSkyEvent5", true, 1);
	AddEntityCollideCallback("barrel01_10", "BarrelArea_1", "CollideFloor", true, 1);
	AddEntityCollideCallback("brickfalling_9", "BarrelArea_2", "CollideFloor", true, 1);
	AddEntityCollideCallback("vase02_ghost_6", "BarrelArea_3", "CollideFloor", true, 1);
	AddEntityCollideCallback("vase01_7", "BarrelArea_4", "CollideFloor", true, 1);
	AddEntityCollideCallback("Player", "CreateWrongDoorArea_1", "CreateWrongDoor", true, 1);
	AddEntityCollideCallback("Player", "CreateWrongDoorArea_2", "CreateWrongDoor", true, 1); 
	AddEntityCollideCallback("Player", "CreateWrongDoorArea_4", "CreateWrongDoor", true, 1);
	AddEntityCollideCallback("Player", "BottomStairsArea", "CollideBottomStairs", true, 1);
	AddEntityCollideCallback("Player", "CellsMusicArea", "CollideCellsMusicArea", true, 1);
	AddEntityCollideCallback("Player", "EmptyMusicArea", "CollideEmptyMusicArea", true, 1);
	AddEntityCollideCallback("Player", "WomanLaughArea", "CollideWomanLaughArea", true, 1);
	AddEntityCollideCallback("Player", "WomanBruteArea", "CollideWomanBruteArea", true, 1);
	AddEntityCollideCallback("Player", "GoDownAloneArea", "CollideGoDownArea", true, 1);
	AddEntityCollideCallback("Player", "RevealPianoArea", "CollideRevealPianoArea", true, 1); 
	AddEntityCollideCallback("Player", "PlayPianoArea", "CollidePlayPianoArea", true, 1);
	AddEntityCollideCallback("Player", "LitWallCandleArea_1", "CollideLitWallCandleArea", true, 1);
	AddEntityCollideCallback("Player", "LitWallCandleArea_2", "CollideLitWallCandleArea", true, 1);
	AddEntityCollideCallback("Player", "LitWallCandleArea_3", "CollideLitWallCandleArea", true, 1);
	AddEntityCollideCallback("Player", "ScaryStepsArea10", "PlayScarySteps", true, 1);
	AddEntityCollideCallback("Player", "WhispersArea10", "PlayWhispers", true, 1);
	AddEntityCollideCallback("Player", "StopRunningArea", "CollideStopRunningArea", true, 1);
	AddEntityCollideCallback("Player", "SafeArea", "CollideSafeArea", false, 1);
	AddEntityCollideCallback("Player", "KnifeArea", "ActivateKnife", true, 1);
	AddEntityCollideCallback("Player", "OrbKeyArea", "ActivateOrbKey", true, 1);
	AddEntityCollideCallback("Player", "AreaAmbushEscape_1", "CollideAreaAmbushEscape", true, 1);
	AddEntityCollideCallback("Player", "AreaAmbushEscape_2", "CollideAreaAmbushEscape", true, 1);
	
	AddUseItemCallback("", "grunt_key", "orbdoorgrunt", "UsedKeyOnEndingDoor", true);
	AddUseItemCallback("", "brute_key", "orbdoorbrute", "UsedKeyOnEndingDoor", true);
	AddUseItemCallback("", "love_key", "orbdoorlove", "UsedKeyOnEndingDoor", true);
	AddUseItemCallback("", "nightmare_key", "orbdoornightmare", "UsedKeyOnEndingDoor", true);
	AddUseItemCallback("", "brother_key", "wooddoorbrother", "UsedKeyOnEndingDoor", true);
	AddUseItemCallback("", "orb_key_1", "wooddoororb_1", "UsedKeyOnEndingDoor", true);
	AddUseItemCallback("", "orb_key_2", "wooddoororb_2", "UsedKeyOnWoodDoor", true);
	AddUseItemCallback("", "fresh_meat_1", "fire_place_1", "ActivateHollowNeedle", true);
	AddUseItemCallback("", "fresh_meat_1", "bonfire_nosound_1", "ActivateHollowNeedle", true);
	AddUseItemCallback("", "fresh_meat_1", "bonfire_1", "ActivateHollowNeedle", false);
	AddUseItemCallback("", "fresh_meat_1", "bonfire_2", "ActivateHollowNeedle", false);
	AddUseItemCallback("", "fresh_meat_1", "candlestick_wall_199", "ActivateHollowNeedle", false);
	AddUseItemCallback("", "hollow_needle_1", "castle_silent_1", "StopKnock", true);
	AddUseItemCallback("", "hollow_needle_2", "castle_silent_1", "StopKnock", true);
	AddUseItemCallback("", "hollow_needle_3", "castle_silent_4", "OpenBottomStairsDoor", true);
	AddUseItemCallback("", "ceremony_knife_1", "DestroyableSlimeArea", "UseKnifeOnWeb", true);
	AddUseItemCallback("", "ceremony_knife_1", "web_1", "UseKnifeOnWeb", false);
	AddUseItemCallback("", "ceremony_knife_1", "web_2", "UseKnifeOnWeb", false);
	AddUseItemCallback("", "key_jar_1_item", "metal_1", "UsedKeyOnPrisonDoor", true);
	
	FadeGlobalSoundVolume(0.0f, 0.0f);
	FadeOut(0.0f);
	
	SetEntityActive("blockboxstart_1", true);
	SetEntityActive("blockboxstart_2", true);
	SetEntityActive("blockboxstart_3", true);
	SetEntityActive("blockboxstart_4", true);
	
	SetEntityCustomFocusCrossHair("FadeKnifeArea", "Pick");
	SetEntityCustomFocusCrossHair("HeartNoteArea", "Pick");
	
	SetEntityInteractionDisabled("emotion_stone_1", true);
	SetEntityInteractionDisabled("emotion_stone_starter", true);
	SetEntityInteractionDisabled("castle_silent_1", true);
	SetEntityInteractionDisabled("torturetable_2", true);
	SetEntityInteractionDisabled("phonograph_3", true);
	SetEntityInteractionDisabled("painting01_dyn_3", true);
	SetEntityInteractionDisabled("friendlyman_1", true);
	SetEntityInteractionDisabled("friendlyman_2", true);
	SetEntityInteractionDisabled("friendlyman_3", true);
	SetEntityInteractionDisabled("friendlyman_4", true);
	SetEntityInteractionDisabled("friendlyman_5", true);
	SetEntityInteractionDisabled("castle_silent_2", true);
	SetEntityInteractionDisabled("castle_silent_3", true);
	SetEntityInteractionDisabled("castle_silent_4", true);
	SetEntityInteractionDisabled("cellar_wood01_3", true);
	SetEntityInteractionDisabled("piano_8", true);
	SetEntityInteractionDisabled("level_celler_1", true);
	SetEntityInteractionDisabled("candlestick_floor_3", true);
	
	SetEntityPlayerInteractCallback("hollow_needle_1","TimerStopLook",true);
	SetEntityPlayerInteractCallback("hollow_needle_2","TimerStopLook",true);
	
	SetInsanitySetEnabled("Ch02", true); 
	SetInsanitySetEnabled("Ch01", true);
	
    SetLightVisible("MazeBoxLight", false);
	SetLightVisible("PointLight_1", false);
    SetLightVisible("PointLight_2", false);
    SetLightVisible("PointLight_42", false);
    SetLightVisible("PointLight_44", false);
	SetLightVisible("PointLight_52", false);
	SetLightVisible("PointLight_57", false);
	SetLightVisible("PointLight_58", false);
	SetLightVisible("PointLight_60", false);
	SetLightVisible("PointLight_61", false);
	SetLightVisible("PointLight_62", false);
	SetLightVisible("PointLight_80", false);
	SetLightVisible("PointLight_88", false);
	SetLightVisible("PointLight_92", false);
	SetLightVisible("PointLight_91", false);
	SetLightVisible("PointLight_102", false);
	SetLightVisible("PointLight_104", false);
	SetLightVisible("PointLight_button1", false);
	SetLightVisible("PointLight_button2", false);
	SetLightVisible("PointLight_button3", false);
	SetLightVisible("SuitorEvent01Light", false);
	SetLightVisible("grunt_key_light", false);
	SetLightVisible("brute_key_light", false);
	SetLightVisible("love_key_light", false);
	SetLightVisible("LightStorageStone", false);
	SetLightVisible("GruntWindowLight", false);
	SetLightVisible("WYBLight_1", false);
	SetLightVisible("WYBLight_2", false);
	SetLightVisible("WYBLight_3", false);
	SetLightVisible("WYBLight_4", false);
	
	SetLocalVarInt("BrotherBonusVar", 0);
	SetLocalVarInt("BruteBrokenDoorVar", 0);
	SetLocalVarInt("ButtonSimpleVar", 0);
	SetLocalVarInt("CantYouSeeVar", 0);
	SetLocalVarInt("CorrectRitualCandleVar", 0);
	SetLocalVarInt("DeathByFallingVar", 0);
	SetLocalVarInt("DeathBySolitudeVar", 0);
	SetGlobalVarInt("GrandpaFreeVar", 0);
	SetGlobalVarInt("PieceOfOrbVar", 0);
	SetGlobalVarInt("CheckPointFoundVar", 0);
	SetLocalVarInt("IGreetYouVar", 0);
	SetLocalVarInt("KeyVar", 0);
	SetLocalVarInt("LoweredLeversVar", 0);
	SetLocalVarInt("MainMemoriesVar", 0);
	SetLocalVarInt("MemoriesVar", 0);
	SetLocalVarInt("HiddenMemoryVar", 0);
	SetLocalVarInt("OpenedDoorsVar", 0);
	SetLocalVarInt("StrangePianoPlayedVar", 0);
	SetLocalVarInt("WindowsVar", 0);
	SetLocalVarInt("PrisonDoorVar", 0);
	SetLocalVarInt("giMonsterSpawnTime", 4);
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	
	SetPlayerActive(false);
	SetPlayerLampOil(50.0f);
	SetRadialBlurStartDist(20.0f);
	
    StartPlayerLookAt("starterletter", 2.0f, 2.0f, "");
	
	for(int w=2;w<=18;w++) AddEntityCollideCallback("Player", "AreaDeepFog_"+w, "CollideAreaDeepFog", false, 0);
	for(int j=96; j<=101; j++) SetPropActiveAndFade("angel_statue_"+j, true, 2.0f);
	for(int p=2;p<=16;p++)
	{
        AddUseItemCallback("orbpart1", "orbpiece_1", "orb_pedestal_"+p, "SetMonstersInactive", true);
        AddUseItemCallback("orbpart2", "orbpiece_2", "orb_pedestal_"+p, "SetMonstersInactive", true);
        AddUseItemCallback("orbpart3", "orbpiece_3", "orb_pedestal_"+p, "SetMonstersInactive", true);
        AddUseItemCallback("orbpart4", "orbpiece_4", "orb_pedestal_"+p, "SetMonstersInactive", true);
        AddUseItemCallback("orbpart5", "orbpiece_5", "orb_pedestal_"+p, "SetMonstersInactive", true);
        AddUseItemCallback("orbpart6", "orbpiece_6", "orb_pedestal_"+p, "SetMonstersInactive", true);
	}
	for(int y=1; y<=10; y++)
	{
		AddEntityCollideCallback("Player", "ScaryStepsArea0"+y, "PlayScarySteps", true, 1);
		AddEntityCollideCallback("Player", "WhispersArea0"+y, "PlayWhispers", true, 1);
		AddEntityCollideCallback("Player", "ScaryStepsArea1"+y, "PlayScarySteps", true, 1);
		AddEntityCollideCallback("Player", "WhispersArea1"+y, "PlayWhispers", true, 1);
		SetEntityActive("cell_box_"+y, false);
	}
	for(int i=1;i<=6;i++)
	{   
		AddEntityCollideCallback("Player", "GruntArea0"+i, "CollideEnemyArea", false, 1);
        AddEntityCollideCallback("Player", "BruteArea0"+i, "CollideEnemyArea", false, 1);
		AddEntityCollideCallback("Player", "SuitorArea0"+i, "CollideEnemyArea", false, 1);
	}
}

void ResetMonstersActivationAreas()
{
	SetLocalVarInt("MonstersActivatedVar", 0);
	if(GetLocalVarInt("MemoriesVar") <= 29)
	{
		SetEntityActive("GruntArea01", true);
		SetEntityActive("GruntArea02", true);
		SetEntityActive("GruntArea03", true);
		SetEntityActive("GruntArea04", true);
		SetEntityActive("GruntArea06", true);
		SetEntityActive("BruteArea01", true);
		SetEntityActive("BruteArea03", true);
		SetEntityActive("BruteArea04", true);
		SetEntityActive("BruteArea05", true);
		SetEntityActive("BruteArea06", true);
		SetEntityActive("SuitorArea01", true);
		SetEntityActive("SuitorArea03", true);
		SetEntityActive("SuitorArea04", true);
		SetEntityActive("SuitorArea05", true);
		SetEntityActive("SuitorArea06", true);
		SetEntityActive("GruntArea05", true);	
		SetEntityActive("BruteArea02", true);	
		SetEntityActive("SuitorArea02", true);
	}
	if(GetLocalVarInt("KeyVar") == 6 && GetLocalVarInt("MemoriesVar") >= 24)
	{
		for(int i=1;i<=6;i++)
		{
			SetEntityActive("GruntArea0"+i, false);
			SetEntityActive("BruteArea0"+i, false);
			SetEntityActive("SuitorArea0"+i, false);
		}
	}
	else
	{
		if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_2")
		{
			SetEntityActive("BruteArea03", false);
			RemoveTimer("brute03");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_3")
		{
			SetEntityActive("BruteArea05", false);
			RemoveTimer("brute05");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_4")
		{
			SetEntityActive("SuitorArea05", false);
			RemoveTimer("suitor05");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_5")
		{
			SetEntityActive("SuitorArea06", false);
			RemoveTimer("suitor06");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_6")
		{
			SetEntityActive("BruteArea01", false);
			RemoveTimer("brute01");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_7")
		{
			SetEntityActive("SuitorArea03", false);
			RemoveTimer("suitor03");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_8")
		{
			SetEntityActive("BruteArea02", false);
			RemoveTimer("brute02");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_9")
		{
			SetEntityActive("SuitorArea04", false);
			RemoveTimer("suitor04");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_10")
		{
			SetEntityActive("BruteArea06", false);
			RemoveTimer("brute06");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_11")
		{
			SetEntityActive("GruntArea06", false);
			RemoveTimer("grunt06");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_12")
		{
			SetEntityActive("SuitorArea02", false);
			RemoveTimer("suitor02");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_13")
		{
			SetEntityActive("BruteArea04", false);
			RemoveTimer("brute04");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_14")
		{
			SetEntityActive("GruntArea02", false);
			RemoveTimer("grunt02");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_15")
		{
			SetEntityActive("GruntArea01", false);
			RemoveTimer("grunt01");
		}
		else if(GetLocalVarString("LastOrbPedestalUsedVar") == "orb_pedestal_16")
		{
			SetEntityActive("GruntArea04", false);
			RemoveTimer("grunt04");
		}
		
		if(GetLocalVarInt("KeyVar") >= 1)
		{
			SetEntityActive("BruteArea01", false);
			RemoveTimer("brute01");
		}
		if(GetLocalVarInt("KeyVar") >= 2)
		{
			SetEntityActive("GruntArea04", false);
			RemoveTimer("grunt04");
		}
		if(GetLocalVarInt("KeyVar") >= 3)
		{
			SetEntityActive("SuitorArea01", false);
			RemoveTimer("suitor01");
		}
		if(GetLocalVarInt("KeyVar") >= 4)
		{
			SetEntityActive("GruntArea01", false);
			RemoveTimer("grunt01");
			SetEntityActive("BruteArea05", false);
			RemoveTimer("brute05");
			SetEntityActive("SuitorArea04", false);
			RemoveTimer("suitor04");
		}
	}
}

void DisableMonstersActivationAreas()
{
	SetLocalVarInt("MonstersActivatedVar", 0);
	for(int i=1;i<=6;i++)
	{
		SetEntityActive("GruntArea0"+i, false);
		SetEntityActive("BruteArea0"+i, false);
		SetEntityActive("SuitorArea0"+i, false);
	}
}

void RemoveAnyActiveMonster()
{
	SetEntityActive(GetLocalVarString("gsCurrActiveEnemy"), false);
	SetEnemyState(GetLocalVarString("gsCurrActiveEnemy"), "poofsilent");
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	SetLocalVarInt("MonstersActivatedVar", 0);
	for(int t=1;t<=6;t++)
	{
		RemoveTimer("grunt0" + t);
		RemoveTimer("brute0" + t);
		RemoveTimer("suitor0" + t);
	}
}

//BEGIN COLLIDE FUNCTIONS//

void CollideAreaAmbushEscape(string asParent, string asChild, int alState)
{
	SetEntityActive("AreaAmbushEscape_1", false);
	SetEntityActive("AreaAmbushEscape_2", false);
	FadeEnemyToSmoke("gruntevent04", false);
	FadeEnemyToSmoke("bruteevent02", false);
	FadeEnemyToSmoke("suitorevent01", false);
	PlayGuiSound("enemy_hallucination_disappear", 1.0f);
	GiveSanityBoostSmall();
	
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
}

void CollideSafeArea(string asParent, string asChild, int alState)
{
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	SetEntityActive(asChild, false);
	AddTimer(asChild, 20.0f, "TimerReactivateEntity");
	if(GetLocalVarInt("WindowsVar") == 1)
	{
		SetEntityActive("mb_window_2", false);
		SetLocalVarInt("WindowsVar", 0);
	}
	if(GetLocalVarInt("BruteBrokenDoorVar") == 1)
	{
		SetEntityActive("mb_window_1", false);	
		SetEntityActive("cellar_wood01_1", false);
		SetLocalVarInt("BruteBrokenDoorVar", 0);
	}
	if(GetLocalVarInt("SuitorDestroysGateVar") == 1)
	{
		SetPropHealth("sewer_grate_worn_1", 0);
		SetLocalVarInt("SuitorDestroysGateVar", 0);
	}
	if(GetLocalVarInt("StrangePianoPlayedVar") == 1)
	{
		SetEntityActive("wooden_board02_1", false);
		SetEntityActive("wooden_board02_2", false);
		SetEntityActive("wooden_board03_1", false);
		SetEntityActive("wooden_board03_2", false);
		SetEntityActive("wood_box01_breakable_1", false);
		SetEntityActive("wood_box01_breakable_2", false);
		SetEntityActive("wood_box01_breakable_3", false);
		SetEntityActive("stool_wood_5", false);
		SetEntityActive("chair_wood_1", false);
		SetEntityActive("table_wood01_dyn_1", false);
		SetEntityActive("chair_nice02_3", false);
		SetEntityActive("bed_simple_movable_1", false);
		SetEntityActive("armchair_4", false);
		SetEntityActive("stool_wood_5", false);
		SetLocalVarInt("StrangePianoPlayedVar", 0);
	}
	if(GetPlayerHealth() <= 30)	AddPlayerHealth(17.5f);
	if(GetPlayerSanity() <= 10)	SetPlayerSanity(GetPlayerSanity() + 15);
}

void TimerReactivateEntity(string asTimer)
{
	SetEntityActive(asTimer, true);
}

void CollideAreaDeepFog(string &in asParent, string &in asChild, int alState)
{
	if(alState == -1)
	{
		AddTimer("", 0.5f, "TimerReactBreath");
		RemoveTimer("PlayInsanityEvents");
		SetPlayerJumpForceMul(1.0f);
		SetPlayerMoveSpeedMul(1.005f);
		SetPlayerRunSpeedMul(1.0f);
		StopSound("deepfog", 3.0f);
	}
	else if(alState == 1)
	{
		GiveSanityDamage(0.5f, false);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlaySoundAtEntity("deepfog", "01_maze_deep_fog.snt", "Player", 3.0f, true);
		SetPlayerJumpForceMul(0.3f);
		SetPlayerMoveSpeedMul(0.04f);
		SetPlayerRunSpeedMul(0.06f);
	}
}
void CollideNearPortalArea(string &in asParent, string &in asChild, int alState)
{
	SetMessage("Monologue", "FacingPortal", 6.0f);
}
void CollidePortalEffectArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("teleportoutofportal", 3.0f, "TimerOutOfPortal");
	AddTimer("wakingupfromportal", 19.0f, "TimerOutOfPortal");
	FadeOut(0.0f);
	PlayGuiSound("guardian_idle", 0.9f);
	SetLanternActive(false, false);
	SetMessage("Monologue", "InsidePortal", 20.0f);
	SetPlayerActive(false);
	SetEntityActive("orb_key_2", true);
	SetEntityActive("slime_anim_ceiling_10", true);
	SetEntityActive("slime_anim_ceiling_11", true);
	SetEntityActive("slime_anim_wall_11", true);
	SetEntityActive("slime_anim_wall_12", true);
	SetEntityActive("slime_3way_8", true);
	SetEntityActive("slime_3way_9", true);
	SetEntityActive("slime_6way_3", true);
	SetEntityActive("slime_6way_4", true);
	SetEntityActive("slime_egg_8", true);
	SetEntityActive("slime_egg_9", true);
	SetEntityActive("slime_egg_10", true);
	SetEntityActive("slime_pile_3", true);
	SetEntityActive("slime_pile_large_7", true);
}
void CollidePaintJumpScareArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 1.0f, "TimerReactScare");
	PlayGuiSound("01_maze_Agrippa_Strained_01", 0.7f);
	SetPropActiveAndFade("painting_portrait_insane_5", true, 1.5f);
}
void CollideLitWallCandleArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 2.25f, "TimerReactBreath");
	PlayGuiSound("01_maze_woosh", 0.5f);
	if(asChild == "LitWallCandleArea_1")
	{
		SetPropActiveAndFade("crude_man_chains_statue_4", true, 2.0f);
		SetLampLit("candlestick_wall_87", true, true);
		StartEffectFlash(0.1, 0.2, 0.3);
	}
	if(asChild == "LitWallCandleArea_2")
	{
		PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_static01_nosound_1", 0.3f, true);
		SetLampLit("torch_static01_nosound_1", true, true);
	}
	if(asChild == "LitWallCandleArea_3") 
		for(int i=2;i<=3;i++)
		{
			PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_static01_nosound_"+i, 0.3f, true);
			SetLampLit("torch_static01_nosound_"+i, true, true);
		}
}
void PoofBruteEvent1(string &in asParent, string &in asChild, int alState)
{
	FadeEnemyToSmoke("bruteevent01", false);
}
void PoofSuitorEvent2(string &in asParent, string &in asChild, int alState)
{
	FadeEnemyToSmoke("suitorevent02", false);
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
}
void CollideNoPassArea(string &in asParent, string &in asChild, int alState)
{
	SetMessage("Hints", "NoNeedToGoThere", 4.5f);
}
void CollideEmptyMusicArea(string &in asParent, string &in asChild, int alState)
{
	PlayMusic("01_maze_empty_frame", true, 1.0f, 1.3f, 10, true);
	SetLanternActive(false, true);
	SetLanternDisabled(true);
	SetMessage("Monologue", "MyPaintings", 11.5f);
	SetPlayerSanity(17.5f);
	SetPlayerMoveSpeedMul(1.005f);
	SetPlayerRunSpeedMul(0.8f);
	SetPlayerJumpForceMul(0.8f);
	FadePlayerFOVMulTo(1.25f, 1.25f);
}
void CollideCellsMusicArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("TimerPrisonerWhimp", 0.1f, "TimerPrisonerWhimp");
	PlayMusic("22_amb", true, 1.0f, 5.0f, 10, true);
	SetMessage("Monologue", "HeShouldBeDownThere", 8.0f);
}
void CollideWomanLaughArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 3.0f, "TimerStopLook");
	PlayGuiSound("react_scare", 0.8f);
	PlayGuiSound("00_laugh", 1.0f);
	SetPropActiveAndFade("angel_statue_21", true, 2.0f);
	SetEntityActive("WomanBruteArea", true);
	SetMessage("Monologue", "WhatIsSheDoingHere", 9.9f);
	StartPlayerLookAt("angel_statue_21", 2.0f, 2.5f, "");
}
void CollideWomanBruteArea(string &in asParent, string &in asChild, int alState)
{
	PlayGuiSound("react_scare", 0.8f);
	RemoveAnyActiveMonster();
	SetLocalVarString("gsCurrActiveEnemy", "bruteevent03");
	AddEnemyPatrolNode("bruteevent03", "PathNodeArea_459", 3.5, "");
	AddEnemyPatrolNode("bruteevent03", "PathNodeArea_461", 1, "");
	AddEnemyPatrolNode("bruteevent03", "PathNodeArea_462", 4, "");
	AddEnemyPatrolNode("bruteevent03", "PathNodeArea_463", 2, "");
	AddEnemyPatrolNode("bruteevent03", "PathNodeArea_462", 0.001f, "");
	AddEnemyPatrolNode("bruteevent03", "PathNodeArea_461", 0.001f, "");
	AddEnemyPatrolNode("bruteevent03", "PathNodeArea_460", 1, "");
	SetEntityActive("bruteevent03", true);
	SetMessage("Dialogue", "LitTheCandles", 9.9f);
	for(int i=1;i<=21;i++) SetPropActiveAndFade("ritualcandle_"+i, true, 1.0f);
}
void CollideRevealPianoArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 2.5f, "TimerStopLook");
	PlayGuiSound("enemy_hallucination_disappear", 0.5f);
	SetLampLit("candlestick_wall_orange_6", true, true);
	SetMessage("Monologue", "FoundPiano", 8.0f);
	StartPlayerLookAt("piano_8", 2.5f, 2.5f, "");
}
void CollidePlayPianoArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 28.3f, "TimerAngelBehindYou");
	PlayMusic("01_maze_piano_theme", false, 1.0f, 0.5f, 10, false);
	SetMessage("Monologue", "PlayPiano", 25.0f);
	SetPlayerActive(false);
	StartPlayerLookAt("piano_8", 2.5f, 2.5f, "");
	TeleportPlayer("PlayerStartAloneEnd_3");
}
void FallDownTheHole(string &in asParent, string &in asChild, int alState)
{
	AddTimer("empty", 21.6f, "TimerIsItOver");
	FadeOut(0.0f);
	PlayGuiSound("react_pant", 0.8f);
	PlayMusic("20_puzzle", false, 1.0f, 1.0f, 10, true);
	SetMessage("Monologue", "DownTheHole", 21.0f);
	SetPlayerActive(false);
	StopMusic(0, 0);
	TeleportPlayer("PlayerStartDefaultArea");
	FadePlayerFOVMulTo(1.0f, 1.0f);
}
void CollideFallingBottlesArea(string &in asParent, string &in asChild, int alState)
{	
	AddTimer("scare", 1.0f, "TimerPlayerReactions");
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	AddTimer("breathl", 5.0f, "TimerPlayerReactions");
	PlayGuiSound("05_event_bottles.snt", 1.0f);
	for(int i=1;i<=44;i++) SetEntityActive("fallingwine_"+i, true);
}
void CollideBottomStairs(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("hollow_needle_3", true);
	SetLampLit("candlestick_wall_orange_4", true, true);
	SetMessage("Dialogue", "BottomStairs", 10.0f);
	CreateParticleSystemAtEntity("", "ps_break_wood.ps", "castle_silent_4", false);
	PlaySoundAtEntity("strongknock", "01_maze_knock_door_strong", "castle_silent_4", 0.0f, false);
	PlaySoundAtEntity("doorbang", "05_event_door_bang", "castle_silent_4", 0.0f, false);
	PlayMusic("29_amb02", true, 1.0f, 3.3f, 10, true);
}
void ActivateBlockBox(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "nogoingback1") 
	{	
		SetEntityActive("firstblockbox", true);
		SetEntityActive("NoPassArea_1", true);
	}
	if(asChild == "nogoingback2")
	{
 		SetEntityActive("secondblockbox", true);
		SetEntityActive("NoPassArea_2", true);
	}
	if(asChild == "nogoingback3") 
	{
		SetEntityActive("thirdblockbox", true);
		SetEntityActive("NoPassArea_3", true);
	}
	if(asChild == "nogoingback4") 
	{
		SetEntityActive("fourthblockbox", true);
		SetEntityActive("NoPassArea_4", true);
	}
}
void CollideStopRunningArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("ch02", 3.0f, "TimerPrisonChapter");
	PlayGuiSound("react_breath_slow", 0.7f);
	PlayMusic("29_amb_end_intense", false, 0.5f, 0.1f, 10, false);
	RemoveTimer("chbadending01");
	AddEnemyPatrolNode("suitorevent04", "PathNodeArea_537", 1.888, "");
	AddEnemyPatrolNode("suitorevent04", "PathNodeArea_538", 20, "");
	SetEntityActive("chair_wood02_3", false);
	SetEntityActive("chair_wood02_4", false);
	SetEntityActive("suitorevent03", false);
	SetEntityActive("suitorevent04", true);
	SetPlayerActive(false);
	SetPlayerSanity(100.0f);
	ShowPlayerCrossHairIcons(false);
	StartPlayerLookAt("torch_static01_24", 1.0f, 2.0f, "");
	TeleportPlayer("PlayerStartBroEnd_2");
}
void CollideCloseLoveDoorArea(string &in asParent, string &in asChild, int alState)
{
	SetSwingDoorLocked("mansion_1", true, false);
	SetSwingDoorClosed("mansion_1", true, false);
	PlayMusic("01_maze_record_music02.ogg", true, 0.4f, 6.0f, 10, true);
}
void CollideCantYouSeeArea(string &in asParent, string &in asChild, int alState)
{
	AddLocalVarInt("CantYouSeeVar", 1);
	if(GetLocalVarInt("CantYouSeeVar") == 1)
	{ 
		PlayMusic("01_maze_confused.ogg", true, 1.0f, 6.0f, 10, true);
		PlaySoundAtEntity("SoundBong2", "scare_tingeling_rev2.snt", "Player", 0.0f, false);
		SetMessage("Dialogue", "CantYouSee", 9.0f);
	}
	if(GetLocalVarInt("CantYouSeeVar") == 2)
	{
		SetEntityActive("angel_statue_88", true);
		SetSwingDoorLocked("mansion_1", false, false);
		SetMessage("Dialogue", "ItWasNecessary", 12.0f);
		SetEntityInteractionDisabled("painting01_dyn_3", true);
	}
}
void CollideGoDownArea(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "GoDownLoveArea")
	{
		AddTimer("Love", 5.0f, "TimerPrepareToGoDown");
		AddTimer("", 10.0f, "TimerGirlCryConst");
		PlayMusic("01_maze_amb_girl.ogg", false, 1.0f, 0.5f, 10, true);
		StartPlayerLookAt("LookPaintGirl", 2.0f, 2.0f, "");
		SetLanternActive(false, true);
		SetPlayerActive(false);
		SetMessage("Dialogue", "LookPaintGirl", 9.0f);
		for(int i=1;i<=9;i++)
		{
			SetEntityActive("grunt0"+i, false);
			SetEntityActive("gruntevent0"+i, false);
			SetEntityActive("gruntsurprise0"+i, false);
			SetEntityActive("brute0"+i, false);
			SetEntityActive("bruteevent0"+i, false);
			SetEntityActive("brutesurprise0"+i, false);
			SetEntityActive("suitor0"+i, false);
			SetEntityActive("suitorevent0"+i, false);
			SetEntityActive("suitorsurprise0"+i, false);
		}
	}
	if(asChild == "GoDownGrandpaArea")
	{
		AddTimer("Grandpa", 6.5f, "TimerPrepareToGoDown");
		AddTimer("", 0.5f, "TimerReactBreath");
		SetPlayerActive(false);
		SetMessage("Dialogue", "YouHaveToBeQuick", 7.0f);
	}
	if(asChild == "GoDownAloneArea")
	{
		AddTimer("", 6.1f, "TimerTeleportDarkRoom");
		FadeOut(6.0f);
		SetPlayerActive(false);	
	}
}
void CreateWrongDoor(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "CreateWrongDoorArea_1") SetEntityActive("wrongdoor01", true);
	if(asChild == "CreateWrongDoorArea_2") SetEntityActive("wrongdoor02", true);
	if(asChild == "CreateWrongDoorArea_4") SetEntityActive("wrongdoor04", true);
}
void CollideBlockedWayArea1(string &in asParent, string &in asChild, int alState)
{
	RemoveAnyActiveMonster();
	PlayMusic("00_event_hallway", false, 1.0f, 4.0f, 10, true);
	SetPlayerMoveSpeedMul(0.25f);
	SetPlayerRunSpeedMul(0.25f);
	StartPlayerLookAt("torchfirst", 3.6f, 3.6f, "");
	SetEntityActive("torchfirst", true);
	SetEntityActive("torturetable_2", true);
	SetEntityActive("block_box_10", true);
	AddTimer("", 1.0f, "TimerReactPant");
	AddTimer("", 5.25f, "TimerReactBreath");
	AddTimer("", 1.5f, "TimerStopLook");
	AddTimer("", 1.5f, "TimerWhispers");
	if(GetLocalVarInt("KeyVar") >= 1)
	{
		if(GetLocalVarInt("OpenedDoorsVar") == 5)
		{
			CheckPoint ("BCheckPoint1", "BlockedStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
		}
		else
		{
			CheckPoint ("BCheckPoint1", "BlockedStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
		}
	}
	else
	{
		CheckPoint ("BCheckPoint1", "BlockedStartArea_1", "Respawn", "DeathHints", "FindTheKey");
	}
}
void CollideBruteEventArea(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("cellar_wood01_1", false);
	SetPlayerMoveSpeedMul(0.05f);
	SetPlayerRunSpeedMul(0.05f);
	StartPlayerLookAt("EagleDoorArea04", 1.0f, 0.4f, "");
	AddTimer("", 4.6f, "TimerStopLook");
	AddTimer("", 1.25f, "TimerReactScare");
	AddLocalVarInt("BruteBrokenDoorVar", 1);
	PlayMusic("19_event_brute.ogg", false, 1.0f, 4.0f, 10, true);
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_444", 2, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_445", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_446", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_447", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_448", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_449", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_450", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_451", 3, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_452", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_453", 0.001f, "");
	AddEnemyPatrolNode("bruteevent01", "PathNodeArea_454", 1, "");
	SetEntityActive("bruteevent01", true);
	SetEntityActive("empty_frame_2", false);
}
void CollideHuntArea1(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("FemaleLaugh", "00_laugh", "Player", 0, false);
	SetEntityActive("angel_statue_39", true);
	AddTimer("", 0.25f, "TimerReactScareSmall");
	AddTimer("", 3.5f, "TimerReactBreath");
}
void CollideHuntArea2(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("FemaleLaugh", "00_laugh", "Player", 0, false);
	SetEntityActive("angel_statue_39", false);
	SetEntityActive("angel_statue_40", true);
	AddTimer("", 0.25f, "TimerReactScareSmall");
	AddTimer("", 3.5f, "TimerReactBreath");
}
void CollideHuntArea3(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("chain", "general_chain_rattle_single", "Player", 0, false);
	PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
	SetEntityActive("angel_statue_39", false);
	SetEntityActive("angel_statue_41", true);
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
		SetLocalVarString("gsCurrActiveEnemy", "brutesurprise02");
	else
		SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	SetEntityActive("brutesurprise02", true);
	FadeEnemyToSmoke("brutesurprise01", false);
	AddTimer("", 1.0f, "TimerHuntBruteSurprise02");
	AddTimer("", 0.25f, "TimerReactScareSmall");
	AddTimer("", 3.5f, "TimerReactBreath");
}
void CollideHuntArea4(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
	SetEntityActive("angel_statue_42", true);
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
		SetLocalVarString("gsCurrActiveEnemy", "brutesurprise03");
	else
		SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	SetEntityActive("brutesurprise03", true);
	FadeEnemyToSmoke("brutesurprise02", false);
	AddTimer("", 0.9f, "TimerHuntBruteSurprise03");
	AddTimer("", 0.25f, "TimerReactScareSmall");
	AddTimer("", 3.5f, "TimerReactBreath");
}
void CollideHuntArea5(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("FemaleLaugh", "00_laugh", "Player", 0, false);
	SetEntityActive("angel_statue_43", true);
	SetEntityActive("angel_statue_44", true);
	AddTimer("", 0.25f, "TimerReactScareSmall");
	AddTimer("", 3.5f, "TimerReactBreath");
}
void CollideHuntArea6(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("FemaleLaugh", "00_laugh", "Player", 0, false);
	SetEntityActive("angel_statue_45", true);
	SetEntityActive("angel_statue_46", true);
	AddTimer("", 0.25f, "TimerReactScareSmall");
	AddTimer("", 3.5f, "TimerReactBreath");
}
void CollideHuntArea7(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
		SetLocalVarString("gsCurrActiveEnemy", "gruntsurprise01");
	else
		SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	AddEnemyPatrolNode("gruntsurprise01", "PathNodeArea_531", 3, "");
	SetEntityActive("gruntsurprise01", true);
	SetEntityActive("grunt_body_part1_1", false);
	SetEntityActive("grunt_body_part2_1", false);
	SetEntityActive("grunt_body_part3_1", false);
	FadeEnemyToSmoke("brutesurprise03", false);
	AddTimer("", 0.25f, "TimerReactScareSmall");
	AddTimer("", 3.5f, "TimerReactBreath");
}
void CollideEndStorageArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 3.0f, "TimerStopLook");
	AddTimer("", 3.2f, "TimerTrapStorage");
	PlaySoundAtEntity("scare","react_breath_slow.snt", "Player", 1.0f, false);
	PlaySoundAtEntity("scare","guardian_distant2.snt", "Player", 0.8f, false);
	PlaySoundAtEntity("storage_web_sound", "01_maze_slime_loop", "web_1", 2.0f, true);
	SetEntityActive("web_1", true);
	SetEntityActive("web_2", true);
	StartPlayerLookAt("web_1", 1.9f, 1.9f, "");
	for(int i=27; i<86; i++) SetEntityActive("rotten_apple_"+i, true);
}
void CollideFloor(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 0.3f, "TimerReactPant");
	AddTimer("", 5.0f, "TimerReactBreath");
	AlertEnemyOfPlayerPresence(GetLocalVarString("gsCurrActiveEnemy"));
	if(asParent == "barrel01_10") SetPropHealth("barrel01_10", 0);
}
void CollideEndHuntArea(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("whisper", "insanity_whisper", "Player", 0, false);
	StopMusic(3.8f, 10);
	SetPlayerMoveSpeedMul(0.05f);
	SetPlayerRunSpeedMul(0.05f);
	SetEntityActive("candle_floor_small_103", true);
	SetEntityActive("candle_floor_small_104", true);
	SetEntityActive("candle_floor_small_105", true);
	SetEntityActive("candle_floor_small_106", true);
	SetEntityActive("HuntArea06", false);
	SetEntityActive("angel_statue_45", false);
	SetEntityActive("angel_statue_46", false);
	SetEntityActive("crude_man_chains_statue_5", false);
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	FadeEnemyToSmoke("gruntsurprise01", false);
	AddEnemyPatrolNode("suitorsurprise01", "PathNodeArea_475", 3, "");
	SetEntityActive("corpse_male_3", false);
	SetEntityActive("suitorsurprise01", true);
	StartPlayerLookAt("suitorsurprise01", 3.0f, 3.0f, "");
	AddTimer("", 1.25f, "TimerReactBreath");
	AddTimer("", 3.2f, "TimerStopLook");
}
void TriggerSkyEvent1(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("barrel01_10", true);
	SetEntityActive("wine02_5", true);
	PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0.1, false);
}
void TriggerSkyEvent2(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("brickfalling_1", true);
	SetEntityActive("brickfalling_2", true);
	SetEntityActive("brickfalling_3", true);
	SetEntityActive("brickfalling_4", true);
	SetEntityActive("brickfalling_5", true);
	SetEntityActive("brickfalling_6", true);
	SetEntityActive("brickfalling_7", true);
	SetEntityActive("brickfalling_8", true);
	SetEntityActive("brickfalling_9", true);
	SetEntityActive("brickfalling_10", true);
	PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0.1, false);
}
void TriggerSkyEvent3(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("vase02_ghost_6", true);
	PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0.1, false);
}
void TriggerSkyEvent4(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("vase01_7", true);
	PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0.1, false);
}
void TriggerSkyEvent5(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("corpse_male_torso_2", true);
	SetEntityActive("corpse_male_leg_2", true);
	SetEntityActive("corpse_male_arm_2", true);
	SetEntityActive("corpse_male_finger_1", true);
	SetEntityActive("corpse_male_finger_2", true);
	PlayGuiSound("scare_scratch_intense", 0.5f);
}

void LookAtCorpse(string asEntity, int alState)
{
	if(alState == 1)
		SetLocalVarInt("PlayerIsLookingAtCorpseVar", 0);
	else
		SetLocalVarInt("PlayerIsLookingAtCorpseVar", 1);
}
void ActivateTrapMemory(string &in asParent, string &in asChild, int alState)
{
	if(GetLocalVarInt("PlayerIsLookingAtCorpseVar") == 1)
	{
		SetEntityActive(asChild, false);
		SetEntityPlayerLookAtCallback("corpse_male_2", "", true);
		PlaySoundAtEntity("scare","react_breath.snt", "Player", 0.9f, false);
		SetPropActiveAndFade("corpse_male_2", false, 1.0f);
		SetEntityActive("memorystoragetrap", true);
		PlaySoundAtEntity("memorystoragetrap_sound", "01_memory_whisper_rand.snt", "memorystoragetrap", 0, true);
		SetEntityActive("chemical_jar02_6", false);
		SetEntityActive("grunt03", false);
		SetEntityActive("suitor06", false);
		SetLightVisible("PointLight_52", true);
		RemoveEntityCollideCallback(asParent, asChild);
	}
	else
		return;
}

void CollideBlockedWayArea4(string &in asParent, string &in asChild, int alState)
{
	RemoveAnyActiveMonster();
	SetPlayerMoveSpeedMul(0.25f);
	SetPlayerRunSpeedMul(0.25f);
	StartPlayerLookAt("torchfourth", 3.6f, 3.6f, "");
	SetEntityActive("torchfourth", true);
	SetEntityActive("crude_man_chains_statue_3", true);
	AddTimer("", 0.8f, "TimerEventScare");
	AddTimer("", 0.9f, "TimerReactPant");
	AddTimer("", 5.25f, "TimerReactBreath");
	AddTimer("", 1.5f, "TimerStopLook");
	AddTimer("", 1.5f, "TimerWhispers");
	if(GetLocalVarInt("KeyVar") >= 1)
	{
		if(GetLocalVarInt("OpenedDoorsVar") == 5)
		{
			CheckPoint ("BCheckPoint4", "BlockedStartArea_4", "Respawn", "DeathHints", "FindTheMemories");
		}
		else
		{
			CheckPoint ("BCheckPoint4", "BlockedStartArea_4", "Respawn", "DeathHints", "FindTheDoor");
		}
	}
	else
	{
		CheckPoint ("BCheckPoint4", "BlockedStartArea_4", "Respawn", "DeathHints", "FindTheKey");
	}
}
void CollideEnemyArea(string &in asParent, string &in asChild, int alState)
{
	int iRand = RandInt(0, 3);
	if(iRand == 3)
		return;
	
	string sEnemyPrefix = "";
	string sEnemySuffix = "";
	string sEnemyName = "";
	if(StringContains(asChild, "Grunt"))		sEnemyPrefix = "grunt";
	else if(StringContains(asChild, "Brute"))		sEnemyPrefix = "brute";
	else if(StringContains(asChild, "Suitor"))	sEnemyPrefix = "suitor";
	
	if(StringContains(asChild, "01"))	sEnemySuffix = "01";
	else if(StringContains(asChild, "02"))	sEnemySuffix = "02";
	else if(StringContains(asChild, "03"))	sEnemySuffix = "03";
	else if(StringContains(asChild, "04"))	sEnemySuffix = "04";
	else if(StringContains(asChild, "05"))	sEnemySuffix = "05";
	else if(StringContains(asChild, "06"))	sEnemySuffix = "06";
	
	sEnemyName = sEnemyPrefix + sEnemySuffix;
	
	if(GetLocalVarString("gsCurrActiveEnemy") == sEnemyName)
		return;
	else if(GetLocalVarString("gsCurrActiveEnemy") == "noenemy")
	{
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		if(GetLocalVarInt("giMonsterSpawnTime") >= 2)	AddLocalVarInt("giMonsterSpawnTime", -1);
		AddTimer(sEnemyName, RandInt(GetLocalVarInt("giMonsterSpawnTime"), GetLocalVarInt("giMonsterSpawnTime") + 1), "TimerEnemyInsideFogRoom");
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
		
		return;
	}
	else if(GetEnemyState(GetLocalVarString("gsCurrActiveEnemy")) <= 2)
	{
		SetEnemyState(GetLocalVarString("gsCurrActiveEnemy"), "poofsilent");
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		for(int t=1;t<=6;t++)
		{
			RemoveTimer("grunt0" + t);
			RemoveTimer("brute0" + t);
			RemoveTimer("suitor0" + t);
		}
		if(GetLocalVarInt("giMonsterSpawnTime") >= 2)	AddLocalVarInt("giMonsterSpawnTime", -1);
		AddTimer(sEnemyName, RandInt(GetLocalVarInt("giMonsterSpawnTime"), GetLocalVarInt("giMonsterSpawnTime") + 1), "TimerEnemyInsideFogRoom");
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
		
		return;
	}
	else
		return;
}
void CollideGruntEventArea(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "GruntEventArea_1")
	{
		SetLocalVarInt("WindowsVar", 1);
		SetPlayerMoveSpeedMul(0.05f);
		SetPlayerRunSpeedMul(0.05f);
		SetPlayerSanity(40.5f);
		StartPlayerLookAt("gruntevent01", 1.0f, 0.6f, "");
		AddTimer("", 8.4f, "TimerStopLook");
		AddTimer("", 1.25f, "TimerReactScare");
		AddTimer("", 12.25f, "TimerReactBreath");
		AddTimer("", 7.99f, "TimerGoAwayGrunt01");
		//AddTimer("", 8.99f, "TimerGoAwayGrunt02");
		PlayMusic("05_event_steps.ogg", false, 1.0f, 4.0f, 10, true);
		AddEnemyPatrolNode("gruntevent01", "PathNodeArea_435", 2.5, "");
		AddEnemyPatrolNode("gruntevent01", "PathNodeArea_436", 5, "");
		//AddEnemyPatrolNode("gruntevent02", "PathNodeArea_437", 9, "");
		//AddEnemyPatrolNode("gruntevent03", "PathNodeArea_438", 9, "");
		SetEntityActive("stuffed_rabbit_3", true);  
		//SetEntityActive("gruntevent03", true);
		//SetEntityActive("gruntevent02", true);
		SetEntityActive("gruntevent01", true);
		SetLightVisible("GruntWindowLight", true);
	}
	if(asChild == "GruntEventArea_2")
	{
		GiveHint("hidehint", "Hints", "HideHint", 0);
		SetPlayerSanity(33.5f);
		PlaySoundAtEntity("ripp_door", "15_ripp_door", "Player", 0, false);
		SetPropHealth("sewer_grate_worn_3",0);
		AddTimer("", 0.75f, "TimerReactPant");
		AddTimer("", 3.3f, "TimerReactBreath");
		PlayMusic("10_event_coming.ogg", false, 1.0f, 4.0f, 10, true);
		SetLightVisible("PointLight_44", true);
		SetMessage("Hints", "HideInsideTheCloset", 6.5f);
		RemoveAnyActiveMonster();
		ResetMonstersActivationAreas();
		SetLocalVarString("gsCurrActiveEnemy", "gruntevent05");
		AddEnemyPatrolNode("gruntevent05", "PathNodeArea_439", 5, "");
		AddEnemyPatrolNode("gruntevent05", "PathNodeArea_440", 1, "");
		AddEnemyPatrolNode("gruntevent05", "PathNodeArea_441", 0.001f, "");
		AddEnemyPatrolNode("gruntevent05", "PathNodeArea_442", 3, "");
		AddEnemyPatrolNode("gruntevent05", "PathNodeArea_441", 0.001f, "");
		AddEnemyPatrolNode("gruntevent05", "PathNodeArea_440", 0.001f, "");
		AddEnemyPatrolNode("gruntevent05", "PathNodeArea_443", 1, "");
		SetEntityActive("tongs_2", true);
		SetEntityActive("tongs_3", true);
		SetEntityActive("tongs_4", true);
		SetEntityActive("tongs_5", true);
		SetEntityActive("tongs_6", true);
		SetEntityActive("tongs_7", true);
		SetEntityActive("tongs_8", true);
		SetEntityActive("tongs_9", true);
		SetEntityActive("tongs_10", true);
		SetEntityActive("tongs_11", true);
		SetEntityActive("tongs_12", true);
		SetEntityActive("tongs_13", true);  
		SetEntityActive("gruntevent05", true);
	}
}
void PoofGruntEvent5(string &in asParent, string &in asChild, int alState)
{
    FadeEnemyToSmoke("gruntevent05", false);
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
}
void ActivateKnife(string &in asParent, string &in asChild, int alState)
{
	GiveSanityBoostSmall();
	PlayMusic("23_puzzle.ogg", false, 1.0f, 4.0f, 10, true);
	SetPropActiveAndFade("ceremony_knife_1", true, 1.0f);
	SetEntityActive("FadeKnifeArea", false);
	SetEntityActive("fakeknife", false);
	StartEffectEmotionFlash("Messages", "Knife", "insanity_imageflash01");
	StartPlayerLookAt("ceremony_knife_1", 2.0f, 2.0f, "");
}
void StartKnocking(string &in asParent, string &in asChild, int alState)
{
    AddTimer("knock", 0.1f, "TimerKnock");
}
void CollideIGreetYouArea(string &in asParent, string &in asChild, int alState)
{
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
	{
		SetLocalVarString("gsCurrActiveEnemy", "gruntevent04");
		SetEntityActive("AreaAmbushEscape_1", true);
		SetEntityActive("AreaAmbushEscape_2", true);
	}
	else
		SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	SetMessage("Dialogue", "IGreetYou", 3.15f);
	SetPlayerMoveSpeedMul(0.05f);
	SetPlayerRunSpeedMul(0.05f);
	SetPlayerSanity(25.5f);
	StartPlayerLookAt("painting_portrait_insane_2", 1.0f, 0.6f, "");
	AddTimer("one", 4.0f, "TimerActivateVase");
	AddTimer("two", RandInt(5, 10), "TimerActivateVase");
	AddTimer("three", RandInt(13, 16), "TimerActivateVase");
	AddTimer("four", RandInt(19, 22), "TimerActivateVase");
	AddTimer("five", RandInt(24, 28), "TimerActivateVase");
	AddTimer("", 20.0f, "TimerBackToWhite");
	AddTimer("", 2.8f, "TimerStopLook");
	AddTimer("", 1.65f, "TimerReactScare");
	AddTimer("", 1.55f, "TimerLitTorch14");
	AddTimer("", 3.25f, "TimerAmbPiano");
	PlaySoundAtEntity("igreetyou", "01_maze_IGreetYou", "Player", 0, false);
	PlaySoundAtEntity("breath_slow", "react_breath_slow", "Player", 0, false);
	SetEntityActive("RunForMonstersArea", true);
	SetEntityActive("candlestick_wall_orange_5", true); 
	SetEntityActive("gruntevent04", true);
	SetEntityActive("bruteevent02", true);
	SetEntityActive("suitorevent01", true);
	SetEntityActive("grunt05", false);
	SetEntityActive("slime_pile_2", true);
	SetEntityActive("slime_pile_large_4", true);
	SetEntityActive("slime_pile_large_5", true);
	SetEntityActive("slime_pile_large_6", true);
	SetEntityActive("slime_6way_1", true);
	SetEntityActive("slime_6way_2", true);
	SetEntityActive("slime_3way_3", true);
	SetEntityActive("slime_3way_4", true);
	SetEntityActive("slime_3way_5", true);
	SetEntityActive("slime_3way_6", true);
	SetEntityActive("slime_3way_7", true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_wall_6", 2.0f, true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_wall_7", 2.0f, true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_wall_8", 2.0f, true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_wall_9", 2.0f, true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_ceiling_4", 2.0f, true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_ceiling_5", 2.0f, true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_ceiling_6", 2.0f, true);
	PlaySoundAtEntity("slime", "slime_loop", "slime_anim_ceiling_7", 2.0f, true);
	SetEntityActive("slime_anim_wall_6", true);
	SetEntityActive("slime_anim_wall_7", true);
	SetEntityActive("slime_anim_wall_8", true);
	SetEntityActive("slime_anim_wall_9", true);
	SetEntityActive("slime_anim_ceiling_4", true);
	SetEntityActive("slime_anim_ceiling_5", true);
	SetEntityActive("slime_anim_ceiling_6", true);
	SetEntityActive("slime_anim_ceiling_7", true);
	SetEntityActive("candlestick_floor_red_1", true);
	SetEntityActive("candlestick_floor_red_2", true);
	SetEntityActive("candlestick_floor_red_3", true);
	SetEntityActive("candlestick_floor_red_4", true);
	SetEntityActive("candlestick_floor_red_5", true);
	SetEntityActive("candlestick_floor_red_7", true);
}
void PlayCabinetMusic(string &in asParent, string &in asChild, int alState)
{
    PlayMusic("01_maze_baby02", false, 1.0f, 4.0f, 10, true);  
}
void PlayViolinMusic(string &in asParent, string &in asChild, int alState)
{
    PlayMusic("01_maze_baby01", false, 1.0f, 4.0f, 10, true); 
}
void NearTheWayIsShut1(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("candle_floor_small_95", true);
	SetEntityActive("memorybrother01", true);
	PlaySoundAtEntity("memorybrother01_sound", "01_memory_whisper_rand.snt", "memorybrother01", 0, true);
	AddTimer("", 1.25f, "TimerReactBreath");
	PlaySoundAtEntity("scare_steps", "scare_steps_big", "Player", 0, false);
	PlayMusic("01_maze_the_way_is_shut01.ogg", false, 1.0f, 4.0f, 10, true);
	StartEffectEmotionFlash("Hints", "ThereIsAMemoryCloseToMe", "insanity_imageflash01");     
}
void NearTheWayIsShut2(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("candle_floor_small_96", true);
	SetEntityActive("memorybrother02", true);
	PlaySoundAtEntity("memorybrother02_sound", "01_memory_whisper_rand.snt", "memorybrother02", 0, true);
	AddTimer("", 1.25f, "TimerReactBreath");
	PlaySoundAtEntity("scare_steps", "scare_steps_big", "Player", 0, false);
	PlayMusic("01_maze_the_way_is_shut02.ogg", false, 1.0f, 4.0f, 10, true);
	StartEffectEmotionFlash("Hints", "ThereIsAMemoryCloseToMe", "insanity_imageflash01");
}
void NearTheWayIsShut3(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("candle_floor_small_97", true);
	SetEntityActive("memorybrother04", true);
	PlaySoundAtEntity("memorybrother04_sound", "01_memory_whisper_rand.snt", "memorybrother04", 0, true);
	AddTimer("", 1.25f, "TimerReactBreath");
	PlaySoundAtEntity("scare_steps", "scare_steps_big", "Player", 0, false);
	PlayMusic("01_maze_the_way_is_shut03.ogg", false, 1.0f, 4.0f, 10, true);
	StartEffectEmotionFlash("Hints", "ThereIsAMemoryCloseToMe", "insanity_imageflash01");
}
void NearTheWayIsShut4(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("candle_floor_small_98", true);
	SetEntityActive("memorybrother03", true);
	PlaySoundAtEntity("memorybrother03_sound", "01_memory_whisper_rand.snt", "memorybrother03", 0, true);
	AddTimer("", 1.25f, "TimerReactBreath");
	PlaySoundAtEntity("scare_steps", "scare_steps_big", "Player", 0, false);
	PlayMusic("01_maze_the_way_is_shut04.ogg", false, 1.0f, 4.0f, 10, true);
	StartEffectEmotionFlash("Hints", "ThereIsAMemoryCloseToMe", "insanity_imageflash01");
}
void LoveFrameDoorFound(string &in asParent, string &in asChild, int alState)
{
	SetLightVisible("PointLight_57", true);
	SetEntityActive("LovePaintTouch", true);
	SetLampLit("torch_floor_25", true, true);
	SetLampLit("torch_floor_26", true, true);
	SetLampLit("torch_floor_27", true, true);
	SetLampLit("torch_floor_28", true, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_25", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_26", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_27", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_28", 0.3f, true);
	GiveSanityBoostSmall();
	PlayMusic("01_maze_calm.ogg", false, 1.0f, 4.0f, 10, true);
}
void SolitudeFrameDoorFound(string &in asParent, string &in asChild, int alState)
{
	SetLightVisible("PointLight_61", true);
	SetEntityActive("BrutePaintTouch", true);
	SetLampLit("torch_floor_13", true, true);
	SetLampLit("torch_floor_14", true, true);
	SetLampLit("torch_floor_15", true, true);
	SetLampLit("torch_floor_16", true, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_13", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_14", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_15", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_16", 0.3f, true);
	GiveSanityBoostSmall();
	PlayMusic("01_maze_solitude.ogg", false, 1.0f, 4.0f, 10, true);
}
void GrandpaFrameDoorFound(string &in asParent, string &in asChild, int alState)
{
	SetLightVisible("PointLight_62", true);
	SetEntityActive("GruntPaintTouch", true);
	SetLampLit("torch_floor_31", true, true);
	SetLampLit("torch_floor_32", true, true);
	SetLampLit("torch_floor_33", true, true);
	SetLampLit("torch_floor_34", true, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_31", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_32", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_33", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_34", 0.3f, true);
	GiveSanityBoostSmall();
	PlayMusic("01_maze_grandpa.ogg", false, 1.0f, 4.0f, 10, true);
}
void EmptyFrameDoorFound(string &in asParent, string &in asChild, int alState)
{
	SetLightVisible("PointLight_58", true);
	SetEntityActive("DefaultPaintTouch", true);
	SetLampLit("torch_floor_19", true, true);
	SetLampLit("torch_floor_21", true, true);
	SetLampLit("torch_floor_23", true, true);
	SetLampLit("torch_floor_24", true, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_19", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_21", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_23", 0.3f, true);
	PlaySoundAtEntity("fire","01_maze_general_fire_burning.snt", "torch_floor_24", 0.3f, true);
	GiveSanityBoostSmall();
	PlayMusic("27_puzzle_passage", false, 1.0f, 4.0f, 10, true);
}
void ActivateOrbKey(string &in asParent, string &in asChild, int alState)
{
	GiveSanityBoostSmall();
	PlayMusic("17_paper_herbert02.ogg", false, 1.0f, 4.0f, 10, true);
	SetPropActiveAndFade("orb_key_1", true, 1.0f);
	StartPlayerLookAt("orb_key_1", 2.0f, 2.0f, "");
	StartEffectEmotionFlash("Messages", "OrbKey", "insanity_imageflash01");
}
void CollideLookAtOrbArea(string &in asParent, string &in asChild, int alState)
{
	if(GetLocalVarInt("OrbRoomItemsVar") == 2)
		return;
	else
	{
		AddTimer("", 4.2f, "TimerStopLook");
		PlaySoundAtEntity("breath","react_breath.snt", "Player", 0.7f, false);
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0.1f);
		StartPlayerLookAt("orb_6_of_7", 3.3f, 3.3f, "");
		SetMessage("Hints", "CheckTheRoomFirst", 5.0f);
	}
}
void PlayAggroPiano(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 1.25f, "TimerScareInsanity");
	AddTimer("one", 4.25f, "TimerAggroObjects");
	AddTimer("", 5.25f, "TimerReactScareSmall");
	AddTimer("two", 9.25f, "TimerAggroObjects");
	AddTimer("", 10.25f, "TimerReactScareSmall");
	AddTimer("three", 14.2f, "TimerAggroObjects");
	AddTimer("", 15.2f, "TimerReactScareSmall");
	AddTimer("four", 19.0f, "TimerAggroObjects");
	AddTimer("", 20.0f, "TimerReactScareSmall");
	AddTimer("five", 23.55f, "TimerAggroObjects");
	AddTimer("", 24.55f, "TimerReactScareSmall");
	AddTimer("six", 26.75f, "TimerAggroObjects");
	AddTimer("", 28.0f, "TimerReactScareSmall");
	PlayMusic("01_maze_aggro_piano.ogg", false, 1.0f, 4.0f, 10, true);
	SetPlayerSanity(26.5f);
	SetPlayerMoveSpeedMul(0.05f);
	SetPlayerRunSpeedMul(0.05f);
	SetEntityActive("broom_1", true);
	SetEntityActive("brick_broken02_1", true);
	SetEntityActive("brick_broken02_2", true);
	SetEntityActive("brick_broken02_3", true);
	SetEntityActive("brick_broken02_4", true);
	SetEntityActive("brick_broken02_5", true);
	SetEntityActive("brick_broken02_6", true);
	SetEntityActive("brick_broken02_7", true);
	SetEntityActive("brick_broken02_8", true);
}
void PlayLovePiano(string &in asParent, string &in asChild, int alState)
{
    AddTimer("", 1.0f, "TimerLoveInsanity");
    AddTimer("", 35.0f, "Timetodie");
	PlayMusic("01_maze_love_piano.ogg", false, 1.0f, 4.0f, 10, true);
	PlaySoundAtEntity("eek", "01_maze_scare_whine_loop3", "Player", 0.5f, false);
	PlaySoundAtEntity("screaaaam", "12_girl_scream.snt", "Player", 0.5f, false);
	SetEntityActive("RealMonstersArea", false);
	SetEntityActive("angel_statue_49", true);
	SetEntityActive("angel_statue_50", true);
	SetEntityActive("angel_statue_51", true);
	SetEntityActive("angel_statue_52", true);
	SetEntityActive("angel_statue_72", true);
	SetEntityActive("angel_statue_73", true);
	SetEntityActive("angel_statue_74", true);
	SetEntityActive("angel_statue_75", true);
	SetEntityActive("angel_statue_76", true);
	SetEntityActive("angel_statue_77", true);
	SetEntityActive("angel_statue_78", true);
	SetEntityActive("angel_statue_79", true);
	SetEntityActive("angel_statue_80", true);
	SetEntityActive("angel_statue_81", true);
	SetEntityActive("angel_statue_82", true);
	SetEntityActive("angel_statue_83", true);
	SetEntityActive("angel_statue_96", true);
	SetEntityActive("angel_statue_97", true);
	SetEntityActive("angel_statue_98", true);
	SetEntityActive("angel_statue_99", true);
	SetEntityActive("angel_statue_100", true);
	SetEntityActive("angel_statue_101", true);
	SetEntityInteractionDisabled("emotion_stone_starter", true);
	SetInventoryDisabled(true);
	SetPlayerSanity(24.5f);
	SetPlayerMoveSpeedMul(0.1f);
	SetPlayerRunSpeedMul(0.1f);
	if(GetLocalVarInt("OpenedDoorsVar") == 5) CheckPoint ("AllDoorsOpened", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
	else CheckPoint ("StartPoint", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
	for(int i=1;i<=9;i++)
	{
		SetEntityActive("grunt0"+i, false);
		SetEntityActive("gruntevent0"+i, false);
		SetEntityActive("gruntsurprise0"+i, false);
		SetEntityActive("brute0"+i, false);
		SetEntityActive("bruteevent0"+i, false);
		SetEntityActive("brutesurprise0"+i, false);
		SetEntityActive("suitor0"+i, false);
		SetEntityActive("suitorevent0"+i, false);
		SetEntityActive("suitorsurprise0"+i, false);
	}
}
void PlayStrangePiano(string &in asParent, string &in asChild, int alState)
{
	AddLocalVarInt("StrangePianoPlayedVar", 1);
    AddTimer("", 1.5f, "TimerScareInsanity");
	PlayMusic("01_maze_strange_piano.ogg", false, 1.0f, 4.0f, 10, true);
	SetPlayerSanity(30.5f);
	SetPlayerMoveSpeedMul(0.05f);
	SetPlayerRunSpeedMul(0.05f);
	SetEntityActive("wooden_board02_1", true);
	SetEntityActive("wooden_board02_2", true);
	SetEntityActive("wooden_board03_1", true);
	SetEntityActive("wooden_board03_2", true);
	SetEntityActive("wood_box01_breakable_1", true);
	SetEntityActive("wood_box01_breakable_2", true);
	SetEntityActive("wood_box01_breakable_3", true);
	SetEntityActive("stool_wood_5", true);
	SetEntityActive("chair_wood_1", true);
	SetEntityActive("table_wood01_dyn_1", true);
	SetEntityActive("chair_nice02_3", true);
	SetEntityActive("bed_simple_movable_1", true);
	SetEntityActive("armchair_4", true);
	SetEntityActive("stool_wood_5", true);
}
void CollideReadyToRunArea(string &in asParent, string &in asChild, int alState)
{
	RemoveAnyActiveMonster();
	AddTimer("", 3.2f, "TimerReadyToRun");
	SetPlayerMoveSpeedMul(0.05f);
	SetPlayerRunSpeedMul(0.05f);
	SetLampLit("candlestick_tri_18", true, false);
	StartPlayerLookAt("AreaGirlSound_5", 1.0f, 0.7f, "");
	PlaySoundAtEntity("watchyourback", "01_maze_WatchYourBack", "Player", 0, false);
	SetMessage("Dialogue", "WatchYourBack", 3.15f);
	SetLightVisible("WYBLight_1", true);
	SetLightVisible("WYBLight_2", true);
	SetLightVisible("WYBLight_3", true);
	SetLightVisible("WYBLight_4", true);
}
void ActivateRottenApples1(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 0.6f, "TimerReactScare");
	AddTimer("", 4.1f, "TimerReactBreath");
	SetEntityActive("rotten_apple_12", true);
	SetEntityActive("rotten_apple_13", true);
	SetEntityActive("rotten_apple_14", true);
	SetEntityActive("rotten_apple_15", true);
	SetEntityActive("rotten_apple_16", true);
	SetEntityActive("rotten_apple_17", true);
	SetEntityActive("rotten_apple_18", true);
	SetEntityActive("rotten_apple_19", true);
	SetEntityActive("rotten_apple_20", true);
	SetEntityActive("rotten_apple_21", true);
	SetEntityActive("rotten_apple_22", true);
	SetEntityActive("rotten_apple_23", true);
	SetEntityActive("rotten_apple_24", true);
	SetEntityActive("rotten_apple_25", true);
	SetEntityActive("rotten_apple_26", true);
}
void ActivateRottenApples2(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 0.6f, "TimerReactScare");
	AddTimer("", 4.1f, "TimerReactBreath");
	SetEntityActive("rotten_apple_1", true);
	SetEntityActive("rotten_apple_2", true);
	SetEntityActive("rotten_apple_3", true);
	SetEntityActive("rotten_apple_4", true);
	SetEntityActive("rotten_apple_5", true);
	SetEntityActive("rotten_apple_6", true);
	SetEntityActive("rotten_apple_7", true);
	SetEntityActive("rotten_apple_8", true);
	SetEntityActive("rotten_apple_9", true);
	SetEntityActive("rotten_apple_10", true);
	SetEntityActive("rotten_apple_11", true);
}
void CollideRunForMonstersArea(string &in asParent, string &in asChild, int alState)
{
	ShowEnemyPlayerPosition("gruntevent04");
	ShowEnemyPlayerPosition("bruteevent02");
	ShowEnemyPlayerPosition("suitorevent01");
	if(GetGlobalVarInt("GrandpaFreeVar") == 1)
	{
		FadeEnemyToSmoke("gruntevent04", true);
		FadeEnemyToSmoke("bruteevent02", false);
		FadeEnemyToSmoke("suitorevent01", false);
	}
	else SetMessage("Hints", "Run", 3.0f);
}
void CollideRedCandleArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 1.0f, "TimerReactPant");
	AddTimer("", 3.0f, "TimerReactBreath");
	PlaySoundAtEntity("usetinderbox", "ui_use_tinderbox.snt", "candlestick_floor_red_6", 0.1f, false);
	PlaySoundAtEntity("breakthedoor", "break_wood.snt", "AreaBrokenDoorSound_1", 0.1f, false);
	PlaySoundAtEntity("bruteenabled", "sounds/enemy/brute/enabled", "AreaBrokenDoorSound_1", 0.2f, false);
	SetLampLit("candlestick_wall_orange_1", true, false);
	SetLampLit("candlestick_floor_red_6", true, true);
	SetPropHealth("cellar_wood01_2",0);
}
void PlayScarySteps(string &in asParent, string &in asChild, int alState)
{
	GiveSanityDamage(0.2f, false);
	PlayGuiSound("scare_steps_big", 0.7f);
	if(asChild == "ScaryStepsArea03") SetLampLit("candlestick_wall_132", true, true);
	else if(asChild == "ScaryStepsArea05") SetLampLit("candlestick_wall_203", true, true);
	else if(asChild == "ScaryStepsArea06") SetLampLit("candlestick_wall_110", true, true);
	else if(asChild == "ScaryStepsArea07") SetLampLit("candlestick_wall_155", true, true);
	else if(asChild == "ScaryStepsArea08")
	{
		SetLampLit("candlestick_wall_220", true, true);
		SetLampLit("candlestick_wall_221", true, true);
	}
	else if(asChild == "ScaryStepsArea09")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_13", true, true);
	}
	else if(asChild == "ScaryStepsArea11")
	{
		SetLampLit("candlestick_wall_47", true, true);
		SetLampLit("candlestick_wall_183", true, true);
	}
	else if(asChild == "ScaryStepsArea12") SetLampLit("candlestick_wall_131", true, true);
	else if(asChild == "ScaryStepsArea13")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_12", true, true);
	}
	else if(asChild == "ScaryStepsArea14") SetLampLit("candlestick_wall_74", true, true);
	else if(asChild == "ScaryStepsArea15")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_8", true, true);
	}
	else if(asChild == "ScaryStepsArea16")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_16", true, true);
	}
	else if(asChild == "ScaryStepsArea17")
	{
		SetLampLit("candlestick_wall_124", true, true);
		SetLampLit("candlestick_wall_159", true, true);
		SetLampLit("candlestick_wall_224", true, true);
		SetLampLit("candlestick_wall_24", true, true);
	}
	else if(asChild == "ScaryStepsArea18") SetLampLit("candlestick_wall_257", true, true);
	else if(asChild == "ScaryStepsArea19") SetLampLit("candlestick_wall_255", true, true);
	
	if(GetGlobalVarInt("CheckPointFoundVar") == 16)
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		GiveSanityBoostSmall();
	}
}
void CollideFoundTinyDoorArea(string &in asParent, string &in asChild, int alState)
{
	PlayGuiSound("01_maze_ImAlmostOutOfTime", 0.6f);
	SetMessage("Hints", "FoundThomas", 12.0f);	
}
void CollideBlockedWayArea2(string &in asParent, string &in asChild, int alState)
{
	RemoveAnyActiveMonster();
	PlayMusic("04_event_stairs", false, 1.0f, 4.0f, 10, true);
	SetPlayerMoveSpeedMul(0.25f);
	SetPlayerRunSpeedMul(0.25f);
	StartPlayerLookAt("torchsecond", 3.6f, 3.6f, "");
	SetEntityActive("torchsecond", true);
	SetEntityActive("empty_frame_1", true);
	PlaySoundAtEntity("close_gate", "close_gate", "Player", 0, false);
	AddTimer("", 0.9f, "TimerReactPant");
	AddTimer("", 5.25f, "TimerReactBreath");
	AddTimer("", 1.5f, "TimerStopLook");
	AddTimer("", 1.5f, "TimerWhispers");
	if(GetLocalVarInt("KeyVar") >= 1)
	{
		if(GetLocalVarInt("OpenedDoorsVar") == 5)
		{
			CheckPoint ("BCheckPoint2", "BlockedStartArea_2", "Respawn", "DeathHints", "FindTheMemories");
		}
		else
		{
			CheckPoint ("BCheckPoint2", "BlockedStartArea_2", "Respawn", "DeathHints", "FindTheDoor");
		}
	}
	else
	{
		CheckPoint ("BCheckPoint2", "BlockedStartArea_2", "Respawn", "DeathHints", "FindTheKey");
	}
}
void CollideVase5Area(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 1.75f, "TimerReactBreath");
	SetEntityActive("vase02_ghost_5", true);
}
void ActivateStatue47(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("angel_statue_47", true);
	SetEntityActive("angel_statue_48", false);
}
void ActivateStatue48(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("angel_statue_47", false);
	SetEntityActive("angel_statue_48", true);
}
void CollideSuitorEventArea1(string &in asParent, string &in asChild, int alState)
{
    SetLocalVarInt("SuitorDestroysGateVar", 1);
	SetMessage("Hints", "GoAway", 3.5f);
    SetPlayerMoveSpeedMul(0.05f);
    SetPlayerRunSpeedMul(0.05f);
    StartPlayerLookAt("suitorevent02", 1.0f, 0.6f, "");
    AddTimer("", 3.5f, "TimerStopLook");
    AddTimer("", 1.25f, "TimerReactScare");
    AddTimer("", 4.0f, "TimerReactBreath");
	PlayMusic("21_event_pit.ogg", false, 1.0f, 4.0f, 10, true);
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	SetLocalVarString("gsCurrActiveEnemy", "suitorevent02");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_465", 3, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_466", 0.001f, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_467", 2, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_468", 0.001f, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_469", 0.001f, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_470", 0.001f, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_471", 0.001f, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_472", 2, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_473", 0.001f, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_474", 0.001f, "");
	AddEnemyPatrolNode("suitorevent02", "PathNodeArea_177", 1, "");
	SetEntityCustomFocusCrossHair("FadeKnifeArea", "Pick");
    SetEntityActive("wooden_board03_8", true);
    SetEntityActive("wooden_board03_7", true);  
    SetEntityActive("wooden_board03_6", true);  
    SetEntityActive("wooden_board03_5", true);  
    SetEntityActive("wooden_board03_4", true);  
    SetEntityActive("wooden_board03_3", true);    
    SetEntityActive("suitorevent02", true);
	SetLightVisible("SuitorEvent01Light", true);
}
void CollideBlockedWayArea3(string &in asParent, string &in asChild, int alState)
{
	RemoveAnyActiveMonster();
	PlayMusic("11_event_tree", false, 1.0f, 4.0f, 10, true);
	SetPlayerMoveSpeedMul(0.25f);
	SetPlayerRunSpeedMul(0.25f);
	StartPlayerLookAt("angel_statue_31", 3.6f, 3.6f, "");
	SetEntityActive("torchthird", true);
	SetEntityActive("angel_statue_31", true);
	SetEntityActive("candlestick_wall_142", true);
	SetEntityActive("candlestick_wall_143", true);
	SetEntityActive("candlestick_wall_144", true);
	PlaySoundAtEntity("FemaleLaugh", "00_laugh", "Player", 0, false);
	AddTimer("", 0.9f, "TimerReactPant");
	AddTimer("", 5.25f, "TimerReactBreath");
	AddTimer("", 1.5f, "TimerStopLook");
	AddTimer("", 1.5f, "TimerWhispers");
	if(GetLocalVarInt("KeyVar") >= 1)
	{
		if(GetLocalVarInt("OpenedDoorsVar") == 5)
		{
			CheckPoint ("BCheckPoint3", "BlockedStartArea_3", "Respawn", "DeathHints", "FindTheMemories");
		}
		else
		{
			CheckPoint ("BCheckPoint3", "BlockedStartArea_3", "Respawn", "DeathHints", "FindTheDoor");
		}
	}
	else
	{
		CheckPoint ("BCheckPoint3", "BlockedStartArea_3", "Respawn", "DeathHints", "FindTheKey");
	}
}
void PlayWhispers(string &in asParent, string &in asChild, int alState)
{
	GiveSanityDamage(0.2f, false);
	PlayGuiSound("flashback_flash", 0.7f);
	if(asChild == "WhispersArea02")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_6", true, true);
	}
	else if(asChild == "WhispersArea03")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_5", true, true);
	}
	else if(asChild == "WhispersArea04")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_11", true, true);
	}
	else if(asChild == "WhispersArea06")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_15", true, true);
	}
	else if(asChild == "WhispersArea07")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_1", true, true);
	}
	else if(asChild == "WhispersArea08")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_4", true, true);
	}
	else if(asChild == "WhispersArea09")
	{
		SetLampLit("candlestick02_1", true, true);
		SetLampLit("candlestick_wall_112", true, true);
	}
	else if(asChild == "WhispersArea05") SetLampLit("candlestick02_2", true, true);
	else if(asChild == "WhispersArea10")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_7", true, true);
	}
	else if(asChild == "WhispersArea12")
	{
		SetLampLit("candlestick_tri_blue_1", true, true);
		SetLampLit("candlestick02_3", true, true);
		SetLampLit("candlestick02_4", true, true);
	}
	else if(asChild == "WhispersArea13")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_17", true, true);
	}
	else if(asChild == "WhispersArea14")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_3", true, true);
	}
	else if(asChild == "WhispersArea15")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_10", true, true);
	}
	else if(asChild == "WhispersArea16")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_9", true, true);
	}
	else if(asChild == "WhispersArea17")
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		SetLampLit("candlestick_wall_blue_2", true, true);
	}
	else if(asChild == "WhispersArea19") SetLampLit("candlestick_wall_241", true, true);
	
	if(GetGlobalVarInt("CheckPointFoundVar") == 16)
	{
		AddGlobalVarInt("CheckPointFoundVar", 1);
		GiveSanityBoostSmall();
	}
}
void CollideWooshArea1(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 0.5f, "TimerReactScareSmall");
	PlaySoundAtEntity("woosh", "joint_iron_maiden_close", "Player", 0, false);
	SetEntityActive("hanging_lantern_wall_3", true);
	SetEntityActive("hanging_lantern_wall_6", true);
}
void CollideWooshArea2(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 0.5f, "TimerReactScareSmall");
	PlaySoundAtEntity("woosh", "joint_iron_maiden_close", "Player", 0, false);
	PlayMusic("01_maze_strange.ogg", false, 1.0f, 4.0f, 10, true);
	SetEntityActive("hanging_lantern_wall_2", true);
	SetEntityActive("hanging_lantern_wall_7", true);
	SetMessage("Hints", "FamiliarPlace", 5.5f);
}
void CollideForceStorageArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 0.5f, "TimerReactScareSmall");
	SetMessage("Hints", "MysteriousForce", 10.0f);
}
void CollideWooshArea3(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 0.5f, "TimerReactScareSmall");
	AddEntityCollideCallback("Player", "ForceStorageArea", "CollideForceStorageArea", true, 1);
	PlaySoundAtEntity("woosh", "joint_iron_maiden_close", "Player", 0, false);
	SetEntityActive("hanging_lantern_wall_1", true);
	SetEntityActive("hanging_lantern_wall_8", true);
	SetEntityActive("web_1", true);
	SetEntityActive("block_box_41", true);
	StopMusic(6.0f, 0);
	for(int i=1;i<=9;i++)
	{
		SetEntityActive("grunt0"+i, false);
		SetEntityActive("gruntevent0"+i, false);
		SetEntityActive("gruntsurprise0"+i, false);
		SetEntityActive("brute0"+i, false);
		SetEntityActive("bruteevent0"+i, false);
		SetEntityActive("brutesurprise0"+i, false);
		SetEntityActive("suitor0"+i, false);
		SetEntityActive("suitorevent0"+i, false);
		SetEntityActive("suitorsurprise0"+i, false);
	}
}
void CheckBruteBreakDoorEvent(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("doordestroyed", "break_wood_metal.snt", asChild, 0.0f, false);
	SetEnemyIsHallucination(asParent, true);      
}
void CollideLookAtTinyDoorArea(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 3.0f, "TimerStopLook");
	SetMessage("Hints", "WhosKnocking", 5.0f);
	StartPlayerLookAt("castle_silent_1", 3.0f, 3.5f, "");
	SetPlayerMoveSpeedMul(0.1f);
	SetPlayerRunSpeedMul(0.1f);
}
void OutOfMap(string &in asParent, string &in asChild, int alState)
{
	GivePlayerDamage(10000000, "BloodSplat", false, true);
	if(asChild == "DeathArea_2") SetLocalVarInt("DeathByFallingVar", 1);
}
void SuitorDestroysGate(string &in asParent, string &in asChild, int alState)
{
	AddTimer("", 5.0f, "TimerReactBreath");
	AddTimer("", 1.0f, "TimerReactScare");
	PlayGuiSound("15_ripp_door", 0.7f);
	SetPropHealth("sewer_grate_worn_1", 0);
	SetEnemyDisableTriggers("suitorevent02", false);
}
void CollideAreaFire(string &in asParent, string &in asChild, int alState)
{
	if(alState == 1) AddTimer("burn", 0.1f, "TimerBurnFire");
	else RemoveTimer("burn");
}

//END COLLIDE FUNCTIONS//

//BEGIN USE ITEM FUNCTIONS//

void UsedKeyOnPrisonDoor(string &in asItem, string &in asEntity)
{
	CompleteQuest("FindTheKey", "FindTheKey");
	GiveSanityBoostSmall();
	PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
	RemoveItem(asItem);
	SetLocalVarInt("PrisonDoorVar", 2);
	SetSwingDoorLocked("metal_1", false, false);
}
void UsedKeyOnWoodDoor(string &in asItem, string &in asEntity)
{
	AddTimer("orb", 22.5f, "TimerIsItOver");
	FadeOut(0.0f);
	PlayGuiSound("guardian_idle", 0.9f);
	SetEntityInteractionDisabled(asEntity, true);
	SetPlayerActive(false);
	SetPlayerSanity(75.0f);
	SetMessage("Monologue", "ExitOrbDoor", 22.0f);
	StopSound("record03", 0.5f);
	PlayMusic("15_paper_daniel02", false, 1.0f, 1.3f, 10, true); 
	PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
	RemoveItem(asItem);
}
void UseKnifeOnWeb(string &in asItem, string &in asEntity)
{
	if(StringContains(asEntity, "web_"))
	{
		SetMessage("Hints", "FailUsedKnife", 5.0f);
		return;
	}
	SetEntityActive(asEntity, false);
	GiveSanityBoostSmall();
	PlaySoundAtEntity("guardian_distant2","guardian_distant2.snt", "Player", 0.8f, false);
	SetPropHealth("web_5", 0);
	RemoveItem(asItem);
}
void OpenBottomStairsDoor(string &in asItem, string &in asEntity)
{
	AddTimer("", 9.0f, "TimerLookAtInsanePaint");
	PlayGuiSound("crank_old_stuck", 0.5f);
	PlayMusic("amb_extra02", true, 1.0f, 1.3f, 10, true);
	SetMessage("Dialogue", "YouAreLate", 9.0f);
	SetEntityActive("painting_portrait_insane_4", true);
	SetPlayerSanity(25.0f);
	SetPlayerActive(false);
	StopSound("strongknock", 1.0f);
	RemoveItem(asItem);
}
void ActivateHollowNeedle(string &in asItem, string &in asEntity)
{
	if(asEntity == "bonfire_1" || asEntity == "bonfire_2" || asEntity == "candlestick_wall_199")
	{
		SetMessage("Hints", "BurnFail", 5.0f);
		return;
	}
	GiveSanityBoostSmall();
	PlayMusic("02_puzzle.ogg", false, 1.0f, 4.0f, 10, true);
	PlaySoundAtEntity("burnflesh", "15_player_burn", asEntity, 0.0f, false);
	SetMessage("Hints", "Needle", 5.0f);
	RemoveItem(asItem);
	if(asEntity == "fire_place_1")
	{
		SetEntityActive("hollow_needle_1", true);
		StartPlayerLookAt("hollow_needle_1", 1.6f, 1.6f, "");
	}
	else if(asEntity == "bonfire_nosound_1")
	{
		SetEntityActive("hollow_needle_2", true);
		StartPlayerLookAt("hollow_needle_2", 1.6f, 1.6f, "");
	}
}
void SetMonstersInactive(string &in asItem, string &in asEntity)
{
	GiveSanityBoostSmall();
	PlaySoundAtEntity("quest_completed", "quest_completed", "Player", 0.5f, false);
	PlaySoundAtEntity("whisper", "insanity_whisper", "Player", 0.4f, false);
	PlaySoundAtEntity("orbloose", "22_orb_loose.snt", asEntity, 0.5f, false);
	RemoveItem(asItem);
	SetMessage("Hints", "FoundSomePeace", 7.0f);
	SetEntityActive("gruntevent04", false);
	SetEntityActive("bruteevent02", false);
	SetEntityActive("suitorevent01", false);
	SetEntityActive("AreaAmbushEscape_1", false);
	SetEntityActive("AreaAmbushEscape_2", false);
	SetLampLit(asEntity, true, true);
	if(asItem == "orb_piece_1")
	{
		RemoveUseItemCallback("orbpart1");
	}
	else if(asItem == "orb_piece_2")
	{
		RemoveUseItemCallback("orbpart2");
	}
	else if(asItem == "orb_piece_3")
	{
		RemoveUseItemCallback("orbpart3");
	}
	else if(asItem == "orb_piece_4")
	{
		RemoveUseItemCallback("orbpart4");
	}
	else if(asItem == "orb_piece_5")
	{
		RemoveUseItemCallback("orbpart5");
	}
	else if(asItem == "orb_piece_6")
	{
		RemoveUseItemCallback("orbpart6");
	}
	
	if(asEntity == "orb_pedestal_1")
	{
		AddTimer("pedestal1", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_1", true, 1.0f);
	}
	else if(asEntity == "orb_pedestal_2")
	{
		AddTimer("pedestal2", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_2", true, 1.0f);
		SetEntityActive("BruteArea03", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("BruteArea03Seal", true);
	}
	else if(asEntity == "orb_pedestal_3")
	{
		AddTimer("pedestal3", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_3", true, 1.0f);
		SetEntityActive("BruteArea05", false);	
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("BruteArea05Seal", true);	
	}
	else if(asEntity == "orb_pedestal_4")
	{
		AddTimer("pedestal4", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_4", true, 1.0f);
		SetEntityActive("SuitorArea05", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("SuitorArea05Seal", true);
	}
	else if(asEntity == "orb_pedestal_5")
	{
		AddTimer("pedestal5", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_5", true, 1.0f);
		SetEntityActive("SuitorArea06", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("SuitorArea06Seal", true);
	}
	else if(asEntity == "orb_pedestal_6")
	{
		AddTimer("pedestal6", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_6", true, 1.0f);
		SetEntityActive("BruteArea01", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("BruteArea01Seal", true);
	}
	else if(asEntity == "orb_pedestal_7")
	{
		AddTimer("pedestal7", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_7", true, 1.0f);
		SetEntityActive("SuitorArea03", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("SuitorArea03Seal", true);
	}
	else if(asEntity == "orb_pedestal_8")
	{
		AddTimer("pedestal8", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_8", true, 1.0f);
		SetEntityActive("BruteArea02", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("BruteArea02Seal", true);
	}
	else if(asEntity == "orb_pedestal_9")
	{
		AddTimer("pedestal9", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_9", true, 1.0f);
		SetEntityActive("SuitorArea04", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("SuitorArea04Seal", true);
	}
	else if(asEntity == "orb_pedestal_10")
	{
		AddTimer("pedestal10", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_10", true, 1.0f);
		SetEntityActive("BruteArea06", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("BruteArea06Seal", true);
	}
	else if(asEntity == "orb_pedestal_11")
	{
		AddTimer("pedestal11", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_11", true, 1.0f);
		SetEntityActive("GruntArea06", false);	
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("GruntArea06Seal", true);	
	}
	else if(asEntity == "orb_pedestal_12")
	{
		AddTimer("pedestal12", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_12", true, 1.0f);
		SetEntityActive("SuitorArea02", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", true);
	}
	else if(asEntity == "orb_pedestal_13")
	{
		AddTimer("pedestal13", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_13", true, 1.0f);
		SetEntityActive("BruteArea04", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("BruteArea04Seal", true);
	}
	else if(asEntity == "orb_pedestal_14")
	{
		AddTimer("pedestal14", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_14", true, 1.0f);
		SetEntityActive("GruntArea02", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("GruntArea02Seal", true);
	}
	else if(asEntity == "orb_pedestal_15")
	{
		AddTimer("pedestal15", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_15", true, 1.0f);
		SetEntityActive("GruntArea01", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("GruntArea01Seal", true);
	}
	else if(asEntity == "orb_pedestal_16")
	{
		AddTimer("pedestal16", 7.0f, "TimerRemovePedestal");
		SetPropActiveAndFade("orbpart_16", true, 1.0f);
		SetEntityActive("GruntArea04", false);
		SetEntityActive("GruntArea01Seal", false);
		SetEntityActive("GruntArea02Seal", false);
		SetEntityActive("GruntArea04Seal", false);
		SetEntityActive("GruntArea06Seal", false);
		SetEntityActive("BruteArea01Seal", false);
		SetEntityActive("BruteArea02Seal", false);
		SetEntityActive("BruteArea03Seal", false);
		SetEntityActive("BruteArea04Seal", false);
		SetEntityActive("BruteArea05Seal", false);
		SetEntityActive("BruteArea06Seal", false);
		SetEntityActive("SuitorArea02Seal", false);
		SetEntityActive("SuitorArea03Seal", false);
		SetEntityActive("SuitorArea04Seal", false);
		SetEntityActive("SuitorArea05Seal", false);
		SetEntityActive("SuitorArea06Seal", false);
		SetEntityActive("GruntArea04Seal", true);
	}
	
	for(int i=1;i<=9;i++)
	{
		SetEntityActive("grunt0"+i, false);
		SetEntityActive("gruntevent0"+i, false);
		SetEntityActive("gruntsurprise0"+i, false);
		SetEntityActive("brute0"+i, false);
		SetEntityActive("bruteevent0"+i, false);
		SetEntityActive("brutesurprise0"+i, false);
		SetEntityActive("suitor0"+i, false);
		SetEntityActive("suitorevent0"+i, false);
		SetEntityActive("suitorsurprise0"+i, false);
	}
	RemoveAnyActiveMonster();
	DisableMonstersActivationAreas();
	SetLocalVarInt("giMonsterSpawnTime", 5);
	AddTimer("2", 12.0f, "TimerRemoveMonster");
	SetLocalVarString("LastOrbPedestalUsedVar", asEntity);
}
void StopKnock(string &in asItem, string &in asEntity)
{
	CompleteQuest("StopKnocking", "StopKnocking");
	SetMessage("Dialogue", "GodBePraised", 3.6f);
	SetGlobalVarInt("GrandpaFreeVar", 1);
	AddTimer("", 4.4f, "TimerLittleDoorHint");
	PlayMusic("03_puzzle_secret.ogg", false, 0.6f, 5.3f, 10, true);
	PlaySoundAtEntity("grandpasaved", "01_maze_hector_saved", "castle_silent_1", 0.0f, false);
	PlaySoundAtEntity("unlock_tiny_door", "door_sewer_unlock", asEntity, 0, false);
	RemoveItem(asItem);
	RemoveTimer("knock");
	SetEnemyIsHallucination("brute08", true);
	SetEnemyIsHallucination("grunt08", true);
	SetEnemyIsHallucination("suitor08", true);
	SetEnemyIsHallucination("suitor09", true);
	SetEnemyIsHallucination("bruteevent02", true);
	SetEnemyIsHallucination("gruntevent04", true);
	SetEnemyIsHallucination("suitorevent01", true);
	SetEnemyIsHallucination("brutesurprise01", true);
	SetEnemyIsHallucination("brutesurprise02", true);
	SetEnemyIsHallucination("brutesurprise03", true);
	SetEnemyIsHallucination("gruntsurprise01", true);
}
void UsedKeyOnEndingDoor(string &in asItem, string &in asEntity)
{
	RemoveAnyActiveMonster();
	DisableMonstersActivationAreas();
	SetPlayerLookSpeedMul(0.05f);
	SetPlayerMoveSpeedMul(0.05f);
	SetPlayerRunSpeedMul(0.05f);
	SetPlayerHealth(900.0f);
	StopMusic(5.0f, 0);
	SetEntityInteractionDisabled(asEntity, true); 
	PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
	RemoveItem(asItem);
	PlayGuiSound("react_sigh.snt", 0.7f);
	SetLanternActive(false, true);	
	if(asEntity == "wooddoororb_1")
	{
		AddTimer("wood", 17.1f, "TimerOpenEndDoor");
		AddTimer("orb", 24.0f, "TimerEndingDoorMonologue");
		AddTimer("orb", 37.0f, "TimerTeleportToEndArea");
		StartEffectEmotionFlash("Messages", "OrbDoor", "ui_emotion_stone"); 
		PlayMusic("15_paper_daniel03.ogg", false, 1.1f, 4.1f, 10, true);
	}
	if(asEntity == "wooddoorbrother")
	{
		AddTimer("wood", 14.1f, "TimerOpenEndDoor");
		AddTimer("brother", 21.0f, "TimerEndingDoorMonologue");
		AddTimer("brother", 34.0f, "TimerTeleportToEndArea");
		StartEffectEmotionFlash("Messages", "BrotherDoor", "ui_emotion_stone"); 
		PlayMusic("21_agrippa_lever.ogg", false, 1.1f, 4.1f, 10, true);
	}
	if(asEntity == "orbdoorbrute")
	{
		AddTimer("large", 20.1f, "TimerOpenEndDoor");
		AddTimer("alone", 26.0f, "TimerTeleportToEndArea");
		PlayMusic("29_amb_end_daniel.ogg", false, 1.1f, 4.1f, 10, true);
		SetLanternDisabled(true);
		StartEffectEmotionFlash("Messages", "SolitudeDoor", "insanity_imageflash01"); 
	}
	if(asEntity == "orbdoornightmare")
	{
		AddTimer("large", 18.1f, "TimerOpenEndDoor");
		AddTimer("empty", 24.0f, "TimerTeleportToEndArea");
		StartEffectEmotionFlash("Messages", "EmptyFrameDoor", "ui_emotion_stone"); 
		PlayMusic("10_paper_daniel02.ogg", false, 1.1f, 4.1f, 10, true);
	}
	if(asEntity == "orbdoorgrunt")
	{
		AddTimer("large", 17.1f, "TimerOpenEndDoor");
		AddTimer("grandpa", 23.0f, "TimerTeleportToEndArea");
		StartEffectEmotionFlash("Messages", "GrandpaDoor", "insanity_imageflash01"); 
		PlayMusic("21_paper_daniel01.ogg", false, 1.1f, 4.1f, 10, true);
	}
	if(asEntity == "orbdoorlove")
	{
		AddTimer("large", 17.1f, "TimerOpenEndDoor");
		AddTimer("love", 23.0f, "TimerTeleportToEndArea");
		StartEffectEmotionFlash("Messages", "LoveDoor", "insanity_imageflash01"); 
		PlayMusic("01_maze_calm.ogg", false, 1.1f, 4.1f, 10, true);
		SetInventoryDisabled(true);
		RemoveTimer("TimerGirlCry");
		RemoveTimer("TimerStrangerThings");
		RemoveTimer("knock");
		for(int i=1;i<=9;i++)
		{
			SetEntityActive("grunt0"+i, false);
			SetEntityActive("gruntevent0"+i, false);
			SetEntityActive("gruntsurprise0"+i, false);
			SetEntityActive("brute0"+i, false);
			SetEntityActive("bruteevent0"+i, false);
			SetEntityActive("brutesurprise0"+i, false);
			SetEntityActive("suitor0"+i, false);
			SetEntityActive("suitorevent0"+i, false);
			SetEntityActive("suitorsurprise0"+i, false);
		}
	}
}

//END USE ITEM FUNCTIONS//

//BEGIN TIMER FUNCTIONS//

void TimerWakeUp(string &in asTimer)
{
	if(asTimer == "one")
	{
		AddTimer("two", 7.0f, "TimerWakeUp");
		PlayGuiSound("insanity_whisper", 0.1f);
		SetMessage("Messages", "WakeUp", 6.0f);
	}
	if(asTimer == "two")
	{
		AddTimer("", 1.0f, "TimerReactScareSmall");
		FadeGlobalSoundVolume(1.0f, 16.0f);
		FadeIn(6.0f);
		//PlaySoundAtEntity("MazeAmbSound", "01_maze_amb_guardian", "AmbSoundArea", 59.9f, true);
		SetPlayerActive(true);
		SetPlayerSanity(5.5f);
	}
}
void TimerStartShelfSound(string &in asTimer)
{
	PlaySoundAtEntity("clank", "L02_start", "AreaShelfRotatePoint", 0.0f, false);
	PlaySoundAtEntity("moveshelf", "L02_scrape", "AreaShelfRotatePoint", 2.0f, false);	
	FadeLightTo("PointLight_44", 0, 0, 0, 0, 0, 4);	
	StartScreenShake(0.005f, 4.0f, 2.0f, 2.0f);	
}
void TimerStopShelfSound(string &in asTimer)
{
	StopSound("moveshelf", 0.5f);
	PlaySoundAtEntity("clank2", "L02_stop", "AreaShelfRotatePoint", 0.0f, false);
}
void TimerOutOfPortal(string &in asTimer)
{
	if(asTimer == "teleportoutofportal")
	{
		TeleportPlayer("PlayerStartOrbEnd_2");
		return;
	}
	else
	{
		FadeIn(6.0f);
		PlayGuiSound("guardian_activated.snt", 1.0f);
		PlaySoundAtEntity("slime", "slime_loop", "slime_anim_ceiling_10", 2.0f, true);
		PlaySoundAtEntity("slime", "slime_loop", "slime_anim_ceiling_11", 2.0f, true);
		PlaySoundAtEntity("slime", "slime_loop", "slime_anim_wall_11", 2.0f, true);
		PlaySoundAtEntity("slime", "slime_loop", "slime_anim_wall_12", 2.0f, true);
		SetEntityActive("SlimeDamageArea_1", true);
		SetEntityActive("SlimeDamageArea_2", true);
		SetEntityActive("SlimeDamageArea_3", true);
		SetEntityActive("SlimeDamageArea_4", true);
		SetEntityActive("SlimeDamageArea_5", true);
		SetPlayerActive(true);
		SetPlayerSanity(10.0f);
	}
}
void TimerLookAtInsanePaint(string &in asTimer)
{
	AddTimer("one", 4.0f, "TimerTeleportStorage");
	AddTimer("", 3.0f, "TimerStopLook");
	AddTimer("", 1.65f, "TimerReactScare");
	PlaySoundAtEntity("yoursoulshallsuffer", "01_maze_YourSoulShallSuffer", "painting_portrait_insane_4", 0.0f, false);
	SetMessage("Dialogue", "YourSoulShallSuffer", 6.0f);
	StartPlayerLookAt("painting_portrait_insane_4", 2.0f, 2.0f, "");	
}
void TimerTeleportStorage(string &in asTimer)
{
	if(asTimer == "getinside") PlayGuiSound("01_maze_door_storage", 1.0f);
	if(asTimer == "one")
	{
		AddTimer("two", 6.0f, "TimerTeleportStorage");
		AddTimer("getinside", 1.0f, "TimerTeleportStorage");
		FadeOut(0.0f);
		SetLightVisible("PointLight_52", true);
		SetPlayerSanity(55.0f);
	}
	if(asTimer == "two")
	{
		AddTimer("three", 3.1f, "TimerTeleportStorage");
		FadeIn(3.0f);
		PlayMusic("29_amb_end_daniel", false, 1.0f, 3.6f, 10, true);
		TeleportPlayer("PlayerStartGrandpaEnd_3");
	}
	if(asTimer == "three")
	{
		AddTimer("four", 1.5f, "TimerTeleportStorage");
		AddTimer("", 13.7f, "TimerStopLook");
		PlayGuiSound("player_cough", 0.7f);
		StartPlayerLookAt("DeadManLookArea", 2.0f, 2.0f, "");
	}
	if(asTimer == "four")
	{
		AddTimer("five", 6.6f, "TimerTeleportStorage");
		SetMessage("Monologue", "ImSorryGrandpa", 6.5f);
	}
	if(asTimer == "five")
	{
		AddTimer("grandpa", 7.5f, "TimerIsItOver");
		SetMessage("Monologue", "IllAlways", 7.1f);
	}
}
void TimerIsItOver(string &in asTimer)
{
	FadeOut(0.0f);
	SetMessage("Monologue", "IsItOver", 5.0f);
	if(asTimer == "empty")
	{
		AddTimer("empty", 5.5f, "TimerTeleportMaze");
		SetLocalVarInt("DeathByFallingVar", 0);
		SetPlayerHealth(55.0f);
		SetPlayerSanity(40.0f);
		SetPlayerMoveSpeedMul(1.005f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerJumpForceMul(1.0f);
	}
	if(asTimer == "grandpa")
	{
		AddTimer("grandpa", 5.5f, "TimerTeleportMaze");
	}
	if(asTimer == "alone")
	{
		AddTimer("alone", 6.5f, "TimerTeleportMaze");
		SetLocalVarInt("DeathBySolitudeVar", 0);
	}
	if(asTimer == "orb")
	{
		AddTimer("orb", 6.5f, "TimerTeleportMaze");
	}
	if(asTimer == "brother")
	{
		AddTimer("brother", 6.5f, "TimerTeleportMaze");
		SetPlayerSanity(70.0f);
	}
}
void TimerTeleportMaze(string &in asTimer)
{
	ResetMonstersActivationAreas();
	AddLocalVarInt("OpenedDoorsVar", 1);
	AddTimer("", 0.1f, "PlayAlternativeMusic");
	GiveSanityBoostSmall();
	PlaySoundAtEntity("guardian_distant2","guardian_distant2.snt", "Player", 0.8f, false);
	SetFogActive(true);
	SetPlayerActive(true);
	FadeIn(10.0f);
	if(asTimer == "grandpa")
	{
		PlaySoundAtEntity("slime", "slime_loop", "web_3", 2.0f, true);
		SetEntityActive("web_3", true);
		SetEntityActive("web_4", true);
		AddUseItemCallback("", "ceremony_knife_1", "web_3", "UseKnifeOnWeb", false);
		AddUseItemCallback("", "ceremony_knife_1", "web_4", "UseKnifeOnWeb", false);
		SetEntityActive("memorygrandpaend", true);
		PlaySoundAtEntity("memorygrandpaend_sound", "01_memory_whisper_rand.snt", "memorygrandpaend", 0, true);
		SetEntityActive("painting_portrait_insane_6", true);
		SetLightVisible("PointLight_60", true);
		TeleportPlayer("PlayerStartGruntArea");
	}
	if(asTimer == "empty")
	{
		PlaySoundAtEntity("slime", "slime_loop", "web_6", 2.0f, true);
		SetEntityActive("web_6", true);
		SetEntityActive("web_7", true);
		AddUseItemCallback("", "ceremony_knife_1", "web_6", "UseKnifeOnWeb", false);
		AddUseItemCallback("", "ceremony_knife_1", "web_7", "UseKnifeOnWeb", false);
		SetEntityActive("memoryemptyend", true);
		PlaySoundAtEntity("memoryemptyend_sound", "01_memory_whisper_rand.snt", "memoryemptyend", 0, true);
		SetLanternDisabled(false);
		SetLightVisible("PointLight_80", true);
		TeleportPlayer("PlayerStartDefaultArea");
		for(int i=1; i<=5; i++)
		{
			SetEntityActive("wine1_"+i, true);
			SetEntityActive("wine2_"+i, true);
		}		
	}
	if(asTimer == "alone")
	{
		PlaySoundAtEntity("slime", "slime_loop", "web_8", 2.0f, true);
		SetEntityActive("web_8", true);
		SetEntityActive("web_9", true);
		AddUseItemCallback("", "ceremony_knife_1", "web_8", "UseKnifeOnWeb", false);
		AddUseItemCallback("", "ceremony_knife_1", "web_9", "UseKnifeOnWeb", false);
		SetEntityActive("memoryaloneend", true);
		PlaySoundAtEntity("memoryaloneend_sound", "01_memory_whisper_rand.snt", "memoryaloneend", 0, true);
		SetEntityActive("painting01_dyn_5", true);
		SetEntityActive("painting01_dyn_6", true);
		SetLanternDisabled(false);
		SetLightVisible("PointLight_88", true);
		TeleportPlayer("PlayerStartBruteArea");		
	}
	if(asTimer == "orb")
	{
		PlaySoundAtEntity("slime", "slime_loop", "web_10", 2.0f, true);
		SetEntityActive("web_10", true);
		SetEntityActive("web_11", true);
		SetEntityActive("web_12", true);
		SetEntityActive("slime_3way_10", true);
		SetEntityActive("slime_3way_11", true);
		SetEntityActive("slime_3way_12", true);
		SetEntityActive("slime_3way_13", true);
		SetEntityActive("memoryorbend", true);
		PlaySoundAtEntity("memoryorbend_sound", "01_memory_whisper_rand.snt", "memoryorbend", 0, true);
		SetLightVisible("PointLight_102", true);
		TeleportPlayer("PlayerStartOrbArea");
	}
	if(asTimer == "brother")
	{
		PlaySoundAtEntity("slime", "slime_loop", "web_14", 2.0f, true);
		PlaySoundAtEntity("slime", "slime_loop", "web_15", 2.0f, true);
		SetEntityActive("web_13", true);
		SetEntityActive("web_14", true);
		SetEntityActive("web_15", true);
		AddUseItemCallback("", "ceremony_knife_1", "web_13", "UseKnifeOnWeb", false);
		AddUseItemCallback("", "ceremony_knife_1", "web_14", "UseKnifeOnWeb", false);
		AddUseItemCallback("", "ceremony_knife_1", "web_15", "UseKnifeOnWeb", false);
		SetEntityActive("transformation_poster02_2", true);
        SetEntityActive("transformation_poster01_2", true);
        SetEntityActive("transformation_poster04_2", true);
        SetEntityActive("transformation_poster03_2", true);
        SetEntityActive("crude_man_chains_statue_2", true);
		SetEntityActive("candlestick_tri_25", true);
		SetEntityActive("candlestick_tri_26", true);
		SetEntityActive("memorybrotherend", true);
		PlaySoundAtEntity("memorybrotherend_sound", "01_memory_whisper_rand.snt", "memorybrotherend", 0, true);
		SetLanternDisabled(false);
		SetLightVisible("PointLight_104", true);
		ShowPlayerCrossHairIcons(true);
		TeleportPlayer("PlayerStartBroArea");
	}
	if(GetLocalVarInt("OpenedDoorsVar")==5)
	{
		CheckPoint ("AllDoorsOpened", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
	}
	else
	{
		CheckPoint ("BackToTheMaze", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
	}
}
void TimerTeleportDarkRoom(string &in asTimer)
{
	FadeIn(3.0f);
	PlayGuiSound("close_door", 0.9f);
	PlayMusic("01_maze_amb01", true, 1.0f, 0.5f, 10, false);
	SetMessage("Monologue", "DarkRoom", 13.9f);
	SetPlayerActive(true);
	TeleportPlayer("PlayerStartAloneEnd_2");
}
void TimerAngelBehindYou(string &in asTimer)
{
	AddTimer("", 13.0f, "TimerFadeOut");
	AddTimer("", 13.5f, "TimerStopLook");
	AddTimer("alone", 18.0f, "TimerIsItOver");
	AddTimer("scare", 1.0f, "TimerPlayerReactions");
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	AddTimer("breathl", 5.0f, "TimerPlayerReactions");
	PlayGuiSound("ui_terror_meter", 0.2f);
	PlayGuiSound("01_maze_angel_laugh", 1.0f);
	SetEntityActive("angel_statue_90", true);
	SetEntityActive("angel_statue_102", true);
	SetEntityActive("angel_statue_103", true);
	SetEntityActive("angel_statue_104", true);
	SetMessage("Monologue", "WhatDoYouWant", 10.0f);
	StartPlayerLookAt("AngelLookArea", 3.0f, 3.5f, "");
	StartScreenShake(0.2f, 10.0f, 6.5f, 4.0f);
}
void TimerGruntInsideRoom(string &in asTimer)
{
	if(asTimer == "first")
	{
		AddTimer("second", 0.9f, "TimerGruntInsideRoom");
		PlayGuiSound("01_maze_stop_phonograph", 0.9f);
		StopMusic(0.0f, 10);
	}
	if(asTimer == "second")
	{
		AddTimer("", 1.7f, "TimerJumpScare");
		AddTimer("third", 5.0f, "TimerGruntInsideRoom");
		PlayGuiSound("react_breath_slow", 0.9f);
		PlayGuiSound("door_mansion_close", 0.7f);
		StartPlayerLookAt("phonograph_3", 1.2f, 1.2f, "");
	}
	if(asTimer == "third")
	{
		AddTimer("fourth", 2.7f, "TimerGruntInsideRoom");
		PlayGuiSound("01_maze_grunt_notice", 0.8f);
		StartPlayerLookAt("gruntinsideroom", 9.9f, 9.9f, "");
	}
	if(asTimer == "fourth")
	{
		AddTimer("eternallove", 23.0f, "TimerEndCredits");
		FadeOut(0.0);
		SetMessage("Dialogue", "LoveDestiny", 21.0f);
	}
}
void TimerEndCredits(string &in asTimer)
{
	FadeGlobalSoundVolume(0.0f, 1.0f);
	if(asTimer == "eternallove") StartCredits("01_maze_eternal_love.ogg", false, "EndCredits", "EternalLove", 0);
	if(asTimer == "transformation") StartCredits("01_maze_transformation.ogg", false, "EndCredits", "Transformation", 1);
	if(asTimer == "freedom") StartCredits("03_outside_freedom.ogg", false, "EndCredits", "Freedom", 2);
}
void TimerJumpScare(string &in asTimer)
{
	PlayMusic("01_maze_jumpscare", false, 1.0f, 3.3f, 10, true);
	AddEnemyPatrolNode("gruntinsideroom", "PathNodeArea_464", 20, "");
	SetEntityActive("gruntinsideroom", true);
}
void TimerPrisonChapter(string &in asTimer)
{
	if(asTimer == "ch01")
	{
		FadeIn(5.5f);
		FadeGlobalSoundVolume(1.0f, 4.0f);
		PlayMusic("att_suitor", true, 0.9f, 6.0f, 10, false);
		RemoveAnyActiveMonster();
		ResetMonstersActivationAreas();
		SetLocalVarString("gsCurrActiveEnemy", "suitorevent03");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_532", 0.001f, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_533", 0.001f, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_534", 2, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_535", 0.001f, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_536", 2, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_537", 0.001f, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_540", 2, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_537", 0.001f, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_534", 0.001f, "");
		AddEnemyPatrolNode("suitorevent03", "PathNodeArea_533", 2, "");
		SetEntityActive("suitorevent03", true);
		SetEntityActive("StopRunningArea", true);
		SetMessage("Hints", "Run", 4.0f);
		SetPlayerActive(true);
	}
	else if(asTimer == "ch02")
	{
		AddTimer("ch03", 1.0f, "TimerPrisonChapter");
		PlaySoundAtEntity("WatchYourBack", "01_maze_WatchYourBack.snt", "angel_statue_107", 0.1f, false);
		RemoveTimer("chbadending01");
		RemoveTimer("chbadending02");
		RemoveTimer("chbadending03");
		RemoveTimer("chbadending04");
		RemoveTimer("chbadending05");
		RemoveTimer("chbadending06");
		RemoveTimer("chbadending07");
		RemoveTimer("chbadending08");
		SetEntityActive("angel_statue_107", true);
		SetMessage("Dialogue", "WatchYourBack", 3.15f);
	}
	else if(asTimer == "ch03")
	{
		AddTimer("ch04", 1.0f, "TimerPrisonChapter");
		PlayGuiSound("react_breath_slow", 0.4f);
		RemoveTimer("chbadending01");
		RemoveTimer("chbadending02");
		RemoveTimer("chbadending03");
		RemoveTimer("chbadending04");
		RemoveTimer("chbadending05");
		RemoveTimer("chbadending06");
		RemoveTimer("chbadending07");
		RemoveTimer("chbadending08");
		StartPlayerLookAt("angel_statue_107", 2.7f, 3.7f, "");
	}
	else if(asTimer == "ch04")
	{
		AddTimer("ch05", 2.0f, "TimerPrisonChapter");
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(10.0f, true);
		RemoveTimer("chbadending01");
		RemoveTimer("chbadending02");
		RemoveTimer("chbadending03");
		RemoveTimer("chbadending04");
		RemoveTimer("chbadending05");
		RemoveTimer("chbadending06");
		RemoveTimer("chbadending07");
		RemoveTimer("chbadending08");
	}
	else if(asTimer == "ch05")
	{
		AddTimer("ch06", 1.5f, "TimerPrisonChapter");
		FadeOut(2.0f);
		GivePlayerDamage(50.0f, "Slash", false, false);
		GiveSanityDamage(20.0f, false);
		PlayGuiSound("react_pant", 0.8f);
		PlayGuiSound("player_bodyfall", 0.8f);
		PlayMusic("26_event_agrippa_head", false, 1.0f, 3.0f, 10, false);
		RemoveTimer("chbadending01");
		RemoveTimer("chbadending02");
		RemoveTimer("chbadending03");
		RemoveTimer("chbadending04");
		RemoveTimer("chbadending05");
		RemoveTimer("chbadending06");
		RemoveTimer("chbadending07");
		RemoveTimer("chbadending08");
		StartPlayerLookAt("AreaTopPrisonLook", 2.7f, 3.7f, "");
	}
	else if(asTimer == "ch06")
	{
		AddTimer("brother", 10.6f, "TimerIsItOver");
		RemoveTimer("chbadending01");
		RemoveTimer("chbadending02");
		RemoveTimer("chbadending03");
		RemoveTimer("chbadending04");
		RemoveTimer("chbadending05");
		RemoveTimer("chbadending06");
		RemoveTimer("chbadending07");
		RemoveTimer("chbadending08");
		SetEntityActive("suitorevent04", false);
		SetMessage("Monologue", "ImSorryBrother", 10.0f);
		StopPlayerLookAt();
		if(GetLocalVarInt("SkyboxOrbColorVar") == 1)
		{
			SetSkyBoxColor(0.05f, 0.18f, 0.22f, 1.0f);
			return;
		}
		else if(GetLocalVarInt("MemoriesVar") < 10)
		{
			SetSkyBoxColor(0.012f, 0.05f, 0.1f, 1.0f);
			return;
		}
		else if(GetLocalVarInt("MemoriesVar") >= 10 && GetLocalVarInt("MemoriesVar") < 29)
		{
			SetSkyBoxColor(0.027f, 0.075f, 0.175f, 1.0f);
			return;
		}
		else
		{
			SetSkyBoxColor(0.325f, 0.438f, 0.676f, 1.0f);
			return;
		}
	}
	else if(asTimer == "chbadending01")
	{
		AddTimer("chbadending02", 3.5f, "TimerPrisonChapter");
		FadeIn(8.0f);
		FadeGlobalSoundVolume(1.0f, 4.0f);
		PlayGuiSound("react_sigh", 0.8f);
	}
	else if(asTimer == "chbadending02")
	{
		AddTimer("TimerPrisonerWhimpConst", 0.1f, "TimerPrisonerWhimpConst");
		AddTimer("chbadending03", 10.0f, "TimerPrisonChapter");
		PlayMusic("amb_extra01.ogg", false, 1.0f, 4.5f, 10, false);
		SetMessage("Dialogue", "YouAreTheRealMonster", 15.0f);
	}
	else if(asTimer == "chbadending03")
	{
		AddTimer("chbadending04", 5.0f, "TimerPrisonChapter");
		GiveSanityDamage(50.0f, true);
		PlayGuiSound("guardian_idle", 0.7f);
		PlaySoundAtEntity("slimebadendingloop1", "01_maze_slime_loop", "slimebadending_1", 1.0f, true);
		PlaySoundAtEntity("slimebadendingloop2", "01_maze_slime_loop", "slimebadending_2", 1.0f, true);
		PlaySoundAtEntity("slimebadendingloop3", "01_maze_slime_loop", "slimebadending_3", 1.0f, true);
		PlaySoundAtEntity("slimebadendingloop4", "01_maze_slime_loop", "slimebadending_4", 1.0f, true);
		SetPropActiveAndFade("slimebadending_1", true, 1.0f);
		SetPropActiveAndFade("slimebadending_2", true, 1.0f);
		SetPropActiveAndFade("slimebadending_3", true, 1.0f);
		SetPropActiveAndFade("slimebadending_4", true, 1.0f);
	}
	else if(asTimer == "chbadending04")
	{
		AddTimer("chbadending05", 13.0f, "TimerPrisonChapter");
		AddTimer("", 3.0f, "TimerReactScareSmall");
		AddTimer("", 5.5f, "TimerReactBreath");
		SetEnemySanityDecreaseActive("suitorinsideroom", false);
		SetMessage("Dialogue", "YouCanStayHere", 12.0f);
	}
	else if(asTimer == "chbadending05")
	{
		AddTimer("chbadending06", 7.0f, "TimerPrisonChapter");
		AddTimer("", 1.0f, "TimerReactScareSmall");
		AddTimer("", 2.5f, "TimerReactBreath");
		AddEnemyPatrolNode("suitorinsideroom", "PathNodeArea_533", 3, "");
		AddEnemyPatrolNode("suitorinsideroom", "PathNodeArea_539", 3, "");
		SetEntityActive("suitorinsideroom", true);
		SetMessage("Dialogue", "HeIsComingForYou", 6.0f);
		ShowPlayerCrossHairIcons(false);
		StartPlayerLookAt("suitorinsideroom", 1.0f, 2.0f, "");
	}
	else if(asTimer == "chbadending06")
	{
		AddTimer("chbadending07", 8.0f, "TimerPrisonChapter");
		FadeOut(7.0f);
		PlayGuiSound("guardian_idle", 0.2f);
		RemoveTimer("TimerPrisonerWhimpConst");
		SetMessage("Dialogue", "SweetDreamsMyLove", 7.0f);
		StartPlayerLookAt("suitorinsideroom", 1.0f, 1.0f, "");
	}
	else if(asTimer == "chbadending07")
	{
		AddTimer("chbadending08", 1.5f, "TimerPrisonChapter");
		AddTimer("", 0.5f, "TimerReactScareSmall");
		PlayGuiSound("attack_claw_hit03.ogg", 0.4f);
		PlaySoundAtEntity("bigscream", "01_maze_the_big_scream", "Player", 0.1f, false);
		GivePlayerDamage(50.0f, "", true, false);
	}
	else if(asTimer == "chbadending08")
	{
		AddTimer("transformation", 5.0f, "TimerEndCredits");
		PlayGuiSound("alois_death_01.ogg", 1.2f);
		SetEntityActive("suitorinsideroom", false);
		SetMessage("Dialogue", "AlrightBrother", 4.0f);
	}
}
void TimerTouchedPainting(string &in asTimer)
{
	if(asTimer == "Grunt") TeleportPlayer("PlayerStartGruntArea");
	else if(asTimer == "Brute") TeleportPlayer("PlayerStartBruteArea");
	else if(asTimer == "Love") TeleportPlayer("PlayerStartLoveArea");
	else if(asTimer == "Default") TeleportPlayer("PlayerStartDefaultArea");
	else if(asTimer == "DoorGrunt") TeleportPlayer("GrandpaPaintingStartArea");
	else if(asTimer == "DoorBrute") TeleportPlayer("SolitudePaintingStartArea");
	else if(asTimer == "DoorLove") TeleportPlayer("LovePaintingStartArea");
	else if(asTimer == "DoorDefault") TeleportPlayer("EmptyFrameStartArea");
	else if(asTimer == "StorageTrapStone") TeleportPlayer("PlayerStartArea_1");
}
void TimerPrepareToGoDown(string &in asTimer)
{
	if(asTimer == "Love")
	{
		FadeOut(0.5f);
		AddTimer("", 0.55f, "TimerFadeIn");
		AddTimer("Love", 0.5f, "TimerTeleportDown");
		SetLampLit("candlestick_tri_19", false, true);
		StopPlayerLookAt();
	}
	if(asTimer == "Grandpa")
	{
		FadeOut(0.5f);
		AddTimer("", 0.6f, "TimerFadeIn");
		AddTimer("Grandpa", 0.5f, "TimerTeleportDown");
	}
}
void TimerTeleportDown(string &in asTimer)
{
	if(asTimer == "Love")
	{
		TeleportPlayer("PlayerStartLoveEnd_2");
		PlayGuiSound("react_breath_no3d", 0.5f);
		SetLampLit("candlestick_tri_20", false, true);
		SetPlayerActive(true);
	}
	if(asTimer == "Grandpa")
	{
		TeleportPlayer("PlayerStartGrandpaEnd_2");
		PlayGuiSound("close_door", 0.9f);
		SetPlayerActive(true);
		SetMessage("Dialogue", "DownTheStairs", 10.0f);
		PlayMusic("01_maze_amb_stairs.ogg", true, 1.0f, 2.0f, 10, true);
	}
}
void TimerCheckAllMemories(string &in asTimer)
{
	if(GetLocalVarInt("MemoriesVar") <= 32)
	{
		if(GetLocalVarInt("MemoriesVar") == 10)
		{
			SetSkyBoxColor(0.027f, 0.075f, 0.175f, 1.0f);
			SetFogColor(0.027f, 0.075f, 0.175f, 1.0f);
			SetFogProperties(6.0f, 24.0f, 0.75f, true);
			SetLocalVarInt("SkyboxOrbColorVar", 0);
		}
		else if(GetLocalVarInt("MemoriesVar") == 20)	SetFogProperties(9.0f, 36.0f, 0.5f, true);
		else if(GetLocalVarInt("MemoriesVar") == 29)
		{
			SetSkyBoxColor(0.325f, 0.438f, 0.676f, 1.0f);
			SetFogColor(0.325f, 0.438f, 0.676f, 1.0f);
			SetFogProperties(12.0f, 48.0f, 1.0f, true);
			SetLocalVarInt("SkyboxOrbColorVar", 0);
			AddTimer("LitEverything", 0.1f, "TimerLitAllLamps");
			PlayGuiSound("scare_tingeling_rev", 1.0f);
			SetLightVisible("MazeBoxLight", true);
			SetLightVisible("MazeBoxLightStart", false);
			StartEffectFlash(0.1, 0.2, 0.3);
			StartScreenShake(0.1, 2.7, 0.05, 0.5);
		}
		//if(asTimer == "save") AutoSave();
	} 
	else if(GetLocalVarInt("MemoriesVar") == 33)
	{
		AddTimer("AllMemoriesTaken", 0.5f, "TimerAllMemoriesTaken");
		StopPlayerLookAt();
		SetPlayerActive(false);
		SetPlayerHealth(900.0f);
		SetPlayerSanity(900.0f);
		SetPlayerLookSpeedMul(1.0f);
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerJumpForceMul(1.0f);
	}
	
}
void TimerAllMemoriesTaken(string &in asTimer)
{
	AddTimer("mazeredux", 18.0f, "TimerLoadNewLevel");
	PlayMusic("29_amb_end_soft.ogg", false, 1.0f, 4.0f, 10, false);
	RemoveTimer("knock");
	StartEffectEmotionFlash("Messages", "AllMemoriesTaken", "03_in_a_bottle");
	StopMusic(0.0f, 0);
	for(int i=1;i<=9;i++)
	{
		SetEntityActive("grunt0"+i, false);
		SetEntityActive("gruntevent0"+i, false);
		SetEntityActive("gruntsurprise0"+i, false);
		SetEntityActive("brute0"+i, false);
		SetEntityActive("bruteevent0"+i, false);
		SetEntityActive("brutesurprise0"+i, false);
		SetEntityActive("suitor0"+i, false);
		SetEntityActive("suitorevent0"+i, false);
		SetEntityActive("suitorsurprise0"+i, false);
	}
}
void TimerLoadNewLevel(string &in asTimer)
{
	ChangeMap("02_maze_redux", "PlayerStartArea_1", "", "");
}
void TimerCheckMainMemories(string &in asTimer)
{
	if(GetLocalVarInt("MainMemoriesVar") == 9) SetEntityActive("StrangeArea", true);
	if(GetLocalVarInt("MainMemoriesVar") == 4) SetEntityActive("AggroArea", true);
	if(GetLocalVarInt("MainMemoriesVar") == 10)
	{
		SetEntityActive("memorylove", true);
		SetEntityActive("candle_floor_small_3", true);
		FadeLightTo("PointLight_14", 0.121,0.383,0.765,1, 4, 1);
	}
}
void TimerBloodDrop(string &in asTimer)
{
	if(asTimer == "bloodsound")
	{
		PlaySoundAtEntity("bloddrop", "general_blood_drop", "AreaBloodDrop", 0, false);
		AddTimer("blooddrop", 0.1f, "TimerBloodDrop");
	}
	else
	{ 
		CreateParticleSystemAtEntity("PSblood", "ps_blood_drop.ps", "AreaBloodDrop_1", false);
		AddTimer("bloodsound", 2.4f, "TimerBloodDrop");
	}
}
void TimerLitAllLamps(string &in asTimer)
{
	PlayGuiSound("insanity_imageflash01", 1);
	SetLampLit("candlestick_wall_282", true, true);
	SetLampLit("candlestick_wall_283", true, true);
	SetLampLit("candlestick_wall_284", true, true);
	SetLampLit("candlestick_wall_285", true, true);
	SetMessage("Hints", "AllLampsAreLit", 4.0f);	
	for(int k=1;k<=266;k++)
	{ 
		SetLampLit("candlestick_wall_"+k, true, true);
	}
}
void TimerLitGirlCandle(string &in asTimer)
{
	AddTimer("breath1", 4.5f, "TimerPlayerReactions");
	AddTimer(asTimer, 4.0f, "TimerFadeOffEntity");
	GiveSanityDamage(10.0f, true);
	PlaySoundAtEntity("litgirlcandlesound", "03_no", "LookPaintGirlPart2", 0.0f, false);
	SetLampLit("candlestick_tri_20", false, true);
}
void TimerBruteMusic(string &in asTimer)
{
	if(GetPlayerHealth() > 0) PlayMusic("search_brute.ogg", true, 1.0f, 4.0f, 10, true);        
}
void TimerBrotherPath(string &in asTimer)
{
	SetMessage("Hints", "BrotherPath", 8.5f);	
}

void EnemyAutoRemoved(string &in asEntity, string &in asType)
{
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
}
//START ENEMY STATE FUNCTIONS
void SetEnemyState(string asEnemy, string asType)
{
	int iLength = asType.length();
	if(StringContains(asType, "reset"))
	{
		if(iLength > 6)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 6, iLength - 6), true);
		
		ClearEnemyPatrolNodes(asEnemy);
		SetEntityActive(asEnemy, false);
		SetEntityActive(asEnemy, true);
	}
	else if(StringContains(asType, "poofsilent"))
	{
		if(iLength > 11)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 11, iLength - 11), true);
		
		FadeEnemyToSmoke(asEnemy, false);
	}
	else if(StringContains(asType, "poof"))
	{
		if(iLength > 5)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 5, iLength - 5), true);
		
		FadeEnemyToSmoke(asEnemy, true);
	}
	else if(StringContains(asType, "fakeon"))
	{
		SetEnemyIsHallucination(asEnemy, true);
		if(iLength > 7)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 7, iLength - 7), true);
	}
	else if(StringContains(asType, "fakeoff"))
	{
		SetEnemyIsHallucination(asEnemy, false);
		if(iLength > 8)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 8, iLength - 8), true);
	}
	else if(StringContains(asType, "friendon"))
	{
		SetEnemyDisableTriggers(asEnemy, true);
		if(iLength > 9)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 9, iLength - 9), true);
	}
	else if(StringContains(asType, "friendoff"))
	{
		SetEnemyDisableTriggers(asEnemy, false);
		if(iLength > 10)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 10, iLength - 10), true);
	}
	else if(StringContains(asType, "sanitydrainon"))
	{
		SetEnemySanityDecreaseActive(asEnemy, true);
		if(iLength > 14)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 14, iLength - 14), true);
	}
	else if(StringContains(asType, "sanitydrainoff"))
	{
		SetEnemySanityDecreaseActive(asEnemy, false);
		if(iLength > 15)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 15, iLength - 15), true);
	}
	else if(StringContains(asType, "on"))
	{
		if(iLength > 3)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 3, iLength - 3), true);
		
		ClearEnemyPatrolNodes(asEnemy);
		SetEntityActive(asEnemy, true);
	}
	else if(StringContains(asType, "off"))
	{
		if(iLength > 4)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 4, iLength - 4), true);
		
		SetEntityActive(asEnemy, false);
	}
	else if(StringContains(asType, "chase"))
	{
		if(iLength > 6)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 6, iLength - 6), true);
		
		ShowEnemyPlayerPosition(asEnemy);
	}
	else if(StringContains(asType, "alert"))
	{
		if(iLength > 6)
			TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 6, iLength - 6), true);
		
		AlertEnemyOfPlayerPresence(asEnemy);
	}
	else if(StringContains(asType, "teleport_"))
		TeleportEnemyToNode(asEnemy, gsPathNodePrefix + StringSub(asType, 9, iLength - 9), true);
}

int GetEnemyState(string asEnemy)
{
	if(StringContains(GetEnemyStateName(asEnemy), "Hunt") || StringContains(GetEnemyStateName(asEnemy), "Alert") || StringContains(GetEnemyStateName(asEnemy), "Attack") || StringContains(GetEnemyStateName(asEnemy), "Hurt"))
		return 4;
	else if(GetEnemyStateName(asEnemy) == "BreakDoor")
		return 3;
	else if(GetEnemyStateName(asEnemy) == "Search" || GetEnemyStateName(asEnemy) == "Investigate")
		return 2;
	else if(GetEnemyStateName(asEnemy) == "Idle")
		return 0;
	else
		return 1;
}
//END ENEMY STATE FUNCTIONS
void TimerEnemyInsideFogRoom(string &in asTimer)
{
	AddTimer("breathl", 5.0f, "TimerPlayerReactions");	
	if(GetLocalVarInt("MemoriesVar") <= 16)
	{	
		AddTimer("scare", 1.0f, "TimerPlayerReactions");
		AddTimer("breath", 3.0f, "TimerPlayerReactions");	
	}
	
	string sStartPathNode = "1";
	if(asTimer == "grunt01")
	{
		sStartPathNode = "1";
	}
	else if(asTimer == "grunt02")
	{
		sStartPathNode = "25";
	}
	else if(asTimer == "grunt03")
	{
		sStartPathNode = "51";
	}
	else if(asTimer == "grunt04")
	{
		sStartPathNode = "78";
	}
	else if(asTimer == "grunt05")
	{
		sStartPathNode = "479";
	}
	else if(asTimer == "grunt06")
	{
		sStartPathNode = "95";
	}
	else if(asTimer == "brute01")
	{		
		sStartPathNode = "136";	
	}
	else if(asTimer == "brute02")
	{		
		sStartPathNode = "158";
	}
	else if(asTimer == "brute03")
	{
		sStartPathNode = "183";
	}
	else if(asTimer == "brute04")
	{
		sStartPathNode = "200";
	}
	else if(asTimer == "brute05")
	{
		sStartPathNode = "493";
	}
	else if(asTimer == "brute06")
	{
		sStartPathNode = "231";
	}
	else if(asTimer == "suitor01")
	{
		sStartPathNode = "515";
	}
	else if(asTimer == "suitor02")
	{
		sStartPathNode = "265";
	}
	else if(asTimer == "suitor03")
	{
		sStartPathNode = "288";
	}
	else if(asTimer == "suitor04")
	{
		sStartPathNode = "314";
	}
	else if(asTimer == "suitor05")
	{
		sStartPathNode = "342";
	}
	else if(asTimer == "suitor06")
	{
		sStartPathNode = "372";
	}
	SetEnemyState(asTimer, "reset_" + sStartPathNode);
	
	if(asTimer == "grunt01")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_2", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_3", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_4", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_5", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_6", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_7", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_8", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_7", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_6", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_5", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_4", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_9", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_10", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_11", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_12", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_13", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_14", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_15", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_16", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_15", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_14", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_13", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_12", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_11", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_17", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_18", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_19", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_20", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_21", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_22", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_23", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_24", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_23", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_22", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_21", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_20", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_19", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_18", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_10", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_9", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_3", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_2", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_1", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "grunt02")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_26", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_27", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_28", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_29", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_30", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_31", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_30", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_29", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_32", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_33", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_34", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_35", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_36", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_37", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_38", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_39", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_40", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_41", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_42", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_43", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_44", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_45", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_46", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_47", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_48", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_47", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_46", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_45", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_44", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_43", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_42", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_41", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_39", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_49", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_50", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_49", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_38", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_37", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_36", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_35", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_34", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_33", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_21", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_32", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_28", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_27", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_26", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_25", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "grunt03")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_52", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_53", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_54", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_55", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_56", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_57", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_56", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_55", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_58", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_59", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_60", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_61", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_62", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_63", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_62", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_64", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_65", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_66", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_67", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_68", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_69", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_70", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_71", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_72", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_73", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_72", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_71", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_70", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_69", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_68", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_67", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_66", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_74", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_75", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_76", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_77", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_54", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_53", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_52", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_51", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "grunt04")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_79", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_80", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_81", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_82", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_83", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_84", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_85", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_57", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_85", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_84", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_83", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_86", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_87", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_88", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_89", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_90", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_89", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_88", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_87", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_86", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_83", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_91", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_92", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_93", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_94", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_93", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_92", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_91", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_83", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_82", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_81", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_530", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_529", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_526", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_527", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_528", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_530", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_81", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_80", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_79", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_78", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "grunt05")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_480", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_481", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_482", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_483", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_484", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_485", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_486", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_485", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_484", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_487", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_488", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_381", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_382", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_383", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_384", 1.0f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_385", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_386", 1.0f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_385", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_384", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_396", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_395", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_394", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_387", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_384", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_383", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_382", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_381", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_488", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_489", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_490", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_489", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_491", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_492", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_491", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_487", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_483", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_482", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_481", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_480", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_479", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "grunt06")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_96", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_98", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_99", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_100", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_101", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_102", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_103", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_104", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_6", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_104", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_103", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_105", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_106", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_107", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_108", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_109", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_110", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_111", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_112", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_113", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_114", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_115", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_116", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_117", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_100", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_99", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_98", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_558", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_559", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_558", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_98", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_96", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_95", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "brute01")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_137", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_138", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_139", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_140", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_141", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_142", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_143", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_142", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_144", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_145", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_144", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_146", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_147", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_148", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_149", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_150", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_151", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_152", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_153", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_152", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_154", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_148", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_147", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_146", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_142", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_155", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_156", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_157", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_156", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_155", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_142", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_141", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_140", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_139", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_138", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_137", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_136", RandFloat(1.0f, 2.5f), "");	
	}
	else if(asTimer == "brute02")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_159", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_160", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_161", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_162", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_163", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_164", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_165", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_166", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_165", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_167", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_168", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_169", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_170", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_171", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_172", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_173", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_172", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_171", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_170", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_174", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_175", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_176", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_177", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_178", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_179", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_180", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_181", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_182", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_165", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_305", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_306", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_307", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_310", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_304", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_305", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_165", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_182", 0.001, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_162", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_17", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_162", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_161", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_160", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_159", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_158", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "brute03")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_184", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_185", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_186", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_187", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_188", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_189", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_190", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_191", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_190", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_189", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_188", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_187", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_348", 1.0f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_186", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_192", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_193", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_194", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_195", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_253", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_367", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_366", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_778", 1.0f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_366", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_367", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_253", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_194", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_196", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_197", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_198", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_199", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_192", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_185", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_184", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_183", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "brute04")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_201", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_202", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_203", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_204", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_205", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_206", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_207", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_208", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_207", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_209", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_206", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_210", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_211", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_212", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_213", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_214", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_215", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_216", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_215", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_211", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_210", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_206", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_205", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_204", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_203", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_202", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_217", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_218", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_219", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_220", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_221", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_222", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_223", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_224", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_223", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_222", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_225", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_222", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_226", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_227", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_228", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_229", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_230", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_222", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_221", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_220", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_219", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_218", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_217", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_202", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_201", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_200", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "brute05")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_494", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_495", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_496", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_497", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_498", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_499", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_500", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_501", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_502", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_503", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_504", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_505", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_506", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_507", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_508", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_88", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_507", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_506", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_505", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_504", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_502", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_509", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_510", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_511", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_512", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_513", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_514", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_513", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_512", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_511", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_510", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_509", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_501", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_500", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_499", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_498", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_497", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_496", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_495", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_494", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_493", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "brute06")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_232", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_233", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_234", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_235", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_236", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_237", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_238", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_239", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_240", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_241", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_242", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_241", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_240", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_239", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_238", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_243", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_244", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_245", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_246", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_247", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_248", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_249", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_250", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_249", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_248", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_247", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_246", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_243", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_238", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_237", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_236", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_234", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_233", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_251", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_252", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_253", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_254", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_255", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_254", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_252", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_251", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_232", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_231", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "suitor01")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_516", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_517", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_518", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_519", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_520", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_519", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_518", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_517", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_515", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_516", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_521", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_522", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_523", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_524", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_525", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_524", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_526", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_527", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_528", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_529", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_530", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_81", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_530", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_528", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_527", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_524", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_523", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_522", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_521", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_516", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_515", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "suitor02")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_266", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_267", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_268", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_269", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_270", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_271", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_272", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_273", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_274", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_275", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_274", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_276", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_277", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_276", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_278", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_279", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_280", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_281", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_282", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_281", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_280", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_279", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_278", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_283", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_284", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_285", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_286", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_285", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_284", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_283", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_287", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_270", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_269", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_268", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_267", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_266", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_265", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "suitor03")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_289", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_290", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_291", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_290", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_292", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_293", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_294", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_295", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_296", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_297", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_298", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_299", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_300", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_301", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_302", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_303", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_304", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_305", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_306", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_307", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_308", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_309", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_50", 2.0f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_309", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_308", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_310", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_303", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_302", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_301", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_300", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_172", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_171", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_170", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_169", 2.0f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_170", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_171", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_172", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_300", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_301", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_302", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_311", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_312", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_313", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_290", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_289", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_288", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "suitor04")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_315", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_316", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_317", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_318", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_317", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_319", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_320", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_321", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_322", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_323", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_324", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_325", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_326", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_327", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_328", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_329", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_330", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_331", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_332", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_333", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_334", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_335", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_255", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_335", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_334", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_333", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_332", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_331", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_330", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_329", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_328", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_327", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_326", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_336", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_337", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_338", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_339", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_340", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_321", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_320", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_341", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_585", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_584", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_583", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_245", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_246", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_247", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_246", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_245", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_583", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_584", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_585", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_341", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_319", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_317", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_316", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_315", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_314", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "suitor05")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_343", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_344", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_345", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_346", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_347", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_348", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_349", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_350", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_349", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_348", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_347", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_346", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_345", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_344", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_351", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_352", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_353", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_354", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_355", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_356", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_357", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_358", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_359", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_360", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_361", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_362", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_363", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_364", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_365", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_366", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_367", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_366", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_365", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_364", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_363", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_368", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_369", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_370", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_352", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_351", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_371", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_199", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_371", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_344", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_343", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_342", RandFloat(1.0f, 2.5f), "");
	}
	else if(asTimer == "suitor06")
	{
		AddEnemyPatrolNode(asTimer, "PathNodeArea_373", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_374", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_375", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_376", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_377", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_378", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_377", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_376", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_375", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_374", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_379", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_380", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_381", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_382", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_383", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_384", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_385", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_386", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_385", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_384", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_387", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_388", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_389", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_390", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_391", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_392", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_393", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_392", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_391", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_390", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_389", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_388", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_394", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_395", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_396", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_384", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_383", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_382", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_381", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_397", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_379", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_373", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_398", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_373", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_372", 2, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_373", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_399", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_400", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_401", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_402", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_403", RandFloat(1.0f, 2.5f), "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_402", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_401", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_400", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_399", 0.001f, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_373", 1, "");
		AddEnemyPatrolNode(asTimer, "PathNodeArea_372", RandFloat(1.0f, 2.5f), "");
	}
}
void TimerLitTorch14(string &in asTimer)
{
	SetLampLit("torch_static_green_14", true, true);
	SetLightVisible("PointLight_42", true);
}
void TimerTeleportToEndArea(string &in asTimer)
{
	SetFogActive(false);
	SetPlayerHealth(90.0f);
	SetPlayerLookSpeedMul(0.9f);
	SetPlayerMoveSpeedMul(0.9f);
	SetPlayerRunSpeedMul(0.9f);
	StopMusic(4.1f, 10);
	StopMusic(4.11f, 1);
	StopMusic(4.12f, 0);
	FadeIn(3.0f);
	if(asTimer == "empty")
	{
		CheckPoint ("CheckPointEmptyEnd", "PlayerStartEmptyEnd_1", "Respawn", "DeathHints", "DoNotFall");
		PlayGuiSound("close_gate_low.snt", 1.0f);
		TeleportPlayer("PlayerStartEmptyEnd_1");
	}
	if(asTimer == "grandpa")
	{
		CheckPoint ("CheckPointGrandpaEnd", "PlayerStartGrandpaEnd_2", "Respawn", "DeathHints", "BeCareful");
		PlayGuiSound("close_gate_low.snt", 1.0f);
		TeleportPlayer("PlayerStartGrandpaEnd_1");
	}
	if(asTimer == "love")
	{
		CheckPoint ("CheckPointLoveEnd", "PlayerStartLoveEnd_2", "Respawn", "DeathHints", "BeCareful");
		PlayGuiSound("close_gate_low.snt", 1.0f);
		SetEnemySanityDecreaseActive("gruntinsideroom", false);
		SetLightVisible("MazeBoxLight", false);
		SetLightVisible("MazeBoxLightStart", false);
		SetSkyBoxColor(0.0f, 0.0f, 0.0f, 1.0f);
		SetFogColor(0.0f, 0.0f, 0.0f, 1.0f);
		TeleportPlayer("PlayerStartLoveEnd_1");
	}
	if(asTimer == "alone")
	{
		AddTimer("", 10.0f, "TimerAmbCrying");
		CheckPoint ("CheckPointAloneEnd", "PlayerStartAloneEnd_1", "Respawn", "DeathHints", "BeCareful");
		PlayGuiSound("close_gate_low.snt", 1.0f);
		SetLocalVarInt("DeathBySolitudeVar", 1);
		TeleportPlayer("PlayerStartAloneEnd_1");
	}
	if(asTimer == "orb")
	{
		CheckPoint ("CheckPointOrbEnd", "PlayerStartOrbEnd_1", "Respawn", "DeathHints", "BeCareful");
		PlayGuiSound("door_level_wood_close.snt", 1.0f);
		SetPlayerActive(true);
		TeleportPlayer("PlayerStartOrbEnd_1");
	}
	if(asTimer == "brother")
	{
		CheckPoint ("CheckPointBroEnd", "PlayerStartBroEnd_1", "Respawn", "DeathHints", "BeCareful");
		PlayGuiSound("door_level_wood_close.snt", 1.0f);
		SetPlayerActive(true);
		TeleportPlayer("PlayerStartBroEnd_1");
		SetSkyBoxColor(0.0f, 0.0f, 0.0f, 1.0f);
	}
}
void TimerAmbCrying(string &in asTimer)
{
	PlayMusic("01_maze_amb_crying", true, 1.0f, 4.0f, 10, true);
}
void TimerFadeIn(string &in asTimer)
{
	FadeIn(1.5f);
}
void TimerFadeOut(string &in asTimer)
{
	FadeOut(0.0f);
}
void PlayAlternativeMusic(string &in asTimer)
{
	if(GetLocalVarInt("MemoriesVar") >=0 && GetLocalVarInt("MemoriesVar") <= 8) PlayMusic("01_maze.ogg", true, 1.0f, 4.0f, 0, false);
	else if(GetLocalVarInt("MemoriesVar") >=9 && GetLocalVarInt("MemoriesVar") <= 14) PlayMusic("01_maze_alternative01.ogg", true, 0.9f, 4.0f, 0, false);
	else if(GetLocalVarInt("MemoriesVar") >=15 && GetLocalVarInt("MemoriesVar") <= 19) PlayMusic("01_maze_alternative02", true, 0.9f, 4.0f, 0, false);
	else if(GetLocalVarInt("MemoriesVar") >=20 && GetLocalVarInt("MemoriesVar") <= 24) PlayMusic("01_maze_alternative03", true, 0.9f, 4.0f, 0, false);
	else if(GetLocalVarInt("MemoriesVar") >=25 && GetLocalVarInt("MemoriesVar") <= 28) PlayMusic("01_maze_alternative04", true, 0.9f, 4.0f, 0, false);
	else if(GetLocalVarInt("MemoriesVar") >=29) PlayMusic("01_maze_alternative05", true, 0.5f, 4.0f, 0, false);		
}
void TimerStopMusic(string &in asTimer)
{
	StopMusic(9.9f, 1);
	StopMusic(9.9f, 0);
	StopMusic(9.9f, 10);
}
void TimerLittleDoorHint(string &in asTimer)
{
	FadeLightTo("PointLight_43", 0, 0, 0, 0, 0, 3.0f);
	GiveSanityBoostSmall();
	PlaySoundAtEntity("openeddoor", "01_door", "castle_silent_1", 0.5f, false);
	SetMessage("Hints", "TinyDoor", 7.0f);
	SetPropActiveAndFade("castle_silent_1", false, 1.0f);
}
void TimerRemovePedestal(string &in asTimer)
{
	PlaySoundAtEntity("orbforge", "22_orb_forge.snt", "Player", 0.5f, false);
	if(asTimer == "pedestal1") 
	{	
		SetPropActiveAndFade("orb_pedestal_1", false, 1.0f);
		SetPropActiveAndFade("orbpart_1", false, 1.0f);
	}
	if(asTimer == "pedestal2")	
	{	
		SetPropActiveAndFade("orb_pedestal_2", false, 1.0f);
		SetPropActiveAndFade("orbpart_2", false, 1.0f);
	}
	if(asTimer == "pedestal3")	
	{	
		SetPropActiveAndFade("orb_pedestal_3", false, 1.0f);
		SetPropActiveAndFade("orbpart_3", false, 1.0f);
	}
	if(asTimer == "pedestal4")	
	{	
		SetPropActiveAndFade("orb_pedestal_4", false, 1.0f);
		SetPropActiveAndFade("orbpart_4", false, 1.0f);
	}
	if(asTimer == "pedestal5")	
	{	
		SetPropActiveAndFade("orb_pedestal_5", false, 1.0f);
		SetPropActiveAndFade("orbpart_5", false, 1.0f);
	}
	if(asTimer == "pedestal6")	
	{	
		SetPropActiveAndFade("orb_pedestal_6", false, 1.0f);
		SetPropActiveAndFade("orbpart_6", false, 1.0f);
	}
	if(asTimer == "pedestal7")	
	{	
		SetPropActiveAndFade("orb_pedestal_7", false, 1.0f);
		SetPropActiveAndFade("orbpart_7", false, 1.0f);
	}
	if(asTimer == "pedestal8")	
	{	
		SetPropActiveAndFade("orb_pedestal_8", false, 1.0f);
		SetPropActiveAndFade("orbpart_8", false, 1.0f);
	}
	if(asTimer == "pedestal9")	
	{	
		SetPropActiveAndFade("orb_pedestal_9", false, 1.0f);
		SetPropActiveAndFade("orbpart_9", false, 1.0f);
	}
	if(asTimer == "pedestal10")	
	{	
		SetPropActiveAndFade("orb_pedestal_10", false, 1.0f);
		SetPropActiveAndFade("orbpart_10", false, 1.0f);
	}
	if(asTimer == "pedestal11")	
	{	
		SetPropActiveAndFade("orb_pedestal_11", false, 1.0f);
		SetPropActiveAndFade("orbpart_11", false, 1.0f);
	}
	if(asTimer == "pedestal12")	
	{	
		SetPropActiveAndFade("orb_pedestal_12", false, 1.0f);
		SetPropActiveAndFade("orbpart_12", false, 1.0f);
	}
	if(asTimer == "pedestal13")	
	{	
		SetPropActiveAndFade("orb_pedestal_13", false, 1.0f);
		SetPropActiveAndFade("orbpart_13", false, 1.0f);
	}
	if(asTimer == "pedestal14")	
	{	
		SetPropActiveAndFade("orb_pedestal_14", false, 1.0f);
		SetPropActiveAndFade("orbpart_14", false, 1.0f);
	}
	if(asTimer == "pedestal15")	
	{	
		SetPropActiveAndFade("orb_pedestal_15", false, 1.0f);
		SetPropActiveAndFade("orbpart_15", false, 1.0f);
	}
	if(asTimer == "pedestal16")	
	{	
		SetPropActiveAndFade("orb_pedestal_16", false, 1.0f);
		SetPropActiveAndFade("orbpart_16", false, 1.0f);
	}
}
void TimerAggroObjects(string &in asTimer)
{
	if(asTimer == "one")
	{
		SetEntityActive("brick02_1", true);
		SetEntityActive("brick02_2", true);
		SetEntityActive("brick02_3", true);
		SetEntityActive("brick02_4", true);
		SetEntityActive("brick02_5", true);
		SetEntityActive("brick02_6", true);
		SetEntityActive("brick02_7", true);
		SetEntityActive("brick02_8", true);
		SetEntityActive("brick02_9", true);
	}
	if(asTimer == "two")
	{
		SetEntityActive("chemical_jar02_5", true);
		SetEntityActive("chemical_jar03_3", true);
		SetEntityActive("chemical_jar03_2", true);
		SetEntityActive("chemical_jar03_1", true);
		SetEntityActive("chemical_jar04_6", true);
		SetEntityActive("chemical_jar04_5", true);
		SetEntityActive("chemical_jar04_4", true);
		SetEntityActive("chemical_jar04_3", true);
		SetEntityActive("chemical_jar04_2", true);
		SetEntityActive("chemical_jar04_1", true);
		SetEntityActive("chemical_jar02_4", true);
		SetEntityActive("chemical_jar02_3", true);
		SetEntityActive("chemical_jar02_2", true);
		SetEntityActive("chemical_jar02_1", true);	
	}
	if(asTimer == "three")
	{
		SetEntityActive("wine02_4", true);
		SetEntityActive("wine02_3", true);
		SetEntityActive("wine02_2", true);
		SetEntityActive("wine02_1", true);
		SetEntityActive("wine01_5", true);
		SetEntityActive("wine01_4", true);
		SetEntityActive("wine01_3", true);
		SetEntityActive("wine01_2", true);
		SetEntityActive("wine01_1", true);
	}
	if(asTimer == "four")
	{

	}
	if(asTimer == "five")
	{
		SetEntityActive("vase02_8", true);
		SetEntityActive("vase02_7", true);
		SetEntityActive("vase02_6", true);
		SetEntityActive("vase02_5", true);
		SetEntityActive("vase02_4", true);
		SetEntityActive("vase02_3", true);
		SetEntityActive("vase02_2", true);
		SetEntityActive("vase02_1", true);
		SetEntityActive("vase01_6", true);
		SetEntityActive("vase01_5", true);
		SetEntityActive("vase01_4", true);
		SetEntityActive("vase01_3", true);
		SetEntityActive("vase01_2", true);
		SetEntityActive("vase01_1", true);
	}
	if(asTimer == "six")
	{
		SetEntityActive("wood_box_small01_4", true);
		SetEntityActive("wood_box_small01_3", true);
		SetEntityActive("wood_box_small01_2", true);
		SetEntityActive("wood_box_small01_1", true);
		SetEntityActive("wood_box03_1", true);
		SetEntityActive("wood_box03_2", true);
		SetEntityActive("wood_box01_breakable_4", true);
	}
}
void TimerBackToWhite(string &in asTimer)
{
	FadeSepiaColorTo(0.0f, 0.99f);
}
void TimerActivateBrute9(string &in asTimer)
{
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	AddEnemyPatrolNode("brute08", "PathNodeArea_258", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_259", 0.001f, "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_260", 0.001f, "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_261", 0.001f, "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_262", 0.001f, "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_263", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_264", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_262", 0.001f, "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_261", 0.001f, "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_260", 0.001f, "");
	AddEnemyPatrolNode("brute08", "PathNodeArea_259", 1, "");
	SetEntityActive("brute08", true);
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
	{
		SetMessage("Hints", "Stealth", 4.5f);
		SetLocalVarString("gsCurrActiveEnemy", "brute08");
	}
}
void TimerAmbPiano(string &in asTimer)
{
	PlayMusic("01_maze_piano.ogg", false, 1.0f, 4.0f, 10, true);
	FadeSepiaColorTo(0.8f, 0.99f);
}

void TimerTrapStorage(string &in asTimer)
{
	AddEnemyPatrolNode("storagegrunt", "PathNodeArea_477", 2, "");
	AddEnemyPatrolNode("storagegrunt", "PathNodeArea_478", 2, "");
	AddEnemyPatrolNode("storagebrute", "PathNodeArea_477", 2, "");
	AddEnemyPatrolNode("storagebrute", "PathNodeArea_478", 2, "");
	AddEnemyPatrolNode("storagesuitor", "PathNodeArea_477", 2, "");
	AddEnemyPatrolNode("storagesuitor", "PathNodeArea_478", 2, "");
	SetEntityActive("storagegrunt", true);
	SetEntityActive("storagebrute", true);
	SetEntityActive("storagesuitor", true);
	PlayMusic("22_event_trapped.ogg", true, 0.7f, 4.0f, 10, true);
	StopMusic(10.0f, 0);
	if(GetGlobalVarInt("GrandpaFreeVar") == 1)
	{
		SetEnemyIsHallucination("storagegrunt", true);
		SetEnemyIsHallucination("storagebrute", true);
		SetEnemyIsHallucination("storagesuitor", true);
		SetEntityActive("AreaStorageStone", true);
		SetLightVisible("LightStorageStone", true);
		PlaySoundAtEntity("SoundStorageStone", "03_orb_loop.snt", "AreaStorageStone", 0.7f, true);
	}
	else
		SetMessage("Hints", "NoEscape", 3.5f);
}

void TimerDeathMusic(string &in asTimer)
{
	if(asTimer == "death01") PlayMusic("01_maze_respawn01.ogg", false, 1.0f, 4.0f, 10, true);
	if(asTimer == "death02") PlayMusic("01_maze_respawn02.ogg", false, 1.0f, 4.0f, 10, true);
}
void TimerEventScare(string &in asTimer)
{
	PlayMusic("20_event_darkness.ogg", false, 1.0f, 4.0f, 10, true);
}
void TimerGoAwayGrunt01(string &in asTimer)
{
	FadeEnemyToSmoke("gruntevent01", false);
	PlaySoundAtEntity("pant","react_pant.snt", "Player", 0.6f, false);
	GiveSanityDamage(10.0f, true);
	SetLightVisible("GruntWindowLight", false);
}
void TimerGoAwayGrunt02(string &in asTimer)
{
	FadeEnemyToSmoke("gruntevent02", false);
	FadeEnemyToSmoke("gruntevent03", true);
}
void TimerGoAwayGrunt03(string &in asTimer)
{
	FadeEnemyToSmoke("gruntevent05", true);
}
void TimerActivateGrunt08(string &in asTimer)
{
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	AddEnemyPatrolNode("grunt08", "PathNodeArea_119", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_120", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_121", 1, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_120", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_124", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_125", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_126", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_127", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_128", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_129", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_130", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_131", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_132", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_133", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_134", 1, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_133", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_135", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_132", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_131", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_130", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_129", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_128", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_127", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_125", 0.001f, "");
	AddEnemyPatrolNode("grunt08", "PathNodeArea_124", 1, "");
	SetEntityActive("grunt08", true);
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
	{
		SetMessage("Hints", "Stealth", 4.5f);
		SetLocalVarString("gsCurrActiveEnemy", "grunt08");
	}
}
void TimerHuntBruteSurprise02(string &in asTimer)
{
	if(GetGlobalVarInt("GrandpaFreeVar") == 0) AddTimer("", 0.01f, "TimerBruteMusic");
	ShowEnemyPlayerPosition("brutesurprise02");
}
void TimerHuntBruteSurprise03(string &in asTimer)
{
	if(GetGlobalVarInt("GrandpaFreeVar") == 0) AddTimer("", 0.01f, "TimerBruteMusic");
	ShowEnemyPlayerPosition("brutesurprise03");
}
void TimerKnock(string & asTimer)
{
	PlaySoundAtEntity("tinyknocking", "01_maze_door_knocking", "castle_silent_1", 0.2f, false);
	AddTimer(asTimer, RandFloat(7.1f, 10.9f), "TimerKnock");
}
void TimerLoveInsanity(string &in asTimer)
{
	PlaySoundAtEntity("scare","react_scare.snt", "Player", 1.0f, false);
	CreateParticleSystemAtEntity("petals1", "ps_rose_petals.ps", "AreaPedals_1", false);
	CreateParticleSystemAtEntity("petals2", "ps_rose_petals.ps", "AreaPedals_2", false);
	CreateParticleSystemAtEntity("petals3", "ps_rose_petals.ps", "AreaPedals_3", false);
	CreateParticleSystemAtEntity("petals4", "ps_rose_petals.ps", "AreaPedals_4", false);
	CreateParticleSystemAtEntity("petals5", "ps_rose_petals.ps", "AreaPedals_5", false);
	CreateParticleSystemAtEntity("petals6", "ps_rose_petals.ps", "AreaPedals_6", false);
	CreateParticleSystemAtEntity("petals7", "ps_rose_petals.ps", "AreaPedals_7", false);
	CreateParticleSystemAtEntity("petals8", "ps_rose_petals.ps", "AreaPedals_8", false);
	CreateParticleSystemAtEntity("petals9", "ps_rose_petals.ps", "AreaPedals_9", false);
	FadeSepiaColorTo(0.8f, 9.99f);
	GiveSanityDamage(5.0f, true);
	SetMessage("Dialogue", "AngryWoman", 30.0f);
}
void TimerReactScare(string &in asTimer)
{
	PlayGuiSound("react_scare", 0.7f);
	GiveSanityDamage(8.0f, true);
}
void TimerReactScareSmall(string &in asTimer)
{
	PlayGuiSound("react_scare", 0.6f);
	GiveSanityDamage(2.0f, false);
}
void TimerReactBreath(string &in asTimer)
{
	PlayGuiSound("react_breath", 0.7f);
	GiveSanityDamage(1.0f, false);
}
void TimerReactPant(string &in asTimer)
{
	PlayGuiSound("react_pant", 0.8f);
	GiveSanityDamage(10.0f, true);
}

void TimerFadeOffEntity(string asTimer)
{
	SetPropActiveAndFade(asTimer, false, 2.0f);
}

void TimerReadyToRun(string &in asTimer)
{
	PlaySoundAtEntity("whisper", "flashback_flash", "Player", 0, false);
	PlaySoundAtEntity("close_gate", "close_gate", "Player", 0, false);
	PlayMusic("26_event_brute", false, 1.0f, 4.0f, 10, true);
	SetEntityActive("torch_static_green_3", true);
	SetEntityActive("empty_frame_2", true);
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	SetEnemyDisableTriggers("brutesurprise01", true);
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_450", 1.199, "");
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_451", 0.001f, "");
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_452", 0.001f, "");
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_453", 2, "");
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_455", 0.001f, "");
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_456", 0.001f, "");
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_457", 2, "");
	AddEnemyPatrolNode("brutesurprise01", "PathNodeArea_458", 2, "");
	SetEntityActive("brutesurprise01", true);
	StartPlayerLookAt("brutesurprise01", 3.9f, 3.9f, "");
	AddTimer("", 1.25f, "TimerReactScareSmall");
	AddTimer("", 2.5f, "TimerReactBreath");
	AddTimer("brutesurprise01", 2.5f, "TimerStopLook");
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
	{
		AddTimer("", 12.5f, "TimerBruteMusic");
		SetMessage("Hints", "GoAway", 3.5f);
		SetLocalVarString("gsCurrActiveEnemy", "brutesurprise01");
	}
	else
		SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	
	AddTimer("", 50.0f, "TimerStrangerThings");
	SetEntityActive("human_bone_6", true);
	SetEntityActive("human_bone_8", true);
	SetEntityActive("human_bone_9", true);
	SetEntityActive("human_bone_7", true);
	SetEntityActive("human_bone_5", true);
	SetEntityActive("human_skull_7", true);
	SetEntityActive("rat_corpse_pile_4", true);
	SetEntityActive("rat_corpse_pile_3", true);
	SetEntityActive("rat_corpse_pile_2", true);
	SetEntityActive("rat_corpse_pile_5", true);
	SetEntityActive("rat_corpse_pile_6", true);
	SetEntityActive("rat_corpse_pile_7", true);
	SetEntityActive("rat_corpse_pile_8", true);
	SetEntityActive("rat_corpse_pile_9", true);
	SetEntityActive("rat_corpse_pile_10", true);
	SetEntityActive("slime_anim_wall_5", true);
	SetEntityActive("slime_anim_wall_4", true);
	PlaySoundAtEntity("slime", "01_maze_slime_loop", "slime_anim_wall_4", 2.0f, true);
	PlaySoundAtEntity("slime", "01_maze_slime_loop", "slime_anim_wall_5", 2.0f, true);
	SetEntityActive("stuffed_dog_head_2", true);
}
void TimerScareInsanity(string &in asTimer)
{
	SetPlayerMoveSpeedMul(0.90f);
	SetPlayerRunSpeedMul(0.90f);
	PlaySoundAtEntity("pant","react_pant.snt", "Player", 1.0f, false);
	GiveSanityDamage(5.0f, true);
}
void TimerStopLook(string &in asTimer)
{
	SetPlayerMoveSpeedMul(1.005f);
	SetPlayerRunSpeedMul(1.0f);
	StopPlayerLookAt();
	if(asTimer == "brutesurprise01")	SetEnemyDisableTriggers(asTimer, false);
}
void TimerActivateSuitor08(string &in asTimer)
{
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	AddEnemyPatrolNode("suitor08", "PathNodeArea_406", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_407", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_408", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_409", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_410", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_411", 2, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_412", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_409", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_413", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_414", 2, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_413", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_408", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_407", 0.001f, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_406", 1, "");
	AddEnemyPatrolNode("suitor08", "PathNodeArea_415", 1, "");
	SetEntityActive("suitor08", true);
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
	{
		SetMessage("Hints", "Stealth", 4.5f);
		SetLocalVarString("gsCurrActiveEnemy", "suitor08");
	}
}
void TimerActivateSuitor09(string &in asTimer)
{
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	AddEnemyPatrolNode("suitor09", "PathNodeArea_416", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_417", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_418", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_419", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_420", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_421", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_422", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_423", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_424", 2, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_423", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_425", 1, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_426", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_427", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_428", 2, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_426", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_425", 1, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_429", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_430", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_431", 2, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_430", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_429", RandFloat(1.0f, 2.5f), "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_432", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_433", 0.001f, "");
	AddEnemyPatrolNode("suitor09", "PathNodeArea_434", 1, "");
	SetEntityActive("suitor09", true);
	if(GetGlobalVarInt("GrandpaFreeVar") == 0)
	{
		SetMessage("Hints", "Stealth", 4.5f);
		SetLocalVarString("gsCurrActiveEnemy", "suitor09");
	}
}
void TimerActivateVase(string &in asTimer)
{
	if(asTimer == "one") SetEntityActive("vase02_ghost_1", true);
	if(asTimer == "two") SetEntityActive("vase02_ghost_2", true);
	if(asTimer == "three") SetEntityActive("vase02_ghost_3", true);
	if(asTimer == "four") SetEntityActive("vase02_ghost_4", true);
	if(asTimer == "five") SetEntityActive("vase02_ghost_5", true);
}
void TimerWhispers(string &in asTimer)
{
	PlaySoundAtEntity("whisper", "insanity_whisper", "Player", 0, false);
}
void Timetodie(string &in asTimer)
{
	PlaySoundAtEntity("break_glass_large", "break_glass_large", "Player", 0.1f, false);
	GivePlayerDamage(10000000, "Slash", true, true);
	FadeSepiaColorTo(0.0f, 33.0f);
	SetEntityActive("angel_statue_96", false);
	SetEntityActive("angel_statue_97", false);
	SetEntityActive("angel_statue_98", false);
	SetEntityActive("angel_statue_99", false);
	SetEntityActive("angel_statue_100", false);
	SetEntityActive("angel_statue_101", false);
}
void TimerEndingDoorMonologue(string &in asTimer)
{
	SetPlayerActive(false);
	TeleportPlayer("PlayerStartAloneEnd_2");
	if(asTimer == "orb") SetMessage("Monologue", "ThatNight", 12.0f);
	if(asTimer == "brother") SetMessage("Monologue", "ThatEvening", 12.0f);
}
void TimerOpenEndDoor(string &in asTimer)
{
	if(asTimer == "wood") PlayGuiSound("door_level_wood_open.snt", 1.0f);
	if(asTimer == "large") PlayGuiSound("door_large_castle_open.snt", 1.0f);
	FadeOut(5.0f);
	PlaySoundAtEntity("Sleep", "react_sigh.snt", "Player", 0.0f, false);
	StopMusic(5.0f, 0);
}
void TimerStopAllMusic(string &in asTimer)
{
	StopMusic(3.0f, 0);
	StopMusic(3.0f, 1);
	StopMusic(3.0f, 10);
}
void TimerActivePlayer(string &in asTimer)
{
	SetPlayerActive(true);
}
void TimerStrangerThings(string &in asTimer)
{
	PlaySoundAtEntity("strangerthings", "01_maze_stranger_things", "AreaStrangerThingsSound_"+RandInt(1, 11), 0.1f, false);
	AddTimer("TimerStrangerThings", RandInt(30, 50), "TimerStrangerThings");
}
void TimerPrisonerWhimp(string &in asTimer)
{
	PlaySoundAtEntity("prisonerwhimp", "01_maze_prisoner_whimp", "AreaPrisonerSound_"+RandInt(1, 4), 0.1f, false);	
	AddTimer("TimerPrisonerWhimp", RandInt(10, 40), "TimerPrisonerWhimp");
}
void TimerPrisonerWhimpConst(string &in asTimer)
{
	PlaySoundAtEntity("prisonerwhimpconst", "01_maze_prisoner_whimp", "AreaPrisonerSound_"+RandInt(1, 3), 0.1f, false);	
	AddTimer("TimerPrisonerWhimpConst", RandInt(7, 10), "TimerPrisonerWhimpConst");
}
void TimerGirlCry(string &in asTimer)
{
	PlaySoundAtEntity("girlcry", "01_maze_girl_cry", "AreaGirlSound_"+RandInt(1, 20), 0.1f, false);	
	AddTimer("TimerGirlCry", 50, "TimerGirlCry");
}
void TimerGirlCryConst(string &in asTimer)
{
	PlaySoundAtEntity("girlcryconst", "01_maze_girl_cry", "LookPaintGirlPart2", 0.1f, false);	
	AddTimer("TimerGirlCryConst", RandInt(9, 11), "TimerGirlCryConst");
}
void TimerInteractFire(string &in asTimer)
{
	SetEntityPlayerInteractCallback("AreaFire", "InteractFire", true);
}
void TimerBurnFire(string &in asTimer)
{
	if(asTimer == "touch")
	{
		PlayGuiSound("15_player_burn.snt", 1.0f);
		GivePlayerDamage(5.0f, "BloodSplat", false,false);
		AddTimer("InteractFire", 1.0f, "TimerInteractFire");
		return;
	}	
	PlayGuiSound("15_player_burn.snt", 1.0f);
	GivePlayerDamage(5.0f, "BloodSplat", false,false);	
	AddTimer("burn", 1.0f, "TimerBurnFire");
}
void TimerPlayerReactions(string &in asTimer)
{
	if(asTimer == "scare")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "breath")
	{
		PlayGuiSound("react_breath", 0.7f);
		GiveSanityDamage(0.5f, false);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "breathl")
	{
		PlayGuiSound("react_breath", 0.4f);
		GiveSanityDamage(0.5f, false);
	}
}
void TimerRemoveMonster(string asTimer)
{
	if(asTimer == "1")
		RemoveAnyActiveMonster();
	else if(asTimer == "2")
		ResetMonstersActivationAreas();
}

//END TIMER FUNCTIONS//

//BEGIN CHECKPOINT FUNCTIONS//

void Respawn(string &in asName, int alCount)
{	
	if(GetPlayerLampOil() < 10)
	{
		AddPlayerLampOil(5.0f);
	}
	SetLocalVarInt("giMonsterSpawnTime", 4);
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	SetLocalVarString("LastOrbPedestalUsedVar", "nopedestal");
	SetEntityActive("GruntArea01Seal", false);
	SetEntityActive("GruntArea02Seal", false);
	SetEntityActive("GruntArea04Seal", false);
	SetEntityActive("GruntArea06Seal", false);
	SetEntityActive("BruteArea01Seal", false);
	SetEntityActive("BruteArea02Seal", false);
	SetEntityActive("BruteArea03Seal", false);
	SetEntityActive("BruteArea04Seal", false);
	SetEntityActive("BruteArea05Seal", false);
	SetEntityActive("BruteArea06Seal", false);
	SetEntityActive("SuitorArea02Seal", false);
	SetEntityActive("SuitorArea03Seal", false);
	SetEntityActive("SuitorArea04Seal", false);
	SetEntityActive("SuitorArea05Seal", false);
	SetEntityActive("SuitorArea06Seal", false);
	DisableMonstersActivationAreas();
	AddTimer("1", 0.75f, "TimerRemoveMonster");
	AddTimer("2", 15.0f, "TimerRemoveMonster");
	AddTimer("", 0.01f, "PlayAlternativeMusic");	
	AddLocalVarInt("DeathVar", 1);
	SetPlayerMoveSpeedMul(1.005f);
	SetPlayerRunSpeedMul(1.0f);
	SetInventoryDisabled(false);
	StopPlayerLookAt();
	PlaySoundAtEntity("whisper", "insanity_whisper", "Player", 0, false);
	SetEntityActive("empty_frame_2", false);
	SetEntityActive("RunForMonstersArea", false);
	SetEntityInteractionDisabled("emotion_stone_starter", false);
	if(GetPlayerLampOil() <= 40) AddPlayerLampOil(7.5f);
	if(GetLocalVarInt("IGreetYouVar") == 1)
	{
		ResetProp("cellar_wood01_2");
		SetEntityActive("candlestick_wall_orange_1", false);
		SetEntityActive("candlestick02_6", false);
		SetLocalVarInt("IGreetYouVar", 0);
	}
	if(GetLocalVarInt("DeathBySolitudeVar") == 1)
	{
		AddEntityCollideCallback("Player", "WomanBruteArea", "CollideWomanBruteArea", true, 1);
		AddTimer("", 13.9f, "TimerAmbCrying");
		AddTimer("", 10.9f, "TimerStopMusic");
		for(int i=1;i<=21;i++) SetEntityActive("ritualcandle_"+i, false);
	}
	if(GetLocalVarInt("DeathVar") >= 4)
	{
		AddTimer("death02", 0.5f, "TimerDeathMusic");
		AddTimer("", 10.25f, "TimerReactBreath");
		SetPlayerHealth(45.5f);
		SetPlayerSanity(35.5f);
		if(GetLocalVarInt("DeathVar") == 4)
		{
			SetEntityActive("candle_floor_small_84", false);
			SetEntityActive("candle_floor_small_85", false);
			SetEntityActive("candle_floor_small_86", false);
			SetEntityActive("candle_floor_small_87", false);
			SetEntityActive("candlestick_wall_2", false);
			SetEntityActive("candlestick_wall_4", false);
			SetEntityActive("candlestick_wall_5", false);
			SetEntityActive("candlestick_wall_8", false);
			SetEntityActive("candlestick01_1", false);
			SetEntityActive("candlestick01_5", false);
			SetEntityActive("chest_of_drawers_nice_1", false);
			SetEntityActive("chest_of_drawers_nice_2", false);
			SetEntityActive("arabic_statue_1", false);
			SetEntityActive("arabic_statue_gold_1", false);
			SetEntityActive("arabic_statue_2", false);
			SetEntityActive("arabic_statue_gold_3", false);
			SetEntityActive("pot_plant_small02_1", false);
			SetEntityActive("pot_plant_small02_4", false);	
		}
		else if(GetLocalVarInt("DeathVar") == 5)
		{
			SetEntityActive("sofa_1", false);
			SetEntityActive("sofa_2", false);
			SetEntityActive("rolled_up_carpet_1", false);
			SetEntityActive("rolled_up_carpet_5", false);
		}
		else if(GetLocalVarInt("DeathVar") == 6)
		{
			SetEntityActive("table_nice_round_1", false);
			SetEntityActive("table_nice_round_5", false);
			SetEntityActive("plate_1", false);
			SetEntityActive("plate_2", false);
			SetEntityActive("plate_5", false);
			SetEntityActive("plate_6", false);
		}
		else if(GetLocalVarInt("DeathVar") == 7)
		{
			SetEntityActive("stove_corner_1", false);
			SetEntityActive("stove_corner_2", false);
			SetEntityActive("bonfire_2", false);
			SetEntityActive("bonfire_1", false);
		}
		else if(GetLocalVarInt("DeathVar") == 8) SetEntityActive("angel_statue_99", true);
		else if(GetLocalVarInt("DeathVar") == 9) SetEntityActive("angel_statue_97", true);
	}
	else
	{
		AddTimer("death01", 0.5f, "TimerDeathMusic");
		SetPlayerHealth(75.5f);
		SetPlayerSanity(50.5f);
		if(GetLocalVarInt("DeathVar") == 1)
		{
			SetEntityActive("basket_6", false);
			SetEntityActive("basket_7", false);
			SetEntityActive("basket_8", false);
		}
		else if(GetLocalVarInt("DeathVar") == 2)
		{
			SetEntityActive("stool_wood_1", false);
			SetEntityActive("stool_wood_2", false);
			SetEntityActive("stool_wood_6", false);
			SetEntityActive("stool_wood_7", false);
		}
		else if(GetLocalVarInt("DeathVar") == 3)
		{
			SetEntityActive("armchair_1", false);
			SetEntityActive("armchair_2", false);
			SetEntityActive("armchair_3", false);
			SetEntityActive("armchair_9", false);
			SetEntityActive("armchair_10", false);
			SetEntityActive("armchair_11", false);
			SetEntityActive("chair_nice01_1", false);
			SetEntityActive("chair_nice01_2", false);
			SetEntityActive("chair_nice01_6", false);
			SetEntityActive("chair_nice01_7", false);
		}
    } 
}
void StartBrotherEnding(string &in asName, int alCount)
{
	AddTimer("chbadending01", 2.5f, "TimerPrisonChapter");
	FadeGlobalSoundVolume(0.0f, 1.0f);
	FadeOut(0.0f);
	RemoveTimer("TimerGirlCry");
	RemoveTimer("TimerStrangerThings");
	SetEntityActive("metal_1", false);
	SetPlayerActive(false);
	SetPlayerHealth(100.0f);
	SetPlayerSanity(100.0f);
	StopMusic(0.0f, 10);
	StopMusic(0.0f, 1);
	StopMusic(0.0f, 0);
}

//END CHECKPOINT FUNCTIONS//

//BEGIN PLAYER INTERACT FUNCTIONS//

void PickStephanoNote(string &in asEntity)
{
	if(asEntity == "note_manual_1") if(GetLocalVarInt("MainMemoriesVar") < 11) AddQuest("FindMainMemories", "FindMainMemories");
	if(asEntity == "note_manual_2")	if(GetLocalVarInt("BrotherBonusVar") <= 2) AddQuest("FindBrotherDoors", "FindBrotherDoors");
	if(asEntity == "note_manual_3")	if(GetLocalVarInt("LoweredLeversVar") < 6) AddQuest("LowerLevers", "LowerLevers");
	if(asEntity == "note_manual_4")	if(GetGlobalVarInt("GrandpaFreeVar") == 0) AddQuest("StopKnocking", "StopKnocking");
}
void PickScrollNote(string &in asEntity)
{
	if(asEntity == "note_scroll_1")
	{
		SetEntityActive("note_scroll_2", true);
		SetLightVisible("PointLight_button1", true);
	}
	if(asEntity == "note_scroll_2")
	{
		SetEntityActive("note_scroll_3", true);
		SetLightVisible("PointLight_button2", true);
	}
	if(asEntity == "note_scroll_3")
	{
		SetEntityActive("note_scroll_4", true);
		SetLightVisible("PointLight_button3", true);
	}
}
void FadeKnife(string &in asEntity)
{
	PlayGuiSound("scare_thump_flash", 1.0f);
	SetPropActiveAndFade("fakeknife", false, 1.0f);
}
void ActivateSurpriseSuitor2(string &in asEntity)
{
	AddTimer("", 0.7f, "TimerReactScare");
	PlayGuiSound("01_maze_Agrippa_Strained_01", 0.7f);
	AddEnemyPatrolNode("suitorsurprise02", "PathNodeArea_476", 3, "");
	SetEntityActive("suitorsurprise02", true);
	SetEntityActive("corpse_male_1", false);
}
void InteractButtonSimple(string &in asEntity)
{
	AddLocalVarInt("ButtonSimpleVar", 1);
	PlayGuiSound("unlock_door.snt", 0.4f);
	SetEntityInteractionDisabled(asEntity, true);
	if(GetLocalVarInt("ButtonSimpleVar") == 4)
	{
		GiveSanityBoostSmall();
		OpenSecretDoor();
		PlayMusic("21_puzzle_door", false, 1.0f, 1.3f, 10, true);
	}
}
void LitGirlCandle(string &in asEntity)
{
	AddTimer(asEntity, 1.0f, "TimerLitGirlCandle");
	SetLampLit(asEntity, true, true);
}
void LitWallCandle(string &in asEntity)
{
	AddTimer("", 1.0f, "TimerReactScare");
	if(asEntity == "candlestick_wall_76")
	{
		PlayGuiSound("00_faint", 0.9f);
		SetLightVisible("PointLight_91", true);
	}
	if(asEntity == "candlestick_wall_69")
	{
		PlayGuiSound("01_maze_ThankYou", 1.0f);
		SetLightVisible("PointLight_92", true);
		SetMessage("Dialogue", "ThankYou", 3.3f);
	}
	if(asEntity == "candlestick_wall_262")
	{
		PlayGuiSound("03_in_a_bottle", 0.7f);
		SetLampLit("candlestick_floor_3", true, true);
	}
}
void LitRitualCandle(string &in asEntity)
{
	AddLocalVarInt("CorrectRitualCandleVar", 1);
	SetLampLit(asEntity, true, true);
	if(GetLocalVarInt("CorrectRitualCandleVar") >= 8)
	{
		AddTimer("", 3.5f, "TimerStopLook");
		FadeEnemyToSmoke("bruteevent03", true);
		GiveSanityBoostSmall();
		PlayMusic("08_amb_success", false, 1.0f, 3.0f, 10, false);
		SetEntityActive("GoDownAloneArea", true);
		SetMessage("Monologue", "IsItDone", 9.9f);
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0.1f);
		StartPlayerLookAt("GoDownAloneArea", 2.5f, 2.5f, "");
	}
}
void ReadNote(string &in asEntity)
{
	PlayGuiSound("pick_paper", 0.8f);
	if(asEntity == "HeartNoteArea")
	{
		AddTimer("first", 28.0f, "TimerGruntInsideRoom");
		SetMessage("Dialogue", "HeartNote", 24.0f);
		SetPlayerActive(false);
		SetEntityActive("painting01_dyn_3", false);
		ShowPlayerCrossHairIcons(false);
		SetPlayerLampOil(100.0f);
		StartPlayerLookAt("HeartNoteArea", 2.0f, 2.0f, "");
		TeleportPlayer("PlayerStartLoveEnd_3");
	}
}
void PickDisplayNote(string &in asEntity)
{
	SetEntityCustomFocusCrossHair("HeartNoteArea", "Pick");
	SetEntityInteractionDisabled("painting01_dyn_3", false);
	SetEntityActive("HeartNoteArea", true);
}
void TouchedPrisonDoor(string &in asEntity)
{
	AddTimer("ch01", 10.0f, "TimerPrisonChapter");
	CheckPoint("BrotherEnding", "PlayerStartBroEnd_3", "StartBrotherEnding", "DeathHints", "ItsOverBrother");
	FadeGlobalSoundVolume(0.0f, 0.0f);
	FadeOut(0.0f);
	RemoveTimer("TimerPrisonerWhimp");
	SetLanternActive(false, true);
	SetLanternDisabled(true);
	SetMessage("Monologue", "ItWasTooLate", 10.0f);
	SetPlayerActive(false);
	StopMusic(0.0f, 10);
	StopMusic(0.0f, 1);
	StopMusic(0.0f, 0);
}
void TouchedPiano(string &in asEntity)
{
	PlayGuiSound("01_maze_touch_piano.snt", 0.8f);
	SetEntityActive(asEntity, false);
	AddTimer(asEntity, 5.0f, "TimerReactivateEntity");
	SetMessage("Hints", "GameSaved", 5.0f);
	AutoSave();
}
void TouchedPainting(string &in asEntity)
{
	AddTimer("", 1.1f, "TimerFadeIn");
	AddTimer("", 2.1f, "TimerActivePlayer");
	FadeOut(1.0f);
	PlayGuiSound("01_maze_touch_painting.snt", 0.8f);
	SetPlayerActive(false);
	if(asEntity == "GruntPaintTouch")
	{
		AddTimer("Grunt", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "BrutePaintTouch")
	{
		AddTimer("Brute", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "LovePaintTouch")
	{
		AddTimer("Love", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "DefaultPaintTouch")
	{
		AddTimer("Default", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "DoorGruntPaintTouch")
	{
		AddTimer("DoorGrunt", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "DoorBrutePaintTouch")
	{
		AddTimer("DoorBrute", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "DoorLovePaintTouch")
	{
		AddTimer("DoorLove", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "DoorDefaultPaintTouch")
	{
		AddTimer("DoorDefault", 1.0f, "TimerTouchedPainting");
	}
	else if(asEntity == "AreaStorageStone")
	{
		StopSound("SoundStorageStone", 2.0f);
		StopSound("storage_web_sound", 2.0f);
		SetLightVisible("LightStorageStone", false);
		SetPropHealth("web_2", 0);
		SetEntityActive("web_1", false);
		SetEntityActive("block_box_41", false);
		StopMusic(4.0f, 10);
		AddTimer("", 2.5f, "PlayAlternativeMusic");
		RemoveAnyActiveMonster();
		ResetMonstersActivationAreas();
		AddTimer("StorageTrapStone", 1.0f, "TimerTouchedPainting");
	}
}
void InteractCuttableSlime(string asEntity)
{
	PlayGuiSound("step_sneak_organic.snt", 0.9f);
	SetMessage("Hints", "NeedKnife", 5.0f);
}
void PickKey(string &in asEntity)
{
	StopPlayerLookAt();
	if(asEntity == "ceremony_knife_1")
	{
		AddLocalVarInt("OrbRoomItemsVar", 1);
		return;
	}
	AddLocalVarInt("KeyVar", 1);
	if(asEntity == "love_key")
	{
		SetLightVisible(asEntity + "_light", false);
		SetEntityActive("LoveArea", true);
		if(GetLocalVarInt("OpenedDoorsVar") == 5) CheckPoint ("CheckPoint5", "PlayerStartArea_5", "Respawn", "DeathHints", "FindTheMemories");
		else CheckPoint ("CheckPoint5", "PlayerStartArea_5", "Respawn", "DeathHints", "FindTheDoor");
	}
	else if(asEntity == "brute_key")
	{
		SetLightVisible(asEntity + "_light", false);
		SetDeathHint("DeathHints", "FindTheDoor");
	}
	else if(asEntity == "grunt_key")
	{
		SetLightVisible(asEntity + "_light", false);
		SetDeathHint("DeathHints", "FindTheDoor"); 
	}
	else if(asEntity == "nightmare_key")
	{
		SetDeathHint("DeathHints", "FindTheDoor");
		SetEntityActive("empty_frame_2", false);
	}
	else if(asEntity == "brother_key")
	{
		AddTimer("", 6.5f, "TimerBrotherPath"); 
		SetDeathHint("DeathHints", "FindTheDoor");
	}
	else if(asEntity == "orb_key_1")
	{
		SetDeathHint("DeathHints", "FindTheDoor");
		AddLocalVarInt("OrbRoomItemsVar", 1);
	}
}
void PickMemoryNote(string &in asEntity)
{
	AddLocalVarInt("MemoriesVar", 1);
	AddTimer("", 0.1f, "PlayAlternativeMusic");
	if(asEntity == "memoryparents")
	{
		AddLocalVarInt("MainMemoriesVar", 1);	
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");		
		GiveSanityBoostSmall();
		PlayMusic("01_maze_baby03.ogg", false, 1.0f, 4.0f, 10, true);
		for(int i=3;i<=4;i++)
		{
			SetEntityActive("maincandle_"+i, true);
		}
		StopSound("memoryparents_sound", 2.0f);
	}
	else if(asEntity == "memoryfencing01")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		PlayMusic("01_maze_calm.ogg", false, 1.0f, 4.0f, 10, true);
		for(int i=5;i<=7;i++)
		{
			SetEntityActive("maincandle_"+i, true);
		}
		StopSound("memoryfencing01_sound", 2.0f);
	}
	else if(asEntity == "memorymeetgrandfather")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		SetEntityActive("memorygrunt", true);
		PlayMusic("01_maze_baby04.ogg", false, 1.0f, 4.0f, 10, true);
		PlaySoundAtEntity("memorygrunt_sound", "01_memory_whisper_rand.snt", "memorygrunt", 0, true);
		FadeLightTo("PointLight_7", 0.121,0.383,0.765,1, 2, 1);
		SetEntityActive("candle_floor_small_2", true);
		SetEntityActive("maincandle_10", true);
		SetEntityActive("maincandle_24", true);
		SetEntityActive("maincandle_25", true);
		SetEntityActive("maincandle_26", true);
		SetEntityActive("maincandle_27", true);
		SetEntityActive("maincandle_28", true);
		StopSound("memorymeetgrandfather_sound", 2.0f);
	}
	else if(asEntity == "memorygrunt")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoost();
		SetPropActiveAndFade("grunt_key", true, 1.0f);
		SetLightVisible("grunt_key_light", true);
		StartPlayerLookAt("grunt_key", 2.0f, 2.0f, "");
		PlayMusic("01_maze_grandpa.ogg", false, 1.0f, 4.0f, 10, true);
		PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
		SetEntityActive("GruntArea05", true);
		for(int i=13;i<=23;i++)
		{
			SetEntityActive("maincandle_"+i, true);
		}
		StopSound("memorygrunt_sound", 2.0f);
	}
	else if(asEntity == "memorygrandfather01")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		PlayMusic("01_maze_calm_piano.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("maincandle_11", true);
		SetEntityActive("maincandle_12", true);
		StopSound("memorygrandfather01_sound", 2.0f);
	}
	else if(asEntity == "memorystorage")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		AddTimer("poofer", 6.25f, "TimerReactBreath");
		PlayMusic("01_maze_confused.ogg", false, 1.0f, 4.0f, 10, true);
		AddEnemyPatrolNode("grunt07", "PathNodeArea_118", 2, "");
		SetEntityActive("grunt07", true);
		for(int i=29;i<=35;i++)
		{
			SetEntityActive("maincandle_"+i, true);
		}
		StopSound("memorystorage_sound", 2.0f);
	}
	else if(asEntity == "memoryfencing02")
	{	
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		AddTimer("poofer", 6.25f, "TimerReactBreath");
		PlayMusic("01_maze_amb03.ogg", false, 1.0f, 4.0f, 10, true);
		AddEnemyPatrolNode("suitor07", "PathNodeArea_404", 0.001f, "");
		AddEnemyPatrolNode("suitor07", "PathNodeArea_405", 2, "");
		SetEntityActive("suitor07", true);
		for(int i=36;i<=49;i++)
		{
			SetEntityActive("maincandle_"+i, true);
		}
		StopSound("memoryfencing02_sound", 2.0f);
	}
	else if(asEntity == "memorymatch")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		AddTimer("poofer", 6.25f, "TimerReactBreath");
		PlayMusic("01_maze_amb01.ogg", false, 1.0f, 4.0f, 10, true);
		AddEnemyPatrolNode("brute07", "PathNodeArea_256", 0.001f, "");
		AddEnemyPatrolNode("brute07", "PathNodeArea_257", 2, "");
		SetEntityActive("brute07", true);
		for(int i=50;i<=56;i++)
		{
			SetEntityActive("maincandle_"+i, true);
		}
		StopSound("memorymatch_sound", 2.0f);
	}
	else if(asEntity == "memoryfencing03")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		PlayMusic("01_maze_amb02.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("memorybrute", true);
		SetEntityActive("candle_floor_small_1", true);
		FadeLightTo("PointLight_13", 0.121,0.383,0.765,1, 2.2, 1);
		PlaySoundAtEntity("memorybrute_sound", "01_memory_whisper_rand.snt", "memorybrute", 0, true);
		for(int i=57; i<=73; i++) SetEntityActive("maincandle_"+i, true);
		StopSound("memoryfencing03_sound", 2.0f);
	}
	else if(asEntity == "memorybrute")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoost();
		SetPropActiveAndFade("brute_key", true, 1.0f);
		SetLightVisible("brute_key_light", true);
		StartPlayerLookAt("brute_key", 2.0f, 2.0f, "");
		SetEntityActive("BruteArea02", true);
		SetEntityActive("candle_floor_small_3", true);
		PlayMusic("01_maze_solitude.ogg", false, 1.0f, 4.0f, 10, true);
		PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
		for(int i=74; i<=85; i++) SetEntityActive("maincandle_"+i, true);
		PlaySoundAtEntity("memorylove_sound", "01_memory_whisper_rand.snt", "memorylove", 0, true);
		StopSound("memorybrute_sound", 2.0f);
	}
	else if(asEntity == "memorylove")
	{
		AddLocalVarInt("MainMemoriesVar", 1);
		CompleteQuest("FindMainMemories", "FindMainMemories");
		AddTimer("", 0.2f, "TimerCheckMainMemories");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoost();
		SetPropActiveAndFade("love_key", true, 1.0f);
		SetLightVisible("love_key_light", true);
		StartPlayerLookAt("love_key", 2.0f, 2.0f, "");
		PlayMusic("01_maze_love.ogg", false, 1.0f, 4.0f, 10, true);
		PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
		SetEntityActive("SuitorArea02", true);
		StopSound("memorylove_sound", 2.0f);
	}
	else if(asEntity == "memorycloset")
	{ 
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		SetEntityActive("rolled_up_carpet_10", true);
		SetEntityActive("rolled_up_carpet_11", true);
		SetEntityActive("rolled_up_carpet_12", true);
		StopSound("memorycloset_sound", 2.0f);
	}
	else if(asEntity == "memorypaintings")
	{
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		PlayMusic("01_maze_paintings.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("painting03_dynamic_2", true);
		SetEntityActive("painting02_insane_2", true);
		SetEntityActive("painting04_insane_2", true);
		SetEntityActive("painting05_insane_2", true);
		SetEntityActive("painting06_insane_2", true);
		SetEntityActive("painting07_insane_2", true);
		StopSound("memorypaintings_sound", 2.0f);
	}
	else if(asEntity == "memoryinsanity")
	{
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		PlayMusic("02_amb_strange", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("angel_statue_5", false);
		SetEntityActive("angel_statue_43", false);
		SetEntityActive("angel_statue_44", false);
		PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
		SetPropActiveAndFade("nightmare_key", true, 1.0f);
		StartPlayerLookAt("nightmare_key", 2.0f, 2.0f, "");
		StopSound("memoryinsanity_sound", 2.0f);
	}
	else if(asEntity == "memorypieceoforb")
	{
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		PlayMusic("10_paper_daniel03", false, 1.0f, 4.0f, 10, true);
		StopSound("memorypieceoforb_sound", 2.0f);
	}
	else if(asEntity == "memoryviolin")
	{
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall(); 
		SetEntityActive("violin_2", true);
		StopSound("memoryviolin_sound", 2.0f);
	}
	else if(asEntity == "memorystoragetrap")
	{
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		AddEntityCollideCallback("Player", "EndStorageArea", "CollideEndStorageArea", true, 1);
		SetEntityActive("ForceStorageArea", false);
		StopSound("memorystoragetrap_sound", 2.0f);
	}
	else if(asEntity == "memorygrandpaend" || asEntity == "memoryaloneend" || asEntity == "memorybrotherend" || asEntity == "memoryorbend" || asEntity == "memoryemptyend")
	{
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		if(asEntity == "memorygrandpaend") StopSound("memorygrandpaend_sound", 2.0f);
		else if(asEntity == "memoryaloneend") StopSound("memoryaloneend_sound", 2.0f);
		else if(asEntity == "memorybrotherend") StopSound("memorybrotherend_sound", 2.0f);
		else if(asEntity == "memoryorbend") StopSound("memoryorbend_sound", 2.0f);
		else if(asEntity == "memoryemptyend") StopSound("memoryemptyend_sound", 2.0f);
	}
	else if(asEntity == "memorybrother01" || asEntity == "memorybrother02" || asEntity == "memorybrother03")
	{
		AddLocalVarInt("BrotherBonusVar", 1);
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		if(GetLocalVarInt("BrotherBonusVar") == 3)
		{
			SetEntityActive("youshallnotpassstatue", false);
			SetEntityActive("candlestick_tri_11", true);
			SetEntityActive("candlestick_tri_10", true);
			SetEntityActive("candlestick_tri_9", true); 
			SetEntityActive("candlestick_tri_8", true);
			SetEntityActive("candlestick_tri_7", true);
			SetEntityActive("candlestick_tri_6", true);
			SetEntityActive("candlestick_tri_5", true);
			SetEntityActive("candlestick_tri_4", true);
			SetEntityActive("candlestick_tri_3", true);
			SetEntityActive("candlestick_tri_2", true); 
			SetEntityActive("candlestick_tri_1", true);
			SetEntityActive("candlestick_tri_12", true);
			SetEntityActive("candlestick_tri_13", true);
			SetEntityActive("candlestick_tri_14", true);
			SetEntityActive("candlestick_tri_15", true);
			SetEntityActive("candlestick_tri_16", true);
			SetEntityActive("candlestick_tri_17", true);
			SetEntityActive("CreateWrongDoorArea_1", true);
			SetEntityActive("CreateWrongDoorArea_2", true);
			SetEntityActive("CreateWrongDoorArea_4", true);
		}
		if(asEntity == "memorybrother01") StopSound("memorybrother01_sound", 2.0f);
		else if(asEntity == "memorybrother02") StopSound("memorybrother02_sound", 2.0f);
		else if(asEntity == "memorybrother03") StopSound("memorybrother03_sound", 2.0f);
	}
	else if(asEntity == "memorybrother04")
	{
		AddLocalVarInt("BrotherBonusVar", 1);
		AddTimer("", 0.25f, "TimerCheckAllMemories");
		CompleteQuest("FindBrotherDoors", "FindBrotherDoors");
		FadeLightTo("PointLight_2", 0.121,0.383,0.765,1, 4, 1);
		GiveSanityBoostSmall();
		SetEntityActive("memorybrother05", true);
		PlaySoundAtEntity("memorybrother05_sound", "01_memory_whisper_rand.snt", "memorybrother05", 0, true);
		StartEffectEmotionFlash("Hints", "BackToTheStartPoint", "insanity_imageflash01");  
		StopSound("memorybrother04_sound", 2.0f);
	}
	else if(asEntity == "memorybrother05")
	{
		AddTimer("", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		SetPropActiveAndFade("memorybrother06", true, 1.0f);
		PlaySoundAtEntity("memorybrother06_sound", "01_memory_whisper_rand.snt", "memorybrother06", 0, true);
		StopSound("memorybrother05_sound", 2.0f);
	}
	else if(asEntity == "memorybrother06")
	{
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		FadeLightTo("PointLight_3", 0.121,0.383,0.765,1, 3, 1);
		PlayMusic("01_maze_brother.ogg", false, 1.0f, 4.0f, 10, true);
		PlaySoundAtEntity("ghost_released", "03_in_a_bottle", "Player", 0, false);
		SetPropActiveAndFade("brother_key", true, 1.0f);
		StartPlayerLookAt("brother_key", 2.0f, 2.0f, "");
		StopSound("memorybrother06_sound", 2.0f);
	}
	else if(asEntity == "memoryescapeattempt")
	{
		AddTimer("", 0.5f, "TimerReactPant");
		AddTimer("save", 0.25f, "TimerCheckAllMemories");
		AddTimer("angel_statue_35", 20.0f, "TimerFadeOffEntity");
		AddTimer("angel_statue_36", 23.0f, "TimerFadeOffEntity");
		AddTimer("angel_statue_37", 26.0f, "TimerFadeOffEntity");
		GiveSanityBoostSmall();
		PlayGuiSound("00_laugh", 1);
		PlayMusic("28_paper_daniel01.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("angel_statue_35", true);
		SetEntityActive("angel_statue_36", true);
		SetEntityActive("angel_statue_37", true);
		SetEntityActive("angel_statue_38", true);
		StopSound("memoryescapeattempt_sound", 2.0f);
	}
	else if(asEntity == "memoryfather")
	{
		AddTimer("", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		AddTimer("", 5.0f, "TimerActivateSuitor09");
		PlayMusic("15_event_girl_mother.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("angel_statue_34", false);
		SetEntityActive("crude_man_chains_statue_3", false);
		SetEntityActive("fourthwaypainting_1", true);
		SetEntityActive("fourthwaypainting_2", true);
		SetEntityActive("torchfourth", true);
		SetEntityActive("nogoingback4", true);
		AddLocalVarInt("HiddenMemoryVar", 1);
		RemoveEntityCollideCallback("Player", "FourthBlockedWayArea");
		StopSound("memoryfather_sound", 2.0f);
		if(GetLocalVarInt("KeyVar") >= 1)
		{
			if(GetLocalVarInt("OpenedDoorsVar") == 5)
			{
				CheckPoint ("StartPoint4", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
			}
			else
			{
				CheckPoint ("StartPoint4", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
			}
		}
		else
		{
			CheckPoint ("StartPoint4", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheKey");
		}
		if(GetLocalVarInt("HiddenMemoryVar") >= 4)
		{
			AddTimer("", 0.25f, "TimerCheckAllMemories");
			StartEffectEmotionFlash("Hints", "BackToTheStartPoint", "insanity_imageflash01");
			SetEntityActive("memoryescapeattempt", true);
			PlaySoundAtEntity("memoryescapeattempt_sound", "01_memory_whisper_rand.snt", "memoryescapeattempt", 0, true);
		}
		else AddTimer("save", 0.25f, "TimerCheckAllMemories");
	}
	else if(asEntity == "memorygrandfather02")
	{
		AddTimer("", 2.0f, "TimerActivateGrunt08");
		AddTimer("", 0.25f, "TimerCheckAllMemories");
		AddLocalVarInt("HiddenMemoryVar", 1);
		GiveSanityBoostSmall();
		PlayMusic("03_paper_village.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("angel_statue_28", false);
		SetEntityActive("angel_statue_29", false);
		SetEntityActive("firstwaypainting_1", true);
		SetEntityActive("firstwaypainting_2", true);
		SetEntityActive("firstwaypainting_3", true);
		SetEntityActive("torchfirst", true);
		SetEntityActive("nogoingback1", true);
		SetEntityActive("book_bible_20", true);
		RemoveEntityCollideCallback("Player", "BlockedWayArea");
		StopSound("memorygrandfather02_sound", 2.0f);
		if(GetLocalVarInt("KeyVar") >= 1)
		{
			if(GetLocalVarInt("OpenedDoorsVar") == 5)
			{
				CheckPoint ("StartPoint1", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
			}
			else
			{
				CheckPoint ("StartPoint1", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
			}
		}
		else
		{
			CheckPoint ("StartPoint1", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheKey");
		}
		if(GetLocalVarInt("HiddenMemoryVar") >= 4)
		{
			AddTimer("", 0.25f, "TimerCheckAllMemories");
			StartEffectEmotionFlash("Hints", "BackToTheStartPoint", "insanity_imageflash01");
			SetEntityActive("memoryescapeattempt", true);
			PlaySoundAtEntity("memoryescapeattempt_sound", "01_memory_whisper_rand.snt", "memoryescapeattempt", 0, true);
		}
		else AddTimer("save", 0.25f, "TimerCheckAllMemories");
	}
	else if(asEntity == "memorytherapy")
	{
		AddTimer("", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		AddTimer("", 2.0f, "TimerActivateSuitor08");
		PlayMusic("27_paper_daniel01.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("angel_statue_31", false);
		SetEntityActive("angel_statue_33", false);
		SetEntityActive("thirdwaypainting_1", true);
		SetEntityActive("thirdwaypainting_2", true);
		SetEntityActive("thirdwaypainting_3", true);
		SetEntityActive("torchthird", true);
		SetEntityActive("candlestick_wall_142", true);
		SetEntityActive("candlestick_wall_143", true);
		SetEntityActive("candlestick_wall_144", true);
		SetEntityActive("nogoingback3", true);
		AddLocalVarInt("HiddenMemoryVar", 1);
		RemoveEntityCollideCallback("Player", "ThirdBlockedWayArea");
		StopSound("memorytherapy_sound", 2.0f);
		if(GetLocalVarInt("KeyVar") >= 1)
		{
			if(GetLocalVarInt("OpenedDoorsVar") == 5)
			{
				CheckPoint ("StartPoint3", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
			}
			else
			{
				CheckPoint ("StartPoint3", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
			}
		}
		else
		{
			CheckPoint ("StartPoint3", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheKey");
		}
		if(GetLocalVarInt("HiddenMemoryVar") >= 4)
		{
			AddTimer("", 0.25f, "TimerCheckAllMemories");
			StartEffectEmotionFlash("Hints", "BackToTheStartPoint", "insanity_imageflash01");
			SetEntityActive("memoryescapeattempt", true);
			PlaySoundAtEntity("memoryescapeattempt_sound", "01_memory_whisper_rand.snt", "memoryescapeattempt", 0, true);
		}
		else AddTimer("save", 0.25f, "TimerCheckAllMemories");
	}
	else if(asEntity == "memoryfencing04")
	{
		AddTimer("", 0.25f, "TimerCheckAllMemories");
		GiveSanityBoostSmall();
		AddTimer("", 2.0f, "TimerActivateBrute9");
		PlayMusic("18_paper_daniel01.ogg", false, 1.0f, 4.0f, 10, true);
		SetEntityActive("angel_statue_32", false);
		SetEntityActive("empty_frame_1", false);
		SetEntityActive("secondwaypainting_1", true);
		SetEntityActive("secondwaypainting_2", true);
		SetEntityActive("torchsecond", true);
		SetEntityActive("nogoingback2", true);
		AddLocalVarInt("HiddenMemoryVar", 1);
		RemoveEntityCollideCallback("Player", "SecondBlockedWayArea");
		StopSound("memoryfencing04_sound", 2.0f);
		if(GetLocalVarInt("KeyVar") >= 1)
		{
			if(GetLocalVarInt("OpenedDoorsVar") == 5)
			{
				CheckPoint ("StartPoint2", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
			}
			else
			{
				CheckPoint ("StartPoint2", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
			}
		}
		else
		{
			CheckPoint ("StartPoint2", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheKey");
		}
		if(GetLocalVarInt("HiddenMemoryVar") >= 4)
		{
			AddTimer("", 0.25f, "TimerCheckAllMemories");
			StartEffectEmotionFlash("Hints", "BackToTheStartPoint", "insanity_imageflash01");
			SetEntityActive("memoryescapeattempt", true);
			PlaySoundAtEntity("memoryescapeattempt_sound", "01_memory_whisper_rand.snt", "memoryescapeattempt", 0, true);
		}
		else AddTimer("save", 0.25f, "TimerCheckAllMemories");
	}
}
void TouchOrb(string &in asEntity)
{
	AddEntityCollideCallback("Player", "LookAtOrbArea", "CollideLookAtOrbArea", true, 1);
	DestroyParticleSystem("flashorb");
	PlayMusic("22_puzzle_orb.ogg", false, 1.0f, 4.0f, 10, true);
	SetEntityActive("torch_static_green_8", true);
	SetEntityActive("torch_static_green_9", true);
	SetEntityActive("torch_static_green_10", true);
	SetEntityActive("torch_static_green_11", true);
	SetEntityActive("torch_static_green_12", true);
	SetEntityActive("torch_static_green_13", true);
	SetSkyBoxColor(0.05f, 0.18f, 0.22f, 1.0f);
	SetFogColor(0.05f, 0.18f, 0.22f, 1.0f);
	StartEffectEmotionFlash("Messages", "TouchedOrb", "insanity_imageflash01");
	SetLocalVarInt("SkyboxOrbColorVar", 1);
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	SetEntityActive("KnifeArea", true);
	SetEntityActive("OrbKeyArea", true);
}
void PickStarterNote(string &in asEntity)
{
	AddTimer("", 0.1f, "TimerFadeIn");
	FadeOut(0.0f);
	
	PlayMusic("01_maze.ogg", true, 1.0f, 3.0f, 0, true);
	
	SetEntityActive("stove_corner_1", true);
	SetEntityActive("sofa_1", true);
	SetEntityActive("table_nice_round_1", true);
	SetEntityActive("basket_6", true);
	SetEntityActive("basket_7", true);
	SetEntityActive("basket_8", true);
	SetEntityActive("blockboxstart_1", false);
	SetEntityActive("blockboxstart_2", false);
	SetEntityActive("blockboxstart_3", false);
	SetEntityActive("blockboxstart_4", false);
	SetEntityActive("potion_oil_large_1", true);
	SetEntityActive("tinderbox_1", true);
	SetEntityActive("tinderbox_2", true);
	SetEntityActive("tinderbox_3", true);
	SetEntityActive("tinderbox_4", true);
	SetEntityActive("tinderbox_5", true);
	SetEntityActive("tinderbox_6", true);
	SetEntityActive("tinderbox_7", true);
	SetEntityActive("tinderbox_8", true);
	SetEntityActive("tinderbox_9", true);
	SetEntityActive("tinderbox_10", true);
	SetEntityActive("tinderbox_11", true);
	SetEntityActive("tinderbox_12", true);
	SetEntityActive("tinderbox_13", true);
	SetEntityActive("tinderbox_14", true);
	SetEntityActive("tinderbox_15", true);
	SetEntityActive("tinderbox_37", true);
	SetEntityActive("tinderbox_38", true);
	SetEntityActive("tinderbox_39", true);
	SetEntityActive("tinderbox_40", true);
	SetEntityActive("tinderbox_41", true);
	SetEntityActive("tinderbox_42", true);
	SetEntityActive("tinderbox_43", true);
	SetEntityActive("tinderbox_44", true);
	SetEntityActive("tinderbox_45", true);
	SetEntityActive("tinderbox_46", true);
	SetEntityActive("tinderbox_47", true);
	SetEntityActive("tinderbox_48", true);
	SetEntityActive("tinderbox_156", true);
	SetEntityActive("tinderbox_157", true);
	SetEntityActive("tinderbox_158", true);
	SetEntityActive("potion_sanity_5", true);
	SetEntityActive("potion_sanity_6", true);
	SetEntityActive("potion_health_3", true);
	SetEntityActive("potion_health_4", true);
	SetEntityActive("lantern_1", true);
	SetEntityActive("bonfire_1", true);
	SetEntityActive("chair_nice01_1", true);
	SetEntityActive("chair_nice01_2", true);
	SetEntityActive("chest_of_drawers_nice_1", true);
	SetEntityActive("arabic_statue_1", true);
	SetEntityActive("arabic_statue_gold_1", true);
	SetEntityActive("plate_1", true);
	SetEntityActive("plate_2", true);
	SetEntityActive("rolled_up_carpet_1", true);
	SetEntityActive("pot_plant_small02_1", true);
	SetEntityActive("stool_wood_1", true);
	SetEntityActive("stool_wood_2", true);
	SetEntityActive("armchair_1", true);
	SetEntityActive("armchair_2", true);
	SetEntityActive("armchair_3", true);
	SetEntityActive("memoryparents", true);
	SetEntityActive("candlestick01_1", true);
	SetEntityActive("candle_floor_small_84", true);
	SetEntityActive("candle_floor_small_85", true);
	SetEntityActive("candle_floor_small_86", true);
	SetEntityActive("candle_floor_small_87", true);
	SetEntityActive("candleblue_1", true);
	SetEntityActive("candleblue_2", true);
	SetEntityActive("candleblue_3", true);
	SetEntityActive("youshallnotpassstatue", true);
	
	SetEntityInteractionDisabled("emotion_stone_starter", false);
	
	SetLightVisible("StarterPointLight", false);
	SetLightVisible("PointLight_1", true);
	SetLightVisible("PointLight_2", true);
	
	SetPlayerHealth(100.0f);
	SetPlayerSanity(100.0f);
	
	StopPlayerLookAt();
	
	for(int i=1; i<=8; i++) SetEntityActive("candlestick_wall_"+i, true);
	
	for(int q=1; q<=17; q++) SetEntityActive("angel_statue_" + q, true);
	
	SetEntityActive("angel_statue_29", true);
	
	for(int j=96; j<=101; j++) SetPropActiveAndFade("angel_statue_"+j, false, 2.0f);
	for(int w=35; w<=60; w++) SetEntityActive("angel_statue_" + w, false);
	for(int e=68; e<=83; e++) SetEntityActive("angel_statue_" + e, false);
	
	SetEntityActive("angel_statue_21", false);
	SetEntityActive("angel_statue_31", false);
	SetEntityActive("angel_statue_33", false);
	SetEntityActive("angel_statue_39", false);
	SetEntityActive("angel_statue_88", false);
	SetEntityActive("angel_statue_90", false);
	SetEntityActive("angel_statue_94", false);
	SetEntityActive("angel_statue_102", false);
	SetEntityActive("angel_statue_103", false);
	SetEntityActive("angel_statue_104", false);
	SetEntityActive("angel_statue_107", false);
	
	PlaySoundAtEntity("memoryparents_sound", "01_memory_whisper_rand.snt", "memoryparents", 0, true);
	PlaySoundAtEntity("memoryfencing01_sound", "01_memory_whisper_rand.snt", "memoryfencing01", 0, true);
	PlaySoundAtEntity("memorymeetgrandfather_sound", "01_memory_whisper_rand.snt", "memorymeetgrandfather", 0, true);
	PlaySoundAtEntity("memorygrandfather01_sound", "01_memory_whisper_rand.snt", "memorygrandfather01", 0, true);
	PlaySoundAtEntity("memorystorage_sound", "01_memory_whisper_rand.snt", "memorystorage", 0, true);
	PlaySoundAtEntity("memoryfencing02_sound", "01_memory_whisper_rand.snt", "memoryfencing02", 0, true);
	PlaySoundAtEntity("memorymatch_sound", "01_memory_whisper_rand.snt", "memorymatch", 0, true);
	PlaySoundAtEntity("memoryfencing03_sound", "01_memory_whisper_rand.snt", "memoryfencing03", 0, true);
	PlaySoundAtEntity("memorycloset_sound", "01_memory_whisper_rand.snt", "memorycloset", 0, true);
	PlaySoundAtEntity("memoryviolin_sound", "01_memory_whisper_rand.snt", "memoryviolin", 0, true);
	PlaySoundAtEntity("memorygrandfather02_sound", "01_memory_whisper_rand.snt", "memorygrandfather02", 0, true);
	PlaySoundAtEntity("memoryfencing04_sound", "01_memory_whisper_rand.snt", "memoryfencing04", 0, true);
	PlaySoundAtEntity("memorytherapy_sound", "01_memory_whisper_rand.snt", "memorytherapy", 0, true);
	PlaySoundAtEntity("memoryfather_sound", "01_memory_whisper_rand.snt", "memoryfather", 0, true);
	PlaySoundAtEntity("memoryinsanity_sound", "01_memory_whisper_rand.snt", "memoryinsanity", 0, true);
	PlaySoundAtEntity("memorypaintings_sound", "01_memory_whisper_rand.snt", "memorypaintings", 0, true);
	PlaySoundAtEntity("memorypieceoforb_sound", "01_memory_whisper_rand.snt", "memorypieceoforb", 0, true);
}
void PlayRecord(string &in asEntity, int alState)
{
	if(alState==1)
	{
		if(asEntity == "phonograph_1") PlayMusic("01_maze_record_music01", false, 0.7f, 0.3f, 10, false);
		if(asEntity == "phonograph_2") PlayMusic("01_maze_record_music02", false, 0.7f, 0.3f, 10, false);
		if(asEntity == "phonograph_4") PlayMusic("01_maze_record_music03", false, 0.7f, 0.3f, 10, false);          	
	}
}
void MoveShelf(string &in asEntity, int alState)
{
	if (alState == 1)
	{
		AddLocalVarInt("LoweredLeversVar", 1);
		PlayGuiSound("lock_door.snt", 1.0f);
		if(GetLocalVarInt("LoweredLeversVar") == 1) SetMessage("Hints", "FoundFirstLever", 5.0f);
		if(asEntity == "lever_small01_min_1")
		{
			SetLampLit("torch_static_green_1", true, true);
			SetLeverStuckState("lever_small01_min_1", 1, false);
		}
        else if(asEntity == "lever_small01_min_2")
		{
			SetLampLit("torch_static_green_2", true, true);
			SetLeverStuckState("lever_small01_min_2", 1, false);
		}
        else if(asEntity == "lever_small01_min_3") SetLeverStuckState("lever_small01_min_3", 1, false);
        else if(asEntity == "lever_small01_min_4")
		{
			SetLampLit("torch_static_green_6", true, true);
			SetLeverStuckState("lever_small01_min_4", 1, false);
		}
        else if(asEntity == "lever_small01_min_5")
		{
			SetLampLit("torch_static_green_7", true, true);
			SetLeverStuckState("lever_small01_min_5", 1, false);
		}
        else if(asEntity == "lever_small01_min_6")
		{
			SetLeverStuckState("lever_small01_min_6", 1, false);
			SetLocalVarInt("IGreetYouVar", 1);
		}
        if(GetLocalVarInt("LoweredLeversVar") == 6)
        {
				CompleteQuest("LowerLevers", "LowerLevers");
				SetMessage("Hints", "LastLever", 5.5f);
				GiveSanityBoost();
                SetMoveObjectState("Shelf", 1.0f);
				SetLampLit("orb_pedestal_1", true, false);
                PlayMusic("01_puzzle_passage.ogg", false, 1.2, 0, 10, false);
                PlaySoundAtEntity("unlock_door", "unlock_door", "Player", 0, false);
				PlaySoundAtEntity("orb_loop", "01_maze_orb_loop.snt", "orb_6_of_7", 6, true);
				CreateParticleSystemAtEntity("flashorb", "ps_orb_light_fade.ps", "AreaOrbEffect", true);
        }                         
    }        
}
void AlwaysLocked(string &in asEntity)
{
	SetMessage("LevelDoors", "LockedForever", 0);
}
void PrisonLocked(string &in asEntity)
{
	if(GetLocalVarInt("PrisonDoorVar") == 0)
	{
		AddQuest("FindTheKey", "FindTheKey");
		SetLocalVarInt("PrisonDoorVar", 1);
		SetMessage("Hints", "PrisonDoorLocked", 0);
	}
	if(GetLocalVarInt("PrisonDoorVar") == 1) SetMessage("Hints", "PrisonDoorLocked", 0);
}
void InteractFire(string &in asEntity)
{
	TimerBurnFire("touch");
}
void TouchEmotionStone(string &in asEntity)
{
	if(asEntity == "emotion_stone_starter")
	{
		if(GetLocalVarInt("KeyVar") >= 1)
		{
			if(GetLocalVarInt("OpenedDoorsVar") == 5) CheckPoint ("CheckPoint1", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheMemories");
			else CheckPoint ("CheckPoint1", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheDoor");
		}
		else CheckPoint ("CheckPoint1", "PlayerStartArea_1", "Respawn", "DeathHints", "FindTheKey");
	}
	for(int x=2; x<=18; x++)
	{
		if(asEntity == "emotion_stone_" + x)
		{
			if(GetLocalVarInt("KeyVar") >= 1)
			{
				if(GetLocalVarInt("OpenedDoorsVar") == 5) CheckPoint ("CheckPoint" + x, "PlayerStartArea_" + x, "Respawn", "DeathHints", "FindTheMemories");
				else CheckPoint ("CheckPoint" + x, "PlayerStartArea_" + x, "Respawn", "DeathHints", "FindTheDoor");
			}
			else CheckPoint ("CheckPoint" + x, "PlayerStartArea_" + x, "Respawn", "DeathHints", "FindTheKey");
		}
	}
}

void PickOrbPiece(string &in asEntity)
{
	AddGlobalVarInt("PieceOfOrbVar", 1);
	if(GetGlobalVarInt("PieceOfOrbVar") == 4) GiveSanityBoostSmall();
}

//END PLAYER INTERACT FUNCTIONS//

//BEGIN MISC FUNCTIONS//

void OpenSecretDoor()
{
	SetPropActiveAndFade("shelf_secret_door_rotate_1", false, 2.4f); 	
	AddTimer("start", 2.0f, "TimerStartShelfSound");
	AddTimer("stopshelfsound", 6.0f, "TimerStopShelfSound");
}

//END MISC FUNCTIONS//