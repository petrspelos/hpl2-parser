void OnEnter()
{
	StopMusic(0.1f, 10);
	StopMusic(0.1f, 1);
	StopMusic(0.1f, 0);

	PreloadParticleSystem("ps_acid_web_dissolve.ps");
	PreloadParticleSystem("ps_dust_falling.ps");
	PreloadParticleSystem("ps_light_dust.ps");
	PreloadParticleSystem("ps_light_dust_large.ps");
	PreloadParticleSystem("ps_area_fog.ps");
	PreloadParticleSystem("ps_area_fog_large.ps");
	PreloadParticleSystem("ps_area_fog_small.ps");
	PreloadParticleSystem("ps_area_fog_sewer_long_warmup.ps");
	PreloadParticleSystem("ps_door_damage_wood.ps");
	PreloadParticleSystem("ps_break_wood.ps");
	
	PreloadSound("02_insanity_whisper_rand.snt");
	PreloadSound("door_large_castle_open.snt");
	
	PreloadSound("gameplay_acid_web.snt");
	PreloadSound("lock_door.snt");
	PreloadSound("locked_door.snt");
	PreloadSound("open_door.snt");
	PreloadSound("open_door_long.snt");
	PreloadSound("door_gate_bar_locked.snt");
	PreloadSound("door_mansion_close.snt");
	PreloadSound("door_mansion_open.snt");
	PreloadSound("close_door.snt");
	PreloadSound("close_door_long.snt");
	PreloadSound("unlock_door.snt");
	PreloadSound("react_breath.snt");
	PreloadSound("react_breath_slow.snt");
	PreloadSound("react_pant.snt");
	PreloadSound("react_scare.snt");
	PreloadSound("react_sigh.snt");
	PreloadSound("general_fire_burning.snt");
	PreloadSound("general_fire_burning_low.snt");
	PreloadSound("break_pottery.snt");
	PreloadSound("break_glass_bottle.snt");
	PreloadSound("break_glass_large.snt");
	PreloadSound("break_wood.snt");
	PreloadSound("break_wood_metal.snt");
	PreloadSound("guardian_activated.snt");
	PreloadSound("guardian_ontop.snt");
	PreloadSound("hit_wood.snt");
	PreloadSound("player_climb.snt");
	PreloadSound("player_crouch.snt");
	PreloadSound("player_jump.snt");
	PreloadSound("player_stand.snt");
	PreloadSound("roll_wood.snt");
	PreloadSound("slime_attack_normal_hit.snt");
	PreloadSound("slime_create.snt");
	PreloadSound("slime_loop.snt");
	PreloadSound("step_run_dirt.snt");
	PreloadSound("step_walk_dirt.snt");
	PreloadSound("step_sneak_dirt.snt");
	PreloadSound("step_run_fabric.snt");
	PreloadSound("step_walk_fabric.snt");
	PreloadSound("step_sneak_fabric.snt");
	PreloadSound("step_run_metal.snt");
	PreloadSound("step_walk_metal.snt");
	PreloadSound("step_sneak_metal.snt");
	PreloadSound("step_run_organic.snt");
	PreloadSound("step_walk_organic.snt");
	PreloadSound("step_sneak_organic.snt");
	PreloadSound("step_run_rock.snt");
	PreloadSound("step_walk_rock.snt");
	PreloadSound("step_sneak_rock.snt");
	PreloadSound("step_run_wood.snt");
	PreloadSound("step_run_wood_squeaky.snt");
	PreloadSound("step_walk_wood.snt");
	PreloadSound("step_walk_wood_squeaky.snt");
	PreloadSound("step_sneak_wood.snt");
	PreloadSound("step_sneak_wood_squeaky.snt");
	PreloadSound("flashback_flash.snt");
	PreloadSound("hurt_pant.snt");
	PreloadSound("sanity_damage.snt");
	PreloadSound("sanity_drain_high.snt");
	PreloadSound("sanity_drain_med.snt");
	PreloadSound("sanity_drain_low.snt");
	PreloadSound("sanity_heartbeat.snt");
	PreloadSound("sanity_pant.snt");
	PreloadSound("ui_add_quest.snt");
	PreloadSound("ui_lantern_off.snt");
	PreloadSound("ui_lantern_on.snt");
	PreloadSound("ui_sanity_gain.snt");
	PreloadSound("ui_terror_meter.snt");
	PreloadSound("enemy_hallucination_disappear.snt");
	
	PreloadSound("quest_added.snt");
	PreloadSound("quest_completed.snt");

	SetMapDisplayNameEntry("Tavern");
	
	FadeOut(0.0f);
	FadeGlobalSoundVolume(0.0f, 0.0f);
	SetPlayerActive(false);
	
	SetEnemySanityDecreaseActive("meli_1", false);
	SetEnemySanityDecreaseActive("chiu_1", false);
	SetEnemySanityDecreaseActive("cuccia_1", false);
	ClearEnemyPatrolNodes("meli_1");
	ClearEnemyPatrolNodes("chiu_1");
	ClearEnemyPatrolNodes("cuccia_1");
	AddEnemyPatrolNode("meli_1", "PathNodeArea_3", 10.001f, "");
	AddEnemyPatrolNode("chiu_1", "PathNodeArea_2", 10.001f, "");
	AddEnemyPatrolNode("cuccia_1", "PathNodeArea_1", 10.001f, "");
	SetEntityActive("meli_1", true);
	SetEntityActive("chiu_1", true);
	SetEntityActive("cuccia_1", true);
	
	if(GetLocalVarInt("Button1Pressed") == 1 && GetLocalVarInt("Button1PressedSucc") == 1) SetSwingDoorLocked("cellar_wood01_1", false, false);
	else SetEntityInteractionDisabled("button_simple_1", false);
	if(GetLocalVarInt("Button2Pressed") == 1 && GetLocalVarInt("Button2PressedSucc") == 1) SetSwingDoorLocked("cellar_wood01_2", false, false);
	else SetEntityInteractionDisabled("button_simple_2", false);
	if(GetLocalVarInt("Button3Pressed") == 1 && GetLocalVarInt("Button3PressedSucc") == 1) SetSwingDoorLocked("cellar_wood01_3", false, false);
	else SetEntityInteractionDisabled("button_simple_3", false);
	
	PlayMusic("00_tavern_theme", true, 0.9f, 4.0f, 10, false);
	
	AddTimer("globalsoundon", 1.5f, "TimerFadeGlobalSound");
	AddTimer("fadeinactiveplayer", 2.0f, "TimerFadeScreen");
	
	SetupLoadScreen("LoadingHints", "TavernToRoom", 0, "menu_loading_screen.jpg");
	
	SetPlayerMoveSpeedMul(1.0f);
	SetPlayerLookSpeedMul(1.0f);
	SetPlayerJumpDisabled(false);
	SetPlayerCrouchDisabled(false);
	SetPlayerHealth(100.0f);
	SetPlayerSanity(100.0f);
	ShowPlayerCrossHairIcons(true);
	SetLanternDisabled(false);
	SetInventoryDisabled(false);
	SetInDarknessEffectsActive(true);
	SetSanityDrainDisabled(false);
	
	CheckPoint ("OutOfMap", "PlayerStartArea_1", "CPOutOfMap", "DeathHints", "DoNotFall");
	
	if(GetGlobalVarInt("HealthAchievement") == 1)
		AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	else
		SetPlayerJumpForceMul(1.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	else
		SetPlayerRunSpeedMul(1.0f);
}

void OnLeave()
{
	RemoveTimer("addhealth");
	RemoveTimer("checkhealth");
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
}

void OnStart()
{
	if(ScriptDebugOn())
	{
		SetGlobalVarInt("FastSeekerAchievement", 1);
		SetGlobalVarInt("HealthAchievement", 1);
		SetGlobalVarInt("ItemsAchievement", 1);
		SetGlobalVarInt("NoDeathAchievement", 1);
		//SetGlobalVarInt("StatuesAchievement", 1);
		SetGlobalVarInt("WardrobeAchievement", 1);
		SetGlobalVarInt("EnemiesAchievement", 1);
		SetGlobalVarInt("PuzzleAchievement", 1);
		//SetGlobalVarInt("NoPuzzleAchievement", 1);
		SetGlobalVarInt("NoStatuesAchievement", 1);
		SetGlobalVarInt("SanityAchievement", 1);
		SetGlobalVarInt("SlimesAchievement", 1);
		SetGlobalVarInt("LightsAchievement", 1);
	}
	
	AddEntityCollideCallback("Player", "AreaStartCredits", "CollideAreaStartCredits", true, 1);
	AddEntityCollideCallback("Player", "AreaDiscoverMonsters", "CollideAreaDiscoverMonsters", true, 1);
	AddEntityCollideCallback("Player", "AreaLoadRedRoom", "CollideAreaLoadRoom", false, 1);
	AddEntityCollideCallback("Player", "AreaLoadBlueRoom", "CollideAreaLoadRoom", true, 1);
	AddEntityCollideCallback("Player", "AreaLoadGreenRoom", "CollideAreaLoadRoom", false, 1);
	AddEntityCollideCallback("cuccia_1", "AreaMonsters", "CollideAreaMonsters", false, 0);
	AddEntityCollideCallback("chiu_1", "AreaMonsters", "CollideAreaMonsters", false, 0);
	AddEntityCollideCallback("meli_1", "AreaMonsters", "CollideAreaMonsters", false, 0);
	AddEntityCollideCallback("cuccia_1", "AreaDoors", "CollideAreaDoors", false, 0);
	AddEntityCollideCallback("chiu_1", "AreaDoors", "CollideAreaDoors", false, 0);
	AddEntityCollideCallback("meli_1", "AreaDoors", "CollideAreaDoors", false, 0);
	
	SetPlayerLampOil(100.0f);

	SetMapDisplayNameEntry("Tavern");
	
	SetEntityActive("block_box_6", true);
	
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("HealthAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("StatuesAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("EnemiesAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("PuzzleAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("NoPuzzleAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("NoStatuesAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("SlimesAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("LightsAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	if(GetGlobalVarInt("ShooterAchievement") == 1)
		AddLocalVarInt("AchievementsCount", 1);
	
	if(HasItem("lantern_1") == false) GiveItemFromFile("lantern_1", "lantern.ent");
}

void TimerHealthAchievement(string &in asTimer)
{
	if(asTimer == "addhealth")
	{
		if(GetPlayerHealth() <= 98.0f)
		{
			AddPlayerHealth(2.0f);
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "checkhealth")
	{
		if(GetPlayerHealth() > 98.0f)
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "pausehealth")
	{
		RemoveTimer("addhealth");
		RemoveTimer("checkhealth");
	}
}

void CPOutOfMap(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	PlayMusic("00_tavern_theme", true, 0.9f, 4.0f, 10, false);
	
	SetEnemySanityDecreaseActive("meli_1", false);
	SetEnemySanityDecreaseActive("chiu_1", false);
	SetEnemySanityDecreaseActive("cuccia_1", false);
	ClearEnemyPatrolNodes("meli_1");
	ClearEnemyPatrolNodes("chiu_1");
	ClearEnemyPatrolNodes("cuccia_1");
	AddEnemyPatrolNode("meli_1", "PathNodeArea_3", 10.001f, "");
	AddEnemyPatrolNode("chiu_1", "PathNodeArea_2", 10.001f, "");
	AddEnemyPatrolNode("cuccia_1", "PathNodeArea_1", 10.001f, "");
	SetEntityActive("meli_1", true);
	SetEntityActive("chiu_1", true);
	SetEntityActive("cuccia_1", true);
}

void TimerFadeGlobalSound(string &in asTimer)
{
	if(asTimer == "globalsoundon")	FadeGlobalSoundVolume(1.0f, 4.0f);
	if(asTimer == "globalsoundonquick")	FadeGlobalSoundVolume(1.0f, 0.5f);
	if(asTimer == "globalsoundoff") FadeGlobalSoundVolume(0.0f, 4.0f);
	if(asTimer == "globalsoundoffquick") FadeGlobalSoundVolume(0.0f, 0.5f);
}

void PressButton(string &in asEntity)
{
	if(asEntity == "button_simple_1")
	{
		SetLocalVarInt("Button1Pressed", 1);
		FadeLightTo("PointLight_1", 0.0f ,0.0f ,0.0f ,0.0f , -1, 2);
		
		if(GetGlobalVarInt("StrangeNoteCount") >= 9)
		{
			SetLocalVarInt("Button1PressedSucc", 1);
			PlayGuiSound("quest_completed", 0.7f);
		
			SetMessage("Monsters", "AllStrangeSuccess", 12.0f);
		
			SetEntityInteractionDisabled("button_simple_2", true);
			SetEntityInteractionDisabled("button_simple_3", true);
			
			ClearEnemyPatrolNodes("cuccia_1");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_7", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_8", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_9", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_10", 3.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_11", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_12", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_13", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_14", 3.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_13", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_12", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_11", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_10", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_9", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_8", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_7", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_6", 0.001f, "");
			AddEnemyPatrolNode("cuccia_1", "PathNodeArea_1", 10.001f, "");
		}
		else
		{
			PlayGuiSound("quest_added", 0.7f);
			SetMessage("Monsters", "AllStrangeFail", 12.0f);
		}
	}
	if(asEntity == "button_simple_2")
	{
		SetLocalVarInt("Button2Pressed", 1);
		FadeLightTo("PointLight_2", 0.0f ,0.0f ,0.0f ,0.0f , -1, 2);
		
		if(GetGlobalVarInt("MemoryNoteCount") >= 9)
		{
			SetLocalVarInt("Button2PressedSucc", 1);
			PlayGuiSound("quest_completed", 0.7f);
			
			SetMessage("Monsters", "AllMemoriesSuccess", 12.0f);
			
			SetEntityInteractionDisabled("button_simple_1", true);
			SetEntityInteractionDisabled("button_simple_3", true);
		
			ClearEnemyPatrolNodes("chiu_1");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_5", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_6", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_7", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_8", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_9", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_10", 3.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_15", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_16", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_17", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_18", 3.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_17", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_16", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_15", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_10", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_9", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_8", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_7", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_6", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_5", 0.001f, "");
			AddEnemyPatrolNode("chiu_1", "PathNodeArea_2", 10.001f, "");
		}
		else
		{
			PlayGuiSound("quest_added", 0.7f);
			SetMessage("Monsters", "AllMemoriesFail", 12.0f);
		}
	}
	if(asEntity == "button_simple_3")
	{
		SetLocalVarInt("Button3Pressed", 1);
		FadeLightTo("PointLight_3", 0.0f ,0.0f ,0.0f ,0.0f , -1, 2);
		
		if(GetLocalVarInt("AchievementsCount") >= 5)
		{
			SetLocalVarInt("Button3PressedSucc", 1);
		
			SetMessage("Monsters", "AchievementsSuccess", 12.0f);
			
			SetEntityInteractionDisabled("button_simple_1", true);
			SetEntityInteractionDisabled("button_simple_2", true);
			
			PlayGuiSound("quest_completed", 0.7f);
		
			ClearEnemyPatrolNodes("meli_1");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_4", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_5", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_6", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_7", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_8", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_9", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_10", 3.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_19", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_20", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_21", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_22", 3.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_21", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_20", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_19", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_10", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_9", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_8", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_7", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_6", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_5", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_4", 0.001f, "");
			AddEnemyPatrolNode("meli_1", "PathNodeArea_3", 10.001f, "");
		}
		else 
		{
			PlayGuiSound("quest_added", 0.7f);
			SetMessage("Monsters", "AchievementsFail", 12.0f);
		}
	}
}

void CollideAreaStartCredits(string &in asParent, string &in asChild, int alState)
{
	PlayGuiSound("door_large_castle_open", 0.7f);
	SetPlayerActive(false);
	StartPlayerLookAt("AreaLookAtCredits", 2.0f, 2.0f, "");
	FadeGlobalSoundVolume(0.0f, 4.0f);
	//FadeOut(4.2f);
	FadePlayerFOVMulTo(0.5, 0.25);		
	StartEffectFlash(3,5,3);
	AddTimer("credits", 5.0f, "TimerStartCredits");
}

void TimerStartCredits(string &in asTimer)
{
	StartCredits("00_end_credits", false, "EndCredits", "Default", 3);
}

void CollideAreaDiscoverMonsters(string &in asParent, string &in asChild, int alState)
{
	AddTimer("resetspeedmul", 10.0f, "TimerStopLook");
	SetPlayerMoveSpeedMul(0.1f);
	SetPlayerRunSpeedMul(0.1f);
	SetPlayerLookSpeedMul(0.1f);
	SetPlayerJumpDisabled(true);
	SetPlayerCrouchDisabled(true);
	SetMessage("Monsters", "Welcome", 30.0f);
	StartPlayerLookAt("chiu_1", 1.0f, 1.0f, "");
}

void CollideAreaLoadRoom(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "AreaLoadGreenRoom") ChangeMap("00_green_room.map", "PlayerStartArea_1", "", "");
	if(asChild == "AreaLoadBlueRoom") ChangeMap("00_blue_room.map", "PlayerStartArea_1", "", "");
	if(asChild == "AreaLoadRedRoom") ChangeMap("00_red_room.map", "PlayerStartArea_1", "", "");
}

void CollideAreaMonsters(string &in asParent, string &in asChild, int alState)
{
	if(alState == -1)
	{
		//SetEntityActive("block_box_4", false);
	}
	else if(alState == 1)
	{
		//SetEntityActive("block_box_4", true);
		if(GetLocalVarInt("Button1Pressed") == 0) SetEntityInteractionDisabled("button_simple_1", false);
		if(GetLocalVarInt("Button2Pressed") == 0) SetEntityInteractionDisabled("button_simple_2", false);
		if(GetLocalVarInt("Button3Pressed") == 0) SetEntityInteractionDisabled("button_simple_3", false);
		
		ClearEnemyPatrolNodes("meli_1");
		ClearEnemyPatrolNodes("chiu_1");
		ClearEnemyPatrolNodes("cuccia_1");
		AddEnemyPatrolNode("meli_1", "PathNodeArea_3", 10.001f, "");
		AddEnemyPatrolNode("chiu_1", "PathNodeArea_2", 10.001f, "");
		AddEnemyPatrolNode("cuccia_1", "PathNodeArea_1", 10.001f, "");
	}
}

void CollideAreaDoors(string &in asParent, string &in asChild, int alState)
{
	if(alState == -1)
	{
		SetMessage("Monsters", "DoorOpened", 5.0f);
	}
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
	SetSwingDoorLocked(asEntity, false, false);
}

void TimerFadeScreen(string &in asTimer)
{
	if(asTimer == "fadein")
	{
		FadeIn(2.0f);
	}
	if(asTimer == "fadeout")
	{
		FadeOut(2.0f);
	}
	if(asTimer == "fadeinactiveplayer")
	{
		FadeIn(2.0f);
		SetPlayerActive(true);
	}
	if(asTimer == "fadeoutactiveplayer")
	{
		FadeOut(2.0f);
		SetPlayerActive(true);	
	}	
}

void TimerStopLook(string &in asTimer)
{
	if(asTimer == "resetspeedmul")
	{
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerLookSpeedMul(1.0f);
		SetPlayerJumpDisabled(false);
		SetPlayerCrouchDisabled(false);
		if(GetLocalVarInt("Button1Pressed") == 0) SetEntityInteractionDisabled("button_simple_1", false);
		if(GetLocalVarInt("Button2Pressed") == 0) SetEntityInteractionDisabled("button_simple_2", false);
		if(GetLocalVarInt("Button3Pressed") == 0) SetEntityInteractionDisabled("button_simple_3", false);
		
		SetEntityActive("block_box_6", false);
		if(GetGlobalVarInt("FastSeekerAchievement") == 1)
			SetPlayerRunSpeedMul(1.175f);
		if(GetGlobalVarInt("WardrobeAchievement") == 1)
			SetPlayerJumpForceMul(1.175f);
	}
	if(asTimer == "activeplayer")
	{
		SetPlayerActive(true);
	}
	StopPlayerLookAt();
}

void TimerPlayerReactions(string &in asTimer)
{
	if(asTimer == "scareeffect")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "breatheffect")
	{
		PlayGuiSound("react_breath", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "sigheffect")
	{
		PlayGuiSound("react_sigh", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "panteffect")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "scare")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, true);
	}
	else if(asTimer == "breath")
	{
		PlayGuiSound("react_breath", 0.5f);
		GiveSanityDamage(4.0f, false);
	}
	else if(asTimer == "sigh")
	{
		PlayGuiSound("react_sigh", 0.5f);
		GiveSanityDamage(2.0f, false);
	}
	else if(asTimer == "pant")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, true);
	}
}