void OnEnter()
{
	if(ScriptDebugOn())
	{
		SetGlobalVarInt("FastSeekerAchievement", 1);
		SetGlobalVarInt("HealthAchievement", 1);
		SetGlobalVarInt("ItemsAchievement", 1);
		SetGlobalVarInt("NoDeathAchievement", 1);
		//SetGlobalVarInt("StatuesAchievement", 1);
		SetGlobalVarInt("WardrobeAchievement", 1);
		SetGlobalVarInt("EnemiesAchievement", 1);
		SetGlobalVarInt("PuzzleAchievement", 1);
		//SetGlobalVarInt("NoPuzzleAchievement", 1);
		SetGlobalVarInt("NoStatuesAchievement", 1);
		SetGlobalVarInt("SanityAchievement", 1);
		SetGlobalVarInt("SlimesAchievement", 1);
		SetGlobalVarInt("LightsAchievement", 1);
	}
	
	PreloadParticleSystem("ps_acid_web_dissolve.ps");
	PreloadParticleSystem("ps_dust_falling.ps");
	PreloadParticleSystem("ps_light_dust.ps");
	PreloadParticleSystem("ps_light_dust_large.ps");
	PreloadParticleSystem("ps_area_fog.ps");
	PreloadParticleSystem("ps_area_fog_large.ps");
	PreloadParticleSystem("ps_area_fog_small.ps");
	PreloadParticleSystem("ps_area_fog_sewer_long_warmup.ps");
	PreloadParticleSystem("ps_door_damage_wood.ps");
	PreloadParticleSystem("ps_break_wood.ps");

	PreloadParticleSystem("ps_orb_light.ps");
	PreloadParticleSystem("ps_orb_room_portal_open.ps");
	PreloadParticleSystem("ps_orb_room_portal_start.ps");
	PreloadParticleSystem("ps_orb_room_alex_die.ps");
	PreloadParticleSystem("ps_orb_stream_gather.ps");
	PreloadParticleSystem("ps_orb_absorb.ps");
	PreloadParticleSystem("ps_dust_whirl.ps");
	PreloadParticleSystem("07_ps_dust_paper_blow_loop.ps");
	
	PreloadSound("03_in_a_bottle.snt");
	PreloadSound("general_thunder.snt");
	PreloadSound("impact_organic_med.snt");
	PreloadSound("scare_wall_stomp");
	PreloadSound("guardian_activated.snt");
	PreloadSound("07_noise_3.snt");
	PreloadSound("07_noise_2.snt");
	PreloadSound("07_noise_1.snt");
	PreloadSound("04_breath.snt");
	PreloadSound("07_enemy_hallucination_disappear.snt");
	PreloadSound("07_strange_thankyou.snt");
	PreloadSound("07_strange_soulshallsuffer.snt");
	PreloadSound("07_strange_youwinthistime.snt");
	PreloadSound("07_strange_death.snt");
	PreloadSound("07_static_rock_move.snt");
	PreloadSound("07_orb.snt");
	PreloadSound("07_orb_spark.snt");
	PreloadSound("07_amb_1.snt");
	PreloadSound("07_amb_2.snt");
	PreloadSound("07_body_destroy.snt");
	
	PreloadSound("gameplay_acid_web.snt");
	PreloadSound("lock_door.snt");
	PreloadSound("locked_door.snt");
	PreloadSound("open_door.snt");
	PreloadSound("open_door_long.snt");
	PreloadSound("door_gate_bar_locked.snt");
	PreloadSound("door_mansion_close.snt");
	PreloadSound("door_mansion_open.snt");
	PreloadSound("close_door.snt");
	PreloadSound("close_door_long.snt");
	PreloadSound("unlock_door.snt");
	PreloadSound("react_breath.snt");
	PreloadSound("react_breath_slow.snt");
	PreloadSound("react_pant.snt");
	PreloadSound("react_scare.snt");
	PreloadSound("react_sigh.snt");
	PreloadSound("general_fire_burning.snt");
	PreloadSound("general_fire_burning_low.snt");
	PreloadSound("break_pottery.snt");
	PreloadSound("break_glass_bottle.snt");
	PreloadSound("break_glass_large.snt");
	PreloadSound("break_wood.snt");
	PreloadSound("break_wood_metal.snt");
	PreloadSound("guardian_activated.snt");
	PreloadSound("guardian_ontop.snt");
	PreloadSound("hit_wood.snt");
	PreloadSound("player_climb.snt");
	PreloadSound("player_crouch.snt");
	PreloadSound("player_jump.snt");
	PreloadSound("player_stand.snt");
	PreloadSound("roll_wood.snt");
	PreloadSound("slime_attack_normal_hit.snt");
	PreloadSound("slime_create.snt");
	PreloadSound("slime_loop.snt");
	PreloadSound("step_run_dirt.snt");
	PreloadSound("step_walk_dirt.snt");
	PreloadSound("step_sneak_dirt.snt");
	PreloadSound("step_run_fabric.snt");
	PreloadSound("step_walk_fabric.snt");
	PreloadSound("step_sneak_fabric.snt");
	PreloadSound("step_run_metal.snt");
	PreloadSound("step_walk_metal.snt");
	PreloadSound("step_sneak_metal.snt");
	PreloadSound("step_run_organic.snt");
	PreloadSound("step_walk_organic.snt");
	PreloadSound("step_sneak_organic.snt");
	PreloadSound("step_run_rock.snt");
	PreloadSound("step_walk_rock.snt");
	PreloadSound("step_sneak_rock.snt");
	PreloadSound("step_run_wood.snt");
	PreloadSound("step_run_wood_squeaky.snt");
	PreloadSound("step_walk_wood.snt");
	PreloadSound("step_walk_wood_squeaky.snt");
	PreloadSound("step_sneak_wood.snt");
	PreloadSound("step_sneak_wood_squeaky.snt");
	PreloadSound("flashback_flash.snt");
	PreloadSound("hurt_pant.snt");
	PreloadSound("sanity_damage.snt");
	PreloadSound("sanity_drain_high.snt");
	PreloadSound("sanity_drain_med.snt");
	PreloadSound("sanity_drain_low.snt");
	PreloadSound("sanity_heartbeat.snt");
	PreloadSound("sanity_pant.snt");
	PreloadSound("ui_add_quest.snt");
	PreloadSound("ui_lantern_off.snt");
	PreloadSound("ui_lantern_on.snt");
	PreloadSound("ui_sanity_gain.snt");
	PreloadSound("ui_terror_meter.snt");
	PreloadSound("enemy_hallucination_disappear.snt");

	SetMapDisplayNameEntry("Church");
	
	if(GetGlobalVarInt("PortalBattleFail") == 1)
	{
		DestroyParticleSystem("portal_start");
		DestroyParticleSystem("portal_open");
		DestroyParticleSystem("ParticleSystem_13");
		SetPropActiveAndFade("alexander_1", true, 0.1f);
		StopSound("orb_room_rod_1_sound", 0.1f);
		
		PlayMusic("24_event_vision04", true, 1.0f, 2.0f, 0, false);
		
		AddTimer("09", 4.0f, "TimerAlexTalk");
	}
	if(GetGlobalVarInt("PortalBattleSuccess") == 1)
	{
		if(GetPlayerHealth() <= 50.0f) SetPlayerHealth(55.0f);
		if(GetPlayerSanity() <= 50.0f) SetPlayerSanity(55.0f);
	
		DestroyParticleSystem("portal_start");
		DestroyParticleSystem("portal_open");
		DestroyParticleSystem("ParticleSystem_13");
		SetPropActiveAndFade("alexander_1", true, 0.1f);
		StopSound("orb_room_rod_1_sound", 0.1f);
		
		SetPropActiveAndFade("orb_6_of_7", false, 0.1f);
		StopSound("Sound_10", 0.1f);
		DestroyParticleSystem("ParticleSystem_9");
		for(int w=90; w<=98; w++) SetLightVisible("PointLight_" + w, false);
		
		SetLightVisible("PointLight_7", false);
		
		StopMusic(0.1f, 0);
		StopMusic(0.1f, 10);
		
		RemoveTimer("thundersound_1");
		RemoveTimer("thundersound_2");
		RemoveTimer("thundersound_3");
		
		AddTimer("part1", 6.0f, "TimerPortalBattleSuccess");
		
		SetupLoadScreen("LoadingHints", "27To28", 0, "game_loading_brennenburg.jpg");	
	}
	
	if(GetGlobalVarInt("HealthAchievement") == 1)
		AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("EnemiesAchievement") == 1)
	{
		SetEnemySanityDecreaseActive("grunt_prison_1", false);
		SetEnemySanityDecreaseActive("grunt_chamb_1", false);
		SetEnemySanityDecreaseActive("grunt_chamb_2", false);
		SetEnemySanityDecreaseActive("grunt_chamb_3", false);
		SetEnemySanityDecreaseActive("grunt_chamb_4", false);
		SetEnemySanityDecreaseActive("brute_1", false);
		SetEnemySanityDecreaseActive("brute_prison_1", false);
		SetEnemySanityDecreaseActive("brute_chamb_1", false);
		SetEnemySanityDecreaseActive("brute_chamb_2", false);
		SetEnemySanityDecreaseActive("brute_chamb_3", false);
		SetEnemySanityDecreaseActive("brute_chamb_4", false);
		SetEnemySanityDecreaseActive("suitor_prison_1", false);
		SetEnemySanityDecreaseActive("suitor_chamb_1", false);
		SetEnemySanityDecreaseActive("suitor_chamb_2", false);
		SetEnemySanityDecreaseActive("suitor_chamb_3", false);
	}
}

void OnLeave()
{
	RemoveTimer("addhealth");
	RemoveTimer("checkhealth");
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
}

void OnStart()
{
	CompleteQuest("MemoriesMission", "MemoriesMission");
	CompleteQuest("ChurchMission", "ChurchMission");

	AddEntityCollideCallback("castle_4", "AreaJumpDoor", "CollideAreaJumpDoor", true, 1);
	AddEntityCollideCallback("Player", "AreaShrine", "CollideAreaShrine", true, 1);
	AddEntityCollideCallback("brute_1", "AreaEnemyPath_1", "CollideAreaEnemyPath", true, 1);
	AddEntityCollideCallback("brute_1", "AreaEnemyPath_2", "CollideAreaEnemyPath", true, 1);
	AddEntityCollideCallback("Player", "AreaChangeEnemyPath_1", "CollideAreaChangeEnemyPath", true, 1);
	AddEntityCollideCallback("Player", "AreaAlexTalk_1", "CollideAreaAlexTalk", true, 1);
	AddEntityCollideCallback("Player", "AreaAlexTalk_2", "CollideAreaAlexTalk", true, 1);
	AddEntityCollideCallback("Player", "AreaEnterRoom_1", "CollideAreaEnterRoom", true, 1);
	AddEntityCollideCallback("Player", "AreaEnterRoom_2", "CollideAreaEnterRoom", true, 1);
	AddEntityCollideCallback("Player", "AreaOpenDoor_1", "CollideAreaOpenDoor", true, 1);
	AddEntityCollideCallback("Player", "AreaOpenDoor_2", "CollideAreaOpenDoor", true, 1);
	AddEntityCollideCallback("Player", "AreaRockCorridor", "CollideAreaRockCorridor", true, 1);
	AddEntityCollideCallback("Player", "AreaLookAtOrbFake", "CollideAreaLookAtOrbFake", true, 1);
	AddEntityCollideCallback("Player", "AreaEncounterAlex", "CollideAreaEncounterAlex", true, 1);
	AddEntityCollideCallback("Player", "AreaInsanePaintsRoom", "CollideAreaInsanePaintsRoom", true, 1);
	AddEntityCollideCallback("Player", "AreaActiveWeb", "CollideAreaActiveWeb", true, 1);
	
	AddUseItemCallback("NeedleDoor", "hollow_needle_1", "castle_3", "UsedKeyOnDoor", true);
	AddUseItemCallback("NeedleDoor", "hollow_needle_1", "castle_4", "UsedKeyOnDoor", true);
	
	SetEntityPlayerInteractCallback("note_generic_1", "PickedUpNote", true);

	SetMapDisplayNameEntry("Church");
	
	SetupLoadScreen("LoadingHints", "25To26", 0, "game_loading_alexander.jpg");	
	
	AddTimer("breathsound_start", 6.0f, "TimerRandBreathSound");
	
	for(int i=1; i<=16; i++)
	{
		AddEntityCollideCallback("Player", "vaseghost_" + i, "CollideVaseGhost", true, 1);
	}
	
	PlaySoundAtEntity("noisesound_1", "07_noise_1.snt", "AreaNoiseSound_1", 0, true);
	PlayMusic("06_cave_theme.ogg", true, 1.0f, 1.0f, 0, false);
	
	SetLightVisible("PointLight_122", false);
	SetLightVisible("PointLight_123", false);
	
	CheckPoint ("outofmap", "PlayerStartArea_3", "CPOutOfMap", "DeathHints", "DoNotFall");
	
	if(GetGlobalVarInt("SlimesAchievement") == 1)
	{
		for(int d=1; d<=18; d++)
			SetEntityActive("SlimeDamageArea_" + d, false);
		
		if(GetGlobalVarInt("NoStatuesAchievement") == 0)
		{
			for(int e=1; e<=13; e++)
				SetEntityActive("SlimeDamageArea_" + e, true);
		}
	}
	
	if(ScriptDebugOn())
	{
		//if(HasItem("lantern_1") == false) GiveItemFromFile("lantern_1", "lantern.ent");
		if(HasItem("hollow_needle_1") == false) GiveItemFromFile("hollow_needle_1", "hollow_needle.ent");
		if(HasItem("ceremony_knife_1") == false) GiveItemFromFile("ceremony_knife_1", "ceremony_knife.ent");
		//SetGlobalVarInt("PianoQuestFailed", 1);
		//SetGlobalVarInt("LabQuestFailed", 1);
		//SetGlobalVarInt("LibraryQuestFailed", 1);
		//SetGlobalVarInt("WineQuestFailed", 1);
		//SetGlobalVarInt("StorageQuestFailed", 1);
	}
	
	if(GetGlobalVarInt("PianoQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	if(GetGlobalVarInt("CellQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	if(GetGlobalVarInt("LabQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	if(GetGlobalVarInt("LibraryQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	if(GetGlobalVarInt("WineQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	if(GetGlobalVarInt("StorageQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	if(GetGlobalVarInt("FatherQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	if(GetGlobalVarInt("MotherQuestFailed") == 0) AddGlobalVarInt("ClearedQuests", 1);
	
	if(GetGlobalVarInt("ClearedQuests") >= 5)
		AddQuest("FightGuardianMission", "FightGuardianMission");
	else
		AddQuest("FindGrandpaMission", "FindGrandpaMission");
}

void TimerHealthAchievement(string &in asTimer)
{
	if(asTimer == "addhealth")
	{
		if(GetPlayerHealth() <= 98.0f)
		{
			AddPlayerHealth(2.0f);
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "checkhealth")
	{
		if(GetPlayerHealth() > 98.0f)
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "pausehealth")
	{
		RemoveTimer("addhealth");
		RemoveTimer("checkhealth");
	}
}

void CollideAreaActiveWeb(string &in asParent, string &in asChild, int alState)
{
	SetPropActiveAndFade("web_3", true, 1.5f);
	SetPropActiveAndFade("web_4", true, 1.5f);
	PlayGuiSound("impact_organic_med.snt", 1.0f);
}

void PickedUpNote(string &in asItem)
{
	PlayGuiSound("03_in_a_bottle.snt", 0.9f);
	//AddGlobalVarInt("ClearedQuests", 1);
}

void TimerPortalBattleSuccess(string &in asTimer)
{
	if(asTimer == "part1")
	{
		PlaySoundAtEntity("youwin", "07_strange_youwinthistime.snt", "alexander_1", 0, false);
		SetMessage("Strange", "YouWinThisTime", 4.0f);
		StartPlayerLookAt("alexander_1", 2.0f, 2.0f, "");
		AddTimer("resetspeedmul", 4.0f, "TimerStopLook");
		
		AddTimer("part2", 5.0f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part2")
	{
		SetMessage("Jack", "65", 3.0f);
		
		AddTimer("part3", 3.5f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part3")
	{
		SetMessage("Strange", "18", 15.0f);
		
		AddTimer("part4", 15.5f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part4")
	{
		SetMessage("Jack", "66", 6.0f);
		
		PlayMusic("29_amb_end_daniel", false, 1.0f, 1.0f, 10, false);
		
		AddTimer("part5", 6.5f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part5")
	{
		SetMessage("Strange", "19", 11.5f);
		
		AddTimer("part6", 13.0f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part6")
	{
		FadeLightTo("PointLight_107", 1, 0, 0, 1, -1, 2.0f);
	
		SetNPCFollowPlayer("alexander_1", false);
	
		FadePlayerFOVMulTo(0.8f, 3.5f);
		StartPlayerLookAt("alexander_1", 2.0f, 2.0f, "");
		SetPlayerMoveSpeedMul(0.2f);
		SetPlayerRunSpeedMul(0.2f);
		SetPlayerLookSpeedMul(0.2f);
		AddTimer("resetspeedmul", 3.5f, "TimerStopLook");
		
		PlayPropAnimation("alexander_1", "Death", 0.3, false, "");
		
		PlaySoundAtEntity("alexdeath", "07_strange_death.snt", "alexander_1", 0, false);
		
		PlayMusic("29_event_end", false, 1.0f, 0, 10, false);
		
		SetEntityActive("AreaActiveWeb", false);
		
		AddTimer("part7", 3.5f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part7")
	{
		FadeLightTo("PointLight_107", 0, 0, 0, 1, -1, 2.0f);
	
		FadePlayerFOVMulTo(1.0f, 3.5f);
	
		PlaySoundAtEntity("screamguard", "29_amb_guard3.ogg", "Player", 0.0f, false);
		SetPropActiveAndFade("alexander_1", false, 2.0f);
		CreateParticleSystemAtEntity("AlexExplode","ps_orb_room_alex_die.ps", "AreaPortal", false);
		PlaySoundAtEntity("killalex", "25_guardian_slime_appear.snt", "AreaPortal", 0.0f, false);
		
		CreateParticleSystemAtEntity("SlimeExplode","ps_acid_web_dissolve.ps", "slime_alex1_pile_709", false);
		CreateParticleSystemAtEntity("SlimeExplode","ps_acid_web_dissolve.ps", "slime_alex1_pile_707", false);
		CreateParticleSystemAtEntity("SlimeExplode","ps_acid_web_dissolve.ps", "slime_alex1_pile_710", false);
		CreateParticleSystemAtEntity("SlimeExplode","ps_acid_web_dissolve.ps", "slime_alex1_pile_713", false);
		CreateParticleSystemAtEntity("SlimeExplode","ps_acid_web_dissolve.ps", "slime_alex1_anim_wall_2", false);
		
		StartScreenShake(0.22, 3, 1, 3);
		
		GiveSanityDamage(0.01f, true);
		
		StopSound("Sound_2", 2.0f);
		StopSound("Sound_3", 2.0f);
		StopSound("Sound_11", 2.0f);
		StopSound("Sound_21", 2.0f);
		StopSound("Sound_27", 2.0f);
		StopSound("Sound_29", 2.0f);
		
		SetPropHealth("web_1", 0);
		SetPropHealth("web_3", 0);
		SetPropHealth("web_4", 0);
		SetPropActiveAndFade("slime_alex1_1", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_2", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_3", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_711", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_712", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_713", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_714", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_706", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_724", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_704", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_705", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_707", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_708", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_709", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_710", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_pile_723", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_6way_6", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_6way_7", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_6way_8", false, 2.0f);
		SetPropActiveAndFade("slime_alex1_anim_wall_2", false, 2.0f);
		
		AddTimer("part8", 13.0f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part8")
	{
		SetMessage("Jack", "67", 5.0f);
	
		PlayMusic("07_church_theme", true, 1.0f, 2, 10, false);
		
		AddTimer("part9", 5.0f, "TimerPortalBattleSuccess");
	}
	if(asTimer == "part9")
	{
		SetMessage("Jack", "68", 5.0f);
		
		SetEntityActive("AreaTouchFrontDoor", true);
	}
}

void TouchFrontDoor(string &in asEntity)
{
	PlayGuiSound("29_exit_door", 1.0f);
	
	ChangeMap("08_wood_east_redux.map", "PlayerStartArea_1", "", "close_gate_low");
}

void CollideLetalSlime(string &in asArea)
{
	GivePlayerDamage(100.0f, "BloodSplat", true, true);
	PlayGuiSound("07_enemy_hallucination_disappear", 0.7f);
	SetEntityActive(asArea, false);
	if(asArea == "SlimeDamageArea_1") FadeInSLight("StatueLight_1");
	if(asArea == "SlimeDamageArea_2") FadeInSLight("StatueLight_2");
	if(asArea == "SlimeDamageArea_3") FadeInSLight("StatueLight_3");
	if(asArea == "SlimeDamageArea_4") FadeInSLight("StatueLight_4");
	if(asArea == "SlimeDamageArea_5") FadeInSLight("StatueLight_5");
	if(asArea == "SlimeDamageArea_6") FadeInSLight("StatueLight_6");
	if(asArea == "SlimeDamageArea_7") FadeInSLight("StatueLight_7");
	if(asArea == "SlimeDamageArea_8") FadeInSLight("StatueLight_8");
	if(asArea == "SlimeDamageArea_9") FadeInSLight("StatueLight_9");
	if(asArea == "SlimeDamageArea_10") FadeInSLight("StatueLight_10");
	if(asArea == "SlimeDamageArea_11") FadeInSLight("StatueLight_11");
	if(asArea == "SlimeDamageArea_12") FadeInSLight("StatueLight_12");
	if(asArea == "SlimeDamageArea_13") FadeInSLight("StatueLight_13");
}

void FadeInSLight(string &in asLight)
{
	FadeLightTo(asLight, 0.9f, 0.3f, 0.3f, 0.9f, -1, 2.0f);
	AddTimer(asLight, 2.0f, "TimerFadeOutSLight");
}

void PullLever(string &in asEntityName, int alState)
{
	if(alState == 1)
	{
		StartScreenShake(0.006f, 0.5f, 2.0f,2.0f);
		FadeLightTo("PointLight_46", 0, 0, 0, 0, -1, 2.0f);
		SetPlayerActive(false);
		GiveSanityBoostSmall();
		if(GetGlobalVarInt("ShooterAchievement") == 1)
		{
			AddPlayerHealth(25.0f);
			AddPlayerSanity(25.0f);
		}
		AddTimer("part1", 1.0f, "TimerLookInsanePaint");
		
		DestroyParticleSystem("orb_light_false");
		StopSound("orb_sound_false", 2.0f);
		SetEntityActive("AreaTouchOrb", false);
		SetEntityActive("orb_6_of_8", false);
		SetEntityActive("orb_pedestal_1", false);
		SetLampLit("orb_pedestal_1", false, false);
		
		SetSwingDoorClosed("castle_arched01_2", true, false);
		SetSwingDoorLocked("castle_arched01_2", true, false);
		
		SetEntityActive("shelf_secret_door_1", false);
		SetEntityActive("shelf_secret_door_3", true);
		SetEntityActive("castlebase_secret_door_1", false);
		
		PlayMusic("27_puzzle_passage.ogg", false, 1.0f, 1.0f, 10, false);
		PlayMusic("06_cave_theme.ogg", true, 1.0f, 1.0f, 0, false);
		
		for(int k=1; k<=13; k++) RemoveTimer("StatueLight_" + k);
	}
}

void TimerLookInsanePaint(string &in asTimer)
{
	if(asTimer == "part1")
	{
		AddTimer("part2", 0.5f, "TimerLookInsanePaint");
		AddTimer("scareeffect", 0.5f, "TimerPlayerReactions");
		FadeLightTo("PointLight_45", 0.9f, 0.3f, 0.3f, 0.9f, -1, 2.0f);
		PlaySoundAtEntity("soulshallsuffer", "07_strange_soulshallsuffer.snt", "painting_portrait_insane_6", 0, false);
		SetMessage("Strange", "SoulShallSuffer", 5.0f);
	}
	if(asTimer == "part2")
	{
		AddTimer("breatheffect", 1.5f, "TimerPlayerReactions");
		AddTimer("part3", 1.5f, "TimerLookInsanePaint");
		StartPlayerLookAt("painting_portrait_insane_6", 4.0f, 4.0f, "");
	}
	if(asTimer == "part3")
	{
		AddTimer("part4", 3.0f, "TimerLookInsanePaint");
		AddTimer("activeplayer", 3.0f, "TimerStopLook");
		PlayGuiSound("ui_zoom.ogg", 0.5f);
		FadeGlobalSoundVolume(0, 3.0f);
		FadeOut(0.0f);
	}
	if(asTimer == "part4")
	{
		TeleportPlayer("PlayerStartArea_3");
		FadeIn(3.0f);
		StartScreenShake(0.08f, 3.0f, 0.05f, 0.5f);
		PlaySoundAtEntity("rock_move_player_sound", "07_static_rock_move.snt", "Player", 2.0f, true);
		PlaySoundAtEntity("howlback","25_guardian_ontop.snt","Player", 0, false);
		FadeLightTo("PointLight_47", 0.9f, 0.3f, 0.3f, 0.9f, -1, 3.0f);
		FadeGlobalSoundVolume(1.0f, 3.0f);
		SetInDarknessEffectsActive(true);
		
		for(int i=1; i<=35; i++)
		{
			SetPropActiveAndFade("slime_" + i, true, 3.0f);
		}
		
		PlaySoundAtEntity("slimesound_18", "slime_loop.snt", "slime_18", 0, true);
		PlaySoundAtEntity("slimesound_19", "slime_loop.snt", "slime_19", 0, true);
		PlaySoundAtEntity("slimesound_27", "slime_loop.snt", "slime_27", 0, true);
		PlaySoundAtEntity("slimesound_30", "slime_loop.snt", "slime_30", 0, true);
		PlaySoundAtEntity("slimesound_32", "slime_loop.snt", "slime_32", 0, true);
		PlaySoundAtEntity("slimesound_33", "slime_loop.snt", "slime_33", 0, true);
		
		if(GetGlobalVarInt("SlimesAchievement") == 0)
		{
			SetEntityActive("SlimeDamageArea_19", true);
			SetEntityActive("SlimeDamageArea_20", true);
			SetEntityActive("SlimeDamageArea_21", true);
		}
		
		StopSound("noisesound_1", 4.0f);
		PlaySoundAtEntity("noisesound_2", "07_noise_2.snt", "AreaNoiseSound_2", 4.0f, true);
		
		AddTimer("thundersound_3", 5.0f, "TimerRandThunderSound");
		AddTimer("stoprocksound", 5.0f, "TimerStopRockSound");
	}
}

void TimerStopRockSound(string &in asTimer)
{
	StopSound("rock_move_player_sound", 1.5f);
}

void TimerJackTalk(string &in asTimer)
{
	if(asTimer == "56")
	{
		SetMessage("Jack", asTimer, 6.0f);
		AddTimer("13", 6.5f, "TimerAlexTalk");
	}
	if(asTimer == "57")
	{
		SetMessage("Jack", asTimer, 4.5f);
		AddTimer("14", 5.0f, "TimerAlexTalk");
	}
	if(asTimer == "58")
	{
		SetMessage("Jack", asTimer, 11.0f);
		AddTimer("15", 11.5f, "TimerAlexTalk");
	}
	if(asTimer == "59")
	{
		PlayMusic("29_amb02.ogg", true, 0.6f, 1.0f, 0, false);
	
		SetMessage("Jack", asTimer, 11.0f);
		AddTimer("16", 11.5f, "TimerAlexTalk");
	}
	if(asTimer == "60")
	{
		SetMessage("Jack", asTimer, 3.5f);
		AddTimer("17", 4.0f, "TimerAlexTalk");
	}
	if(asTimer == "61")
	{
		SetMessage("Jack", asTimer, 4.0f);
		SetEntityActive("AreaTouchPortal", true);
	}
}

void TimerAlexTalk(string &in asTimer)
{
	if(asTimer == "07")
	{
		SetMessage("Strange", asTimer, 6.0f);
		if(GetGlobalVarInt("ClearedQuests") >= 5)
		{
			AddTimer("56", 6.5f, "TimerJackTalk");
		}
		else
		{
			AddTimer("08", 6.5f, "TimerAlexTalk");
		}
	}
	if(asTimer == "08")
	{
		SetMessage("Strange", asTimer, 17.0f);
		AddTimer("09", 17.5f, "TimerAlexTalk");
		
		PlayMusic("24_event_vision04", true, 1.0f, 2.0f, 0, false);
		
		SetPlayerSanity(30.0f);
		
		StopSound("noisesound_2", 4.0f);
		PlaySoundAtEntity("noisesound_3", "07_noise_3.snt", "AreaNoiseSound_3", 4.0f, true);
	}
	if(asTimer == "09")
	{
		PlayGuiSound("unlock_door", 0.5f);
		SetMessage("Strange", asTimer, 12.0f);
		StartPlayerLookAt("castle_2", 1.5f, 1.5f, "");
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0.1f);
		SetPlayerLookSpeedMul(0.1f);
		AddTimer("resetspeedmul", 2.5f, "TimerStopLook");
		
		//SetSwingDoorDisableAutoClose("castle_2", true);
		SetSwingDoorLocked("castle_2", false, true);
		//SetSwingDoorClosed("castle_2", false, true);
		//PlaySoundAtEntity("SoundDoorCreak", "01_door.snt", "castle_2", 0.0f, false);
		AddTimer("castle_2", 0.01f, "TimerAutoOpenDoor");
	}
	if(asTimer == "13")
	{
		SetMessage("Strange", asTimer, 18.0f);
		AddTimer("57", 18.5f, "TimerJackTalk");
	}
	if(asTimer == "14")
	{
		SetMessage("Strange", asTimer, 14.0f);
		AddTimer("58", 14.5f, "TimerJackTalk");
	}
	if(asTimer == "15")
	{
		PlayGuiSound("07_maze_memory.ogg", 0.6f);
	
		SetMessage("Strange", asTimer, 14.0f);
		AddTimer("59", 14.5f, "TimerJackTalk");
	}
	if(asTimer == "16")
	{
		SetMessage("Strange", asTimer, 13.0f);
		AddTimer("activeportal_1", 14.0f, "ActivePortal");
	}
	if(asTimer == "17")
	{
		SetMessage("Strange", asTimer, 10.0f);
		AddTimer("activeportal_2", 11.0f, "ActivePortal");
	}
}

void ActivePortal(string &in asTimer)
{
	if(asTimer == "activeportal_1")
	{
		CreateParticleSystemAtEntity("portal_start", "ps_orb_room_portal_start.ps", "AreaPortal", true);
		
		PlaySoundAtEntity("RandGuard", "29_amb_guard.snt", "AreaPortal", 0, false);
		PlaySoundAtEntity("PortalOpens1", "29_hole_open", "AreaPortal", 0.0f, false);
		PlaySoundAtEntity("PortalOpens2", "29_hole_blue", "AreaPortal", 2.0f, false);
		PlaySoundAtEntity("PortalOpens3", "29_hole_opened02", "AreaPortal", 8.0f, false);
		
		StartScreenShake(0.025, 1, 1, 1); 
		
		StartPlayerLookAt("AreaPortal", 1, 1,"");
		AddTimer("", 2.0f, "TimerStopLook");
		
		AddTimer("60", 2.5f, "TimerJackTalk");
	}
	if(asTimer == "activeportal_2")
	{
		DestroyParticleSystem("ParticleSystem_10");
		DestroyParticleSystem("ParticleSystem_15");
		DestroyParticleSystem("ParticleSystem_16");
		DestroyParticleSystem("ParticleSystem_17");
		DestroyParticleSystem("ParticleSystem_18");
		
		CreateParticleSystemAtEntity("portal_open", "ps_orb_room_portal_open.ps", "AreaPortal", true);
		
		PlaySoundAtEntity("PortalOpenened", "29_wind", "AreaPortal", 4.0f, false);
		PlaySoundAtEntity("RandGuard", "29_amb_guard.snt", "AreaPortal", 0, false);
		PlaySoundAtEntity("PortalBlue", "29_hole_blue.snt", "AreaPortal", 0, false);
		
		SetPropActiveAndFade("alexander_1", false, 2.0f);
		
		StartPlayerLookAt("AreaPortal", 2, 2,"");
		AddTimer("", 2.0f, "TimerStopLook");
		
		AddTimer("PortalShakeLoop", 0.1, "TimerPortalShakeLoop");
		
		AddTimer("61", 2.0f, "TimerJackTalk");
	}
}

void TimerPortalShakeLoop(string &in asTimer)
{
	StartScreenShake(0.05, 1, 1, 1); 
	
	AddTimer("PortalShakeLoop", 1, "TimerPortalShakeLoop");		
}

void TouchPortal(string &in asEntity)
{
	SetPlayerActive(false);
		
	PlayGuiSound("29_hole_open.ogg", 1.0f);
		
	FadePlayerFOVMulTo(0.5, 0.25);
		
	StartEffectFlash(3,5,3);
	
	RemoveTimer("PortalShakeLoop");
	
	AddTimer("", 5.0f, "TimerChangeMap");
}

void TimerChangeMap(string &in asTimer)
{
	ChangeMap("07_portal_funny.map", "PlayerStartArea_1", "29_hole_close.snt", "");
}

void EndingSetup()
{	
	SetPlayerHealth(100.0f);
	SetPlayerSanity(100.0f);

	//////////////////////////
	//Disable player action
	SetInventoryDisabled(true);
	SetLanternDisabled(true);
	ChangePlayerStateToNormal(); //So a held item is dropped!
	ShowPlayerCrossHairIcons(false);	
	
	//////////////////////////
	//Add edge blur and make player slower.
	SetRadialBlurStartDist(0.15f);
	FadeRadialBlurTo(0.09, 0.03f);
	SetPlayerMoveSpeedMul(0.6);
	SetPlayerRunSpeedMul(0.6);
	
	////////////////////////
	//No sanity
	SetSanityDrainDisabled(true);
}

void TimerRandThunderSound(string &in asTimer)
{
	int a = RandInt(1, 3);
	AddTimer("thundersound_" + a, 15.0f, "TimerRandThunderSound");
	if(asTimer == "thundersound_1") PlaySoundAtEntity("thundersound_1", "general_thunder.snt", "AreaThunderSound_1", 0.1f, false);
	if(asTimer == "thundersound_2") PlaySoundAtEntity("thundersound_2", "general_thunder.snt", "AreaThunderSound_2", 0.1f, false);
	if(asTimer == "thundersound_3") PlaySoundAtEntity("thundersound_3", "general_thunder.snt", "AreaThunderSound_3", 0.1f, false);
}

void CPDarkLetalSlime(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	AddTimer("scareeffect", 0.1f, "TimerPlayerReactions");
	AddTimer("breatheffect", 3.5f, "TimerPlayerReactions");
	PlaySoundAtEntity("howl","guardian_activated.snt","Player", 0, false);
	PlayMusic("07_amb.ogg", true, 1.0f, 1.0f, 0, false);
	
	SetPlayerSanity(29.0f);
	
	for(int i=1; i<=13; i++) SetEntityActive("SlimeDamageArea_" + i, true);
}

void CPOutOfMap(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
}

void TouchOrb(string &in asEntity)
{
	if(asEntity == "AreaTouchOrb")
	{
		AddTimer("panteffect", 1.5f, "TimerPlayerReactions");
		AddTimer("breatheffect", 11.5f, "TimerPlayerReactions");
		AddTimer("owl1", 1.6f, "TimerOwl");
		AddTimer("", 1.8f, "TimerStopLook");
	
		SetPropActiveAndFade("painting_portrait_insane_4", true, 1.0f);
		PlaySoundAtEntity("thankyou", "07_strange_thankyou.snt", "painting_portrait_insane_4", 0, false);
		SetMessage("Strange", "ThankYou", 5.0f);
		StartPlayerLookAt("painting_portrait_insane_4", 2.0f, 2.0f, "");
		PlayGuiSound("03_orb", 0.3f);
		
		SetPlayerActive(false);
		
		SetPropActiveAndFade("orb_6_of_8", false, 4.0f);
		
		SetInDarknessEffectsActive(false);
		
		CheckPoint ("darkslimeroom", "PlayerStartArea_2", "CPDarkLetalSlime", "DeathHints", "NightmaresAreClose");
	}
}

void TimerOwl(string &in asTimer)
{
	if(asTimer == "owl1")
	{
		FadeOut(0.3);
		PlaySoundAtEntity("stomp","scare_wall_stomp","Player", 0, false);
		StartEffectFlash(0.2, 0.1,0.3);
		FadeGlobalSoundVolume(0, 0.3);
		StartScreenShake(0.1, 4.7, 0.05, 0.5);
		AddTimer("owl2", 0.4f, "TimerOwl");
		
		SetLanternActive(false, false);
		SetLanternDisabled(true);
		//SetMessage("Jack", "LostLantern", 5.0f);
		
		StopMusic(0.1f, 0);
	}
	if(asTimer == "owl2")
	{
		TeleportPlayer("PlayerStartArea_2");
		AddTimer("owl3", 0.6f, "TimerOwl");
	}
	if(asTimer == "owl3")
	{
		//RemoveItem("lantern_1");
		PlaySoundAtEntity("howl","guardian_activated.snt","Player", 0, false);
		SetPlayerActive(true);
		
		FadeIn(1.7f);
		FadeGlobalSoundVolume(1.0f, 1.7f);
		
		AddTimer("StatueLight_1", 1.0f, "TimerFadeInSLight");
		
		PlayMusic("07_amb.ogg", true, 1.0f, 1.0f, 0, false);
	}
}

void TimerFadeInSLight(string &in asTimer)
{
	FadeLightTo(asTimer, 0.9f, 0.3f, 0.3f, 0.9f, -1, 2.0f);
	AddTimer(asTimer, 2.0f, "TimerFadeOutSLight");
	if(asTimer == "StatueLight_1")
	{
		AddTimer("StatueLight_2", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_1", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_1", 0, false);
	}
	if(asTimer == "StatueLight_2")
	{
		AddTimer("StatueLight_3", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_2", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_2", 0, false);
	}
	if(asTimer == "StatueLight_3")
	{
		AddTimer("StatueLight_4", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_3", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_3", 0, false);
	}
	if(asTimer == "StatueLight_4")
	{
		AddTimer("StatueLight_5", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_4", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_4", 0, false);
	}
	if(asTimer == "StatueLight_5")
	{
		AddTimer("StatueLight_6", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_5", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_5", 0, false);
	}
	if(asTimer == "StatueLight_6")
	{
		AddTimer("StatueLight_7", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_6", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_6", 0, false);
	}
	if(asTimer == "StatueLight_7")
	{
		AddTimer("StatueLight_8", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_7", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_7", 0, false);
	}
	if(asTimer == "StatueLight_8")
	{
		AddTimer("StatueLight_9", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_8", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_8", 0, false);
	}
	if(asTimer == "StatueLight_9")
	{
		AddTimer("StatueLight_10", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_9", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_9", 0, false);
	}
	if(asTimer == "StatueLight_10")
	{
		AddTimer("StatueLight_11", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_10", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_10", 0, false);
	}
	if(asTimer == "StatueLight_11")
	{
		AddTimer("StatueLight_12", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_11", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_11", 0, false);
	}
	if(asTimer == "StatueLight_12")
	{
		AddTimer("StatueLight_13", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_12", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_12", 0, false);
	}
	if(asTimer == "StatueLight_13")
	{
		AddTimer("StatueLight_1", 0.5f, "TimerFadeInSLight");
		PlaySoundAtEntity("statuelightsound_13", "07_enemy_hallucination_disappear.snt", "SlimeDamageArea_13", 0, false);
	}
}

void TimerFadeOutSLight(string &in asTimer)
{
	FadeLightTo(asTimer, 0, 0, 0, 0.9f, -1, 2.0f);
}

void TimerRandBreathSound(string &in asTimer)
{
	int z = RandInt(1, 16);
	AddTimer("breathsound_" + z, 5.0f, "TimerRandBreathSound");
	if(asTimer == "breathsound_1") PlaySoundAtEntity("breathsound_1", "04_breath.snt", "AreaBreathSound_1", 0.1f, false);
	if(asTimer == "breathsound_2") PlaySoundAtEntity("breathsound_2", "04_breath.snt", "AreaBreathSound_2", 0.1f, false);
	if(asTimer == "breathsound_3") PlaySoundAtEntity("breathsound_3", "04_breath.snt", "AreaBreathSound_3", 0.1f, false);
	if(asTimer == "breathsound_4") PlaySoundAtEntity("breathsound_4", "04_breath.snt", "AreaBreathSound_4", 0.1f, false);
	if(asTimer == "breathsound_5") PlaySoundAtEntity("breathsound_5", "04_breath.snt", "AreaBreathSound_5", 0.1f, false);
	if(asTimer == "breathsound_6") PlaySoundAtEntity("breathsound_6", "04_breath.snt", "AreaBreathSound_6", 0.1f, false);
	if(asTimer == "breathsound_7") PlaySoundAtEntity("breathsound_7", "04_breath.snt", "AreaBreathSound_7", 0.1f, false);
	if(asTimer == "breathsound_8") PlaySoundAtEntity("breathsound_8", "04_breath.snt", "AreaBreathSound_8", 0.1f, false);
	if(asTimer == "breathsound_9") PlaySoundAtEntity("breathsound_9", "04_breath.snt", "AreaBreathSound_9", 0.1f, false);
	if(asTimer == "breathsound_10") PlaySoundAtEntity("breathsound_10", "04_breath.snt", "AreaBreathSound_10", 0.1f, false);
	if(asTimer == "breathsound_11") PlaySoundAtEntity("breathsound_11", "04_breath.snt", "AreaBreathSound_11", 0.1f, false);
	if(asTimer == "breathsound_12") PlaySoundAtEntity("breathsound_12", "04_breath.snt", "AreaBreathSound_12", 0.1f, false);
	if(asTimer == "breathsound_13") PlaySoundAtEntity("breathsound_13", "04_breath.snt", "AreaBreathSound_13", 0.1f, false);
	if(asTimer == "breathsound_14") PlaySoundAtEntity("breathsound_14", "04_breath.snt", "AreaBreathSound_14", 0.1f, false);
	if(asTimer == "breathsound_15") PlaySoundAtEntity("breathsound_15", "04_breath.snt", "AreaBreathSound_15", 0.1f, false);
	if(asTimer == "breathsound_16") PlaySoundAtEntity("breathsound_16", "04_breath.snt", "AreaBreathSound_16", 0.1f, false);
}

void CollideAreaShrine(string &in asParent, string &in asChild, int alState)
{
	FadeOut(1.0f);
	AddTimer("teleportonshrine", 1.1f, "TimerShrineEnding");
	SetPlayerActive(false);
}

void TimerShrineEnding(string &in asTimer)
{
	if(asTimer == "teleportonshrine")
	{
		TeleportPlayer("PlayerStartArea_5");
		SetPlayerCrouching(true);
		
		AddEnemyPatrolNode("grunt_chamb_3", "PathNodeArea_32", 20.001f, "");
		AddEnemyPatrolNode("grunt_chamb_4", "PathNodeArea_36", 20.001f, "");
		AddEnemyPatrolNode("brute_chamb_3", "PathNodeArea_30", 20.001f, "");
		AddEnemyPatrolNode("brute_chamb_4", "PathNodeArea_34", 20.001f, "");
		AddEnemyPatrolNode("suitor_chamb_3", "PathNodeArea_33", 20.001f, "");

		SetEntityActive("grunt_prison_1", false);
		SetEntityActive("grunt_chamb_1", false);
		SetEntityActive("grunt_chamb_2", false);
		SetEntityActive("brute_prison_1", false);
		SetEntityActive("brute_chamb_1", false);
		SetEntityActive("brute_chamb_2", false);
		SetEntityActive("suitor_prison_1", false);
		SetEntityActive("suitor_chamb_1", false);
		SetEntityActive("suitor_chamb_2", false);
		
		SetEntityActive("grunt_chamb_3", true);
		SetEntityActive("grunt_chamb_4", true);
		SetEntityActive("brute_chamb_3", true);
		SetEntityActive("brute_chamb_4", true);
		//SetEntityActive("suitor_chamb_3", true);
		
		CreateParticleSystemAtEntity("bodyabsorbeffect", "ps_orb_stream_gather.ps", "AreaBodyAbsorbEffect", false);
		CreateParticleSystemAtEntity("alexabsorbeffect", "ps_orb_absorb.ps", "AreaAlexAbsorbEffect", false);
		
		SetPropActiveAndFade("alexander_2", false, 0.5f);
		SetPropActiveAndFade("alexander_3", true, 0.5f);
		
		AddTimer("openeyes", 0.9f, "TimerShrineEnding");
		AddTimer("randomheadlook", 0.5f, "TimerRandomLook");
	}
	if(asTimer == "openeyes")
	{
		FadeIn(0.5f);
		
		FadeSepiaColorTo(1.0f, 0.025f);
		SetRadialBlurStartDist(0.05f);
		FadeRadialBlurTo(0.5f, 0.03f);
		
		PlaySoundAtEntity("alexabsorbsound", "29_pillar_spark.snt", "AreaLookAtAlex", 2.0f, true);
		PlaySoundAtEntity("RandGuard", "29_amb_guard.snt", "AreaLookAtAlex", 0, false);
		PlayGuiSound("29_elec_burst", 1.0f);
		PlayMusic("24_event_vision03", true, 0.7f, 0, 10, false);
		StopMusic(0.5f, 0);
		
		SetMessage("Strange", "11", 5.0f);
		
		StartPlayerLookAt("AreaLookAtAlex", 0.3f, 0.3f, "");
		
		AddTimer("closeeyes", 5.0f, "TimerShrineEnding");
	}
	if(asTimer == "closeeyes")
	{
		FadeOut(7.0f);
		
		PlayGuiSound("react_sigh", 1.0f);
		PlayGuiSound("07_body_destroy.snt", 1.7f);
		
		SetMessage("Strange", "12", 7.0f);
		
		AddTimer("changemusic", 8.0f, "TimerShrineEnding");
		AddTimer("playerdamage", 1.0f, "TimerShrineEnding");
		AddTimer("playerdamage", RandFloat(1.5f, 2.0f), "TimerShrineEnding");
		AddTimer("playerdamage", RandFloat(2.5f, 3.0f), "TimerShrineEnding");
		AddTimer("playerdamage", RandFloat(3.5f, 4.0f), "TimerShrineEnding");
		AddTimer("playerdamage", RandFloat(4.5f, 5.0f), "TimerShrineEnding");
		AddTimer("playerdamage", RandFloat(5.5f, 6.0f), "TimerShrineEnding");
		AddTimer("playerdamage", RandFloat(6.5f, 7.0f), "TimerShrineEnding");
		AddTimer("playerdamage", RandFloat(6.5f, 6.9f), "TimerShrineEnding");
	}
	if(asTimer == "playerdamage")
	{
		SetPlayerHealth(100.0f);
		GivePlayerDamage(0.01f, "BloodSplat", false, false);
		StartScreenShake(0.02f, 0.1f, 0.1f, 0.1f);
	}
	if(asTimer == "changemusic")
	{
		StopMusic(2.0f, 10);
		PlayMusic("29_event_end", false, 1.0f, 2.0f, 10, false);
		PlayGuiSound("CH03L29_Ending_Daniel_Scream.ogg", 1.0f);
		
		AddTimer("knifesound", 1.5f, "TimerShrineEnding");
		AddTimer("knifesound", 2.5f, "TimerShrineEnding");
		AddTimer("knifesound", 3.5f, "TimerShrineEnding");
		AddTimer("knifesound", 4.5f, "TimerShrineEnding");
		AddTimer("knifesound", 5.0f, "TimerShrineEnding");
		AddTimer("knifesound", 5.5f, "TimerShrineEnding");
		AddTimer("knifesound", 6.0f, "TimerShrineEnding");
		AddTimer("ritualfinished", 12.0f, "TimerShrineEnding");
		
		FadeGlobalSoundVolume(0.0f, 6.5f);
	}
	if(asTimer == "knifesound")
	{
		PlayGuiSound("02_attack_knife", 1.0f);
	}
	if(asTimer == "ritualfinished")
	{
		PlayGuiSound("07_strange_thankyou.ogg", 1.0f);
		SetMessage("Strange", "ThankYou", 5.0f);
		
		SetEntityActive("grunt_chamb_3", false);
		SetEntityActive("grunt_chamb_4", false);
		SetEntityActive("brute_chamb_3", false);
		SetEntityActive("brute_chamb_4", false);
		SetEntityActive("suitor_chamb_3", false);
		
		AddTimer("loadwood", 5.5f, "TimerShrineEnding");
		
		SetupLoadScreen("LoadingHints", "", 0, "game_loading_hand.jpg");	
		
		StopRandomLook();
	}
	if(asTimer == "loadwood")
	{
		ChangeMap("08_wood_north_redux.map", "PlayerStartArea_1", "", "");
	}
}

bool bRoll = true;
void TimerRandomLook(string &in asTimer)
{
	int iLook = RandFloat(1,5);
	
	if(iLook > 4){
		FadePlayerRollTo(0, 0.5f, 1); 
		FadePlayerFOVMulTo(1, 1);
		FadeImageTrailTo(0,1.5f);
		
		AddTimer("lookloop", RandFloat(6.0f,8.0f), "TimerRandomLook");
		return;
	}
	
	FadePlayerFOVMulTo(RandFloat(0.7f,1.3f), RandFloat(0.05f,0.1f));
	
	FadeImageTrailTo(RandFloat(0.75f,1.0f),RandFloat(0.75f,1.25f));
	
	bRoll = bRoll == false ? true : false;
	
	if(bRoll)
		FadePlayerRollTo(RandFloat(4,12), RandFloat(0.075f,0.35f), RandFloat(0.55f,1.15f)); 
	else
		FadePlayerRollTo(RandFloat(-4,-12), RandFloat(0.05f,0.25f), RandFloat(0.5f,1)); 
		
	AddTimer("lookloop", RandFloat(3.0f,6.0f), "TimerRandomLook");
}
void StopRandomLook()
{
	RemoveTimer("lookloop");
	
	FadePlayerFOVMulTo(1, 1);
	FadeImageTrailTo(0,1.0f);
	FadePlayerRollTo(0, 0.5f, 2); 
}

void CollideAreaLookAtOrbFake(string &in asParent, string &in asChild, int alState)
{
	SetMessage("Jack", "54", 5.0f);
	StartPlayerLookAt("orb_6_of_8", 2, 2, "");
	AddTimer("", 2.0f, "TimerStopLook");
}

void CollideAreaEnterRoom(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "AreaEnterRoom_1")
	{
		AddPropImpulse("castle_6", 4.0f, 0, 0, "world");
		
		SetSwingDoorLocked("castle_6", true, true);
		
		AddTimer("breath", 1.0f, "TimerPlayerReactions");
	}
	if(asChild == "AreaEnterRoom_2")
	{
		SetEntityActive("block_box_22", true);
		SetLightVisible("BoxLight_4", false);
		
		PlayMusic("24_event_vision02", true, 0.8f, 1.0f, 0, false);
		
		SetMessage("Strange", "10", 5.0f);
		
		EndingSetup();
	}
}

void CollideAreaRockCorridor(string &in asParent, string &in asChild, int alState)
{
	AddTimer("scare", 1.5f, "TimerPlayerReactions");
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	AddTimer("resetspeedmul", 4.0f, "TimerStopLook");
	AddTimer("castle_arched01_2", 1.1f, "TimerAutoOpenDoor");
	
	PlayGuiSound("29_rotating_rock04.ogg", 1.0f);

	SetPlayerMoveSpeedMul(0.1f);
	SetPlayerRunSpeedMul(0.1f);
	SetPlayerLookSpeedMul(0.1f);
	
	SetSwingDoorDisableAutoClose("castle_arched01_2", true);
}

void CollideVaseGhost(string &in asParent, string &in asChild, int alState)
{
	AddTimer("breath", 0.5f, "TimerPlayerReactions");
	GivePlayerDamage(25, "BloodSplat", true, false);
}

void CollideAreaAlexTalk(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "AreaAlexTalk_1")
	{
		AddTimer("scare", 2.0f, "TimerPlayerReactions");
		AddTimer("part1", 2.0f, "TimerDarknessTalk");
		PlayGuiSound("21_alex_low_freq_rumble", 1.0f);
		StartPlayerLookAt("cross_small_metal_1", 2.0f, 2.0f, "");
		SetPlayerMoveSpeedMul(0.2f);
		SetPlayerRunSpeedMul(0.2f);
		SetPlayerLookSpeedMul(0.2f);
		AddTimer("resetspeedmul", 2.0f, "TimerStopLook");
		
		SetLightVisible("PointLight_123", true);
		
		SetLampLit("orb_pedestal_1", true, true);
		SetEntityActive("orb_6_of_8", true);
		SetEntityActive("AreaLookAtOrbFake", true);
		SetEntityActive("AreaTouchOrb", true);
		CreateParticleSystemAtEntity("orb_light_false", "ps_orb_light.ps", "AreaTouchOrb", true);
		PlaySoundAtEntity("orb_sound_false", "03_orb_loop", "AreaTouchOrb", 4.0f, true);
	}
	if(asChild == "AreaAlexTalk_2")
	{
		AddTimer("scare", 2.0f, "TimerPlayerReactions");
		AddTimer("part3", 2.0f, "TimerDarknessTalk");
		PlayGuiSound("21_alex_low_freq_rumble", 1.0f);
		StartPlayerLookAt("cross_small_metal_2", 2.0f, 2.0f, "");
		SetPlayerMoveSpeedMul(0.2f);
		SetPlayerRunSpeedMul(0.2f);
		SetPlayerLookSpeedMul(0.2f);
		AddTimer("resetspeedmul", 2.0f, "TimerStopLook");
		
		SetLightVisible("PointLight_122", true);
		
		if(GetGlobalVarInt("ClearedQuests") >= 5)
		{
			SetMessage("Strange", "06", 23.0f);
			
			StartScreenShake(0.03f, 6, 2, 2);
		}
		else
		{
			SetMessage("Strange", "05", 18.0f);
			
			StartScreenShake(0.035f, 6, 2, 2);
		}
	}
}

void TimerDarknessTalk(string &in asTimer)
{
	if(asTimer == "part1")
	{
		SetPlayerActive(false);
		FadeGlobalSoundVolume(0.0f, 0.3f);
		PlaySoundAtEntity("stomp", "scare_wall_stomp", "Player", 0, false);
		StartEffectFlash(0.2, 0.1,0.3);
		StopMusic(0.3f, 0);
		StartScreenShake(0.1f, 4.7f, 0.05f, 0.5f);
		FadeOut(0.3f);
		PlayMusic("11_event_dog.ogg", false, 0.8f, 0.5f, 10, false);
		if(GetGlobalVarInt("ClearedQuests") >= 5)
		{
			SetMessage("Strange", "04", 28.0f);
			AddTimer("part2", 28.0f, "TimerDarknessTalk");
			AddTimer("guardian", 15.0f, "TimerDarknessTalk");
		}
		else
		{
			SetMessage("Strange", "03", 18.0f);
			AddTimer("part2", 18.0f, "TimerDarknessTalk");
			AddTimer("guardian", 5.0f, "TimerDarknessTalk");
		}
	}
	else if(asTimer == "part2")
	{
		PlaySoundAtEntity("howl", "guardian_activated.snt", "Player", 0, false);
		FadeIn(2.0f);
		SetPlayerSanity(35.0f);
		AddTimer("vaseghost_1", 2.0f, "TimerVaseGhost");
		FadeGlobalSoundVolume(1.0f, 2.0f);
		StartScreenShake(0.05f, 4.7f, 0.05f, 0.5f);
		SetPlayerActive(true);
		
		PlayMusic("29_amb.ogg", true, 0.6f, 1.0f, 0, false);
		
		SetLampLit("torch_orb_1", false, false);
		for(int t=1; t<=28; t++)
			SetLampLit("torch_static_green_" + t, false, true);
		for(int l=79; l<=89; l++)
			SetLightVisible("PointLight_" + l, false);
	}
	else if(asTimer == "part3")
	{
		for(int t=29; t<=31; t++)
			SetLampLit("torch_static_green_" + t, false, true);
		for(int y=33; y<=35; y++)
			SetLampLit("torch_static_green_" + y, false, true);
	}
	else if(asTimer == "guardian")
	{
		PlayGuiSound("guardian_idle1.ogg", 0.5f);
	}
}

void TimerVaseGhost(string &in asTimer)
{
	SetPropActiveAndFade(asTimer, true, 1.0f);
	if(asTimer == "vaseghost_1") AddTimer("vaseghost_2", 0.5f, "TimerVaseGhost");
	if(asTimer == "vaseghost_2") AddTimer("vaseghost_3", 0.5f, "TimerVaseGhost");
	if(asTimer == "vaseghost_3") AddTimer("vaseghost_4", 0.5f, "TimerVaseGhost");
	if(asTimer == "vaseghost_4") AddTimer("vaseghost_5", 0.5f, "TimerVaseGhost");
	if(asTimer == "vaseghost_5") AddTimer("vaseghost_6", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_6") AddTimer("vaseghost_7", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_7") AddTimer("vaseghost_8", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_8") AddTimer("vaseghost_9", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_9") AddTimer("vaseghost_10", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_10") AddTimer("vaseghost_11", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_11") AddTimer("vaseghost_12", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_12") AddTimer("vaseghost_13", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_13") AddTimer("vaseghost_14", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_14") AddTimer("vaseghost_15", 1.0f, "TimerVaseGhost");
	if(asTimer == "vaseghost_15") AddTimer("vaseghost_16", 1.0f, "TimerVaseGhost");
}

void CollideAreaEncounterAlex(string &in asParent, string &in asChild, int alState)
{
	if(GetPlayerSanity() <= 25.0f) SetPlayerSanity(100.0f);
	if(GetPlayerHealth() <= 50.0f) SetPlayerHealth(100.0f);
	SetEntityActive("brute_1", false);
	AddPropForce("castle_1", -10.0f, 0, 0, "world");
	SetSwingDoorClosed("castle_1", true, false);
	SetSwingDoorLocked("castle_1", true, false);
	PlayGuiSound("02_first_seen_grunt.ogg", 1.0f);
	StartPlayerLookAt("alexander_1", 3.0f, 3.0f, "");
	AddTimer("", 1.0f, "TimerStopLook");
	AddTimer("scareeffect", 0.5f, "TimerPlayerReactions");
	AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
	
	SetMessage("Jack", "55", 5.0f);
	AddTimer("07", 5.5f, "TimerAlexTalk");
	
	for(int h=1; h<=16; h++) RemoveTimer("breathsound_" + h);
	
	CompleteQuest("FightGuardianMission", "FightGuardianMission");
	CompleteQuest("FindGrandpaMission", "FindGrandpaMission");
}

void CollideAreaChangeEnemyPath(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "AreaChangeEnemyPath_1")
	{	
		SetEntityActive("AreaEnemyPath_1", false);
		
		ClearEnemyPatrolNodes("brute_1");
		
		AddEnemyPatrolNode("brute_1", "PathNodeArea_10", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_16", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_17", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_18", 1.001f, "");
	}
}

void CollideAreaEnemyPath(string &in asParent, string &in asChild, int alState)
{
	if(asParent == "brute_1" && asChild == "AreaEnemyPath_1")
	{
		ClearEnemyPatrolNodes("brute_1");
		
		AddEnemyPatrolNode("brute_1", "PathNodeArea_11", 0, "");
	}
	if(asParent == "brute_1" && asChild == "AreaEnemyPath_2")
	{
		ClearEnemyPatrolNodes("brute_1");
		
		AddEnemyPatrolNode("brute_1", "PathNodeArea_19", 10.001f, "");
	}
}

void CollideAreaJumpDoor(string &in asParent, string &in asChild, int alState)
{
	if(GetGlobalVarInt("ClearedQuests") >= 5) SetEnemySanityDecreaseActive("brute_1", false);
	AddTimer("pant", 0.6f, "TimerPlayerReactions");
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	AddTimer("breath", 5.5f, "TimerPlayerReactions");
	SetPropHealth("castle_arched01_4", 0);
	
	ClearEnemyPatrolNodes("brute_1");
	
	AddEnemyPatrolNode("brute_1", "PathNodeArea_2", 0.001f, "");
	AddEnemyPatrolNode("brute_1", "PathNodeArea_3", 0.001f, "");
	AddEnemyPatrolNode("brute_1", "PathNodeArea_9", 2.001f, "");
	
	SetEntityActive("brute_1", true);
	
	if(GetGlobalVarInt("EnemiesAchievement") == 1)
		SetEnemySanityDecreaseActive("brute_1", false);
	
	PlayMusic("15_event_prisoner.ogg", false, 1.0f, 1.0f, 10, false);
	PlayMusic("29_amb.ogg", true, 0.6f, 1.0f, 0, false);
}

void CollideAreaOpenDoor(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "AreaOpenDoor_1")
	{
		AddTimer("castle_6", 0.01f, "TimerAutoOpenDoor");
		AddTimer("breath", 3.3f, "TimerPlayerReactions");
	
		SetSwingDoorDisableAutoClose("castle_6", true);
		SetSwingDoorClosed("castle_2", true, true);
		SetSwingDoorLocked("castle_2", true, true);
		
		SetPlayerJumpDisabled(true);
		//SetPlayerCrouchDisabled(true);
		
		PlaySoundAtEntity("SoundDoorCreak", "01_door.snt", "castle_6", 0.0f, false);
		PlayMusic("24_event_vision.ogg", true, 0.8f, 6.0f, 0, false);
		StartScreenShake(0.01f, 1, 0.5f,1);
		
		AddEnemyPatrolNode("grunt_prison_1", "PathNodeArea_20", RandFloat(2.0f, 4.0f), "");
		AddEnemyPatrolNode("grunt_prison_1", "PathNodeArea_21", RandFloat(2.0f, 4.0f), "");
		AddEnemyPatrolNode("grunt_chamb_1", "PathNodeArea_29", 10.001f, "");
		AddEnemyPatrolNode("grunt_chamb_2", "PathNodeArea_24", 10.001f, "");
		AddEnemyPatrolNode("brute_prison_1", "PathNodeArea_23", RandFloat(2.0f, 4.0f), "");
		AddEnemyPatrolNode("brute_chamb_1", "PathNodeArea_27", 10.001f, "");
		AddEnemyPatrolNode("brute_chamb_2", "PathNodeArea_28", 10.001f, "");
		AddEnemyPatrolNode("suitor_prison_1", "PathNodeArea_22", 10.001f, "");
		AddEnemyPatrolNode("suitor_chamb_1", "PathNodeArea_25", 10.001f, "");
		AddEnemyPatrolNode("suitor_chamb_2", "PathNodeArea_26", 10.001f, "");
		
		SetEnemySanityDecreaseActive("grunt_prison_1", false);
		SetEnemySanityDecreaseActive("grunt_chamb_1", false);
		SetEnemySanityDecreaseActive("grunt_chamb_2", false);
		SetEnemySanityDecreaseActive("brute_prison_1", false);
		SetEnemySanityDecreaseActive("brute_chamb_1", false);
		SetEnemySanityDecreaseActive("brute_chamb_2", false);
		SetEnemySanityDecreaseActive("suitor_prison_1", false);
		SetEnemySanityDecreaseActive("suitor_chamb_1", false);
		SetEnemySanityDecreaseActive("suitor_chamb_2", false);
		
		SetEntityActive("grunt_prison_1", true);
		SetEntityActive("grunt_chamb_1", true);
		SetEntityActive("grunt_chamb_2", true);
		SetEntityActive("brute_prison_1", true);
		SetEntityActive("brute_chamb_1", true);
		SetEntityActive("brute_chamb_2", true);
		SetEntityActive("suitor_prison_1", true);
		SetEntityActive("suitor_chamb_1", true);
		SetEntityActive("suitor_chamb_2", true);
	}
	if(asChild == "AreaOpenDoor_2")
	{
		AddTimer("pant", 0.3f, "TimerPlayerReactions");
		SetPropHealth("castle_arched01_8", 0);
		SetLightVisible("PointLight_75", false);
		
		StartScreenShake(0.02f, 0.5f, 0.5f, 1);
	}
}

void TimerAutoOpenDoor(string &in asTimer)
{
	if(asTimer == "castle_6")
	{
		AddPropImpulse(asTimer, -3.0f, 0, 0, "World");
	}
	if(asTimer == "castle_arched01_2")
	{
		AddPropImpulse(asTimer, 0, 0, -1.0f, "World");
	}
	if(asTimer == "castle_2")
	{
		AddPropImpulse(asTimer, -4.0f, 0, 0, "World");
	}
}

void CollideAreaInsanePaintsRoom(string &in asParent, string &in asChild, int alState)
{
	AddTimer("scare", 0.1f, "TimerPlayerReactions");
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	PlaySoundAtEntity("windgal", "general_wind_whirl.snt", "gallery_1", 0.0f, false);
	CreateParticleSystemAtEntity("psgal", "ps_dust_whirl.ps", "gallery_1", false);
	SetLampLit("candlestick_floor_2", false, true);
	SetPropActiveAndFade("painting_portrait_insane_1", true, 2.0f);
	SetPropActiveAndFade("painting_portrait_insane_2", true, 4.0f);
	SetPropActiveAndFade("painting_portrait_insane_3", true, 6.0f);
	
	StartScreenShake(0.01f,0.25f, 0.01f,0.5f);
}

void TimerSaySomething(string &in asTimer)
{
	if(asTimer == "")
	{
		SetMessage("", "", 5.0f);
	}
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
	SetSwingDoorLocked(asEntity, false, false);
	if(asEntity == "castle_4")
	{
		PlaySoundAtEntity("unlock_door_needle", "door_sewer_unlock", asEntity, 0, false);
		RemoveItem(asItem);
		SetMessage("Hints", "NoMoreNeedle", 5.0f);
	}
	else PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
}

void TimerFadeScreen(string &in asTimer)
{
	if(asTimer == "fadein")
	{
		FadeIn(2.0f);
	}
	if(asTimer == "fadeout")
	{
		FadeOut(2.0f);
	}
	if(asTimer == "fadeinactiveplayer")
	{
		FadeIn(2.0f);
		SetPlayerActive(true);
	}
	if(asTimer == "fadeoutactiveplayer")
	{
		FadeOut(2.0f);
		SetPlayerActive(true);	
	}	
}

void TimerStopLook(string &in asTimer)
{
	if(asTimer == "resetspeedmul")
	{
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerLookSpeedMul(1.0f);
		if(GetGlobalVarInt("FastSeekerAchievement") == 1)
			SetPlayerRunSpeedMul(1.175f);
		if(GetGlobalVarInt("WardrobeAchievement") == 1)
			SetPlayerJumpForceMul(1.175f);
	}
	if(asTimer == "activeplayer")
	{
		SetPlayerActive(true);
	}
	StopPlayerLookAt();
}

void TimerPlayerReactions(string &in asTimer)
{
	if(asTimer == "scareeffect")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "breatheffect")
	{
		PlayGuiSound("react_breath", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "sigheffect")
	{
		PlayGuiSound("react_sigh", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "panteffect")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "scare")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, true);
	}
	else if(asTimer == "breath")
	{
		PlayGuiSound("react_breath", 0.5f);
		GiveSanityDamage(4.0f, false);
	}
	else if(asTimer == "sigh")
	{
		PlayGuiSound("react_sigh", 0.5f);
		GiveSanityDamage(2.0f, false);
	}
	else if(asTimer == "pant")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, true);
	}
}