void OnStart()
{
AddEntityCollideCallback("goblet", "DamageArea_1", "TooLight", false, 1);
AddEntityCollideCallback("rock", "DamageArea_1", "Impact1", false, 1);
AddEntityCollideCallback("rock", "DamageArea", "Impact2", false, 1);
AddEntityCollideCallback("brick", "DamageArea_1", "Impact1", false, 1);
AddEntityCollideCallback("brick", "DamageArea", "Impact2", false, 1);
AddEntityCollideCallback("rock2", "DamageArea_1", "Impact1", false, 1);
AddEntityCollideCallback("rock2", "DamageArea", "Impact2", false, 1);
AddEntityCollideCallback("rock2", "DoorFail", "doorhard", false, 1);
AddEntityCollideCallback("rock", "DoorFail", "doorhard", false, 1);
AddEntityCollideCallback("brick", "DoorFail", "doorhard", false, 1);
AddEntityCollideCallback("brute", "ActivateExit", "ActivateExit", false, 1);
AddEntityCollideCallback("brute", "EnemieLeave", "EnemieLeave", false, 1);
AddEntityCollideCallback("Player", "AreaGround", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround2", "CollideAreaGround2", false, 1);
AddEntityCollideCallback("Player", "AreaGround3", "CollideAreaGround2", false, 1);
AddEntityCollideCallback("Player", "ActivateDog", "Dog", false, 1);
AddEntityCollideCallback("Player", "NoWay", "NoWay", false, 1);
AddEntityCollideCallback("Player", "AreaSteps", "Steps", true, 1);
AddEntityCollideCallback("Player", "AreaTorture", "Torture", true, 1);
AddEntityCollideCallback("Player", "AreaPanic", "Panic", false, 1);
AddEntityCollideCallback("Player", "AreaWolfSound", "WolfSound", true, 1);
AddEntityCollideCallback("Player", "EnterCave", "EnterCave", true, 1);
AddEntityCollideCallback("Player", "CheckpointGate", "CheckpointGate", true, 1);
AddEntityCollideCallback("Player", "AreaCreak", "BoardBreak", true, 1);
AddEntityCollideCallback("Player", "AreaCreak2", "CreakSound", true, 1);
AddEntityCollideCallback("Player","LanternOn","LanternOn",false,1);
AddEntityCollideCallback("Player","LanternOff","LanternOff",false,1);
AddEntityCollideCallback("Player", "AreaAlma", "AreaAlma", true, 1);
AddEntityCollideCallback("Player", "rat_1", "rat1", true, 1);
AddEntityCollideCallback("Player", "rat_2", "rat2", true, 1);
AddEntityCollideCallback("Player", "rat_3", "rat3", true, 1);
AddEntityCollideCallback("Player", "Bonfire", "Death", false, 1);
AddUseItemCallback("", "hammer", "castle_1", "BreakDoor", true);
AddUseItemCallback("", "hammer", "door", "DoorFail", true);
AddUseItemCallback("", "waxemma", "nowax", "UseWaxroll", true);
AddUseItemCallback("", "waxharry", "nowax", "UseWaxroll2", true);
AddUseItemCallback("", "waxmichael", "nowax", "UseWaxroll3", true);
AddUseItemCallback("", "waxwaldon", "nowax", "UseWaxroll4", true);
AddUseItemCallback("", "drill", "door", "UsedKeyOnDoor", true);
AddUseItemCallback("", "drill", "AlmaArea", "GiveDrill", true);
AddUseItemCallback("", "keyexit", "exit", "UsedKeyOnDoor2", true);
SetEntityInteractionDisabled("rose", true);
SetEntityInteractionDisabled("rose2", true);
SetPropHealth("castle_2", 60.0f);
SetLanternDisabled(false);
RemoveItem("Lantern");
RemoveItem("hammer");
RemoveItem("orb");
RemoveItem("keylocker");
RemoveItem("knife");
RemoveItem("money");
RemoveItem("money2");
RemoveItem("money3");
RemoveItem("money5");
RemoveItem("money8");
RemoveItem("money9");
FadeRadialBlurTo(0.10, 2);
FadeImageTrailTo(1, 2);
FadePlayerFOVMulTo(1, 2);
FadeOut(0.0f);
AddTimer("intro", 2, "intro");
AddTimer("intro10", 20, "intro10");
AddTimer("intro11", 25, "intro11");
AddTimer("intro12", 45, "intro12");
SetPlayerActive(false);
StartPlayerLookAt("LookAlma", 5, 50, "");
MovePlayerHeadPos(0.0f, -1.1f, 0.0f, 1.0f, 0.5f);
SetMapDisplayNameEntry("JeffersonOutside");
AutoSave();
}

void intro(string &in asTimer)
{
FadeIn(13.0f);
AddEffectVoice("ch3almaintro.ogg", "", "Voice", "00_Ch3almaintro", false, "", 0, 0 );
AddTimer("intro2", 1, "intro2");
}

void intro2(string &in asTimer)
{
AddEffectVoice("ch3leeintro.ogg", "", "Voice", "00_Ch3leeintro", false, "", 0, 0 );
AddTimer("intro3", 1, "intro3");
}

void intro3(string &in asTimer)
{
AddEffectVoice("ch3almaintro2.ogg", "", "Voice", "00_Ch3almaintro2", false, "", 0, 0 );
AddTimer("intro4", 1, "intro4");
}

void intro4(string &in asTimer)
{
AddEffectVoice("ch3leeintro2.ogg", "", "Voice", "00_Ch3leeintro2", false, "", 0, 0 );
AddTimer("intro5", 1, "intro5");
}

void intro5(string &in asTimer)
{
AddEffectVoice("ch3almaintro4.ogg", "", "Voice", "00_Ch3almaintro4", false, "", 0, 0 );
AddTimer("intro6", 1, "intro6");
}

void intro6(string &in asTimer)
{
AddEffectVoice("ch3leeintro4.ogg", "", "Voice", "00_Ch3leeintro4", false, "", 0, 0 );
AddTimer("intro7", 1, "intro7");
}

void intro7(string &in asTimer)
{
AddEffectVoice("ch3almaintro3.ogg", "", "Voice", "00_Ch3almaintro3", false, "", 0, 0 );
AddTimer("intro8", 1, "intro8");
}

void intro8(string &in asTimer)
{
AddEffectVoice("ch3leeintro3.ogg", "", "Voice", "00_Ch3leeintro3", false, "", 0, 0 );
AddTimer("intro9", 1, "intro9");
}

void intro9(string &in asTimer)
{
AddEffectVoice("ch3almaintro5.ogg", "", "Voice", "00_Ch3almaintro5", false, "", 0, 0 );
}

void intro10(string &in asTimer)
{
FadeImageTrailTo(0, 1.0f);
FadePlayerRollTo(0, 33, 33);
FadeRadialBlurTo(0.0, 1);
}

void intro11(string &in asTimer)
{
MovePlayerHeadPos(0.0, 0, 0, 1.0f, 0.5f);
}

void intro12(string &in asTimer)
{
StopPlayerLookAt();
SetPlayerActive(true);
SetSanityDrainDisabled(false);
}

float Distance = 0.25f;

void TooLight(string &in asParent , string &in asChild , int alState)
{
    SetMessage("Messages", "toolight", 0);
}

void Impact1(string &in asParent , string &in asChild , int alState)
{
    AddTimer("ImpactTime" , 1.0f , "HitTime"); // This doesnt need to call anything
}

void Impact2(string &in asParent, string &in asChild, int alState)
{
    float Time = (1.05f - GetTimerTimeLeft("ImpactTime")); // Get's the time taken to impact
    float Speed = (Distance / Time); // Gets the speed
    if(Speed >= 1.8f) // Minimum necessary speed
    {
        if (GetPropHealth("castle_2") == 60)
		{
			SetPropHealth("castle_2", 30.0f);
		}
		else
		{
			SetPropHealth("castle_2", 0.0f);
			CompleteQuest("Ch3door", "Ch3door");
			for(int i=1;i<=10;i++)
			{
			}
			RemoveEntityCollideCallback("rock", "DamageArea_1");
			RemoveEntityCollideCallback("rock", "DamageArea");
			RemoveEntityCollideCallback("rock2", "DamageArea_1");
			RemoveEntityCollideCallback("rock2", "DamageArea");
			RemoveEntityCollideCallback("goblet", "DamageArea_1");
			RemoveEntityCollideCallback("goblet", "DamageArea");
			RemoveEntityCollideCallback("brick", "DamageArea_1");
			RemoveEntityCollideCallback("brick", "DamageArea");
		}
    }
    else
    {
        SetMessage("Messages", "backaway", 0);
    }
}

void BreakDoor(string &in asItem, string &in asEntity)
{
SetPropHealth("castle_1", 0.0f);
CreateParticleSystemAtEntity("breakps", "ps_break_wood", "castle_1", false);
PlaySoundAtEntity("","break_wood_metal","castle_1", 0,false);
SetEntityActive("DoorFail", false);
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);
}

void Item(string &in asEntity)
{
AddLocalVarInt("VarIntItems", 1);
	ItemsDone();
}

void Item2(string &in asEntity)
{
AddLocalVarInt("VarIntItems", 1);
	ItemsDone();
}

void ItemsDone(){

	if(GetLocalVarInt("VarIntItems") == 2){
		
                SetEntityActive("brute", true);
                SetEntityActive("bar", false);
                SetEntityActive("alma", false);
                SetEntityPlayerInteractCallback("AreaPath", "leaveyard", true);
                AddEnemyPatrolNode("brute","node_1",0,"");
                AddEnemyPatrolNode("brute","node_2",0,"");
                AddEnemyPatrolNode("brute","node_3",0,"");
                AddEnemyPatrolNode("brute","node_4",3,"");
                AddEnemyPatrolNode("brute","node_5",3,"");
                AddEnemyPatrolNode("brute","node_4",0,"");
                AddEnemyPatrolNode("brute","node_3",0,"");
                AddEnemyPatrolNode("brute","node_2",0,"");
                AddEnemyPatrolNode("brute","node_1",0,"");
                AddEnemyPatrolNode("brute","node_13",0,"");
                CheckPoint ("Checkpoint", "PlayerStartArea_2", "DeathSettings", "DeathHints", "Ch3brute");
                PlayMusic("19_event_brute.ogg", false, 1.0, 3, 0, true);
                AddEffectVoice("leecellar.ogg", "", "Voice", "00_Leecellar", false, "", 0, 0 );
	}
}

void leaveyard(string &in asEntity)
{
ChangeMap("JeffersonOutside.map", "PlayerStartArea_3", "","");
CheckPoint ("Checkpoint2", "PlayerStartArea_3", "DeathSettings2", "DeathHints", "Ch3careful");
AddQuest("Ch3alma", "Ch3alma");
}

void entercellar(string &in asEntity)
{
ChangeMap("JeffersonOutside.map", "PlayerStartArea_4", "","");
CheckPoint ("Checkpoint3", "PlayerStartArea_4", "DeathSettings2", "DeathHints", "Killed");
PlayMusic("12_amb", true, 1.0f, 4.0f, 0, true);
SetEntityActive("brute", false);      
}

void leavecellar(string &in asEntity)
{
ChangeMap("JeffersonOutside.map", "PlayerStartArea_6", "","");
CheckPoint ("Checkpoint4", "PlayerStartArea_6", "DeathSettings2", "DeathHints", "Killed");
StopMusic(5, 0);
}

void ActivateExit(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("EnemieLeave", true);
}

void EnemieLeave(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("brute", false);
PlaySoundAtEntity("doorgruntleave","10_open_door.snt", "mansionentrance", 0.5, false);
CheckPoint ("Checkpoint", "PlayerStartArea_1", "DeathSettings2", "DeathHints", "Fall");
}

void Dog(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("Dog", true);
}

//---- Alma/Basement ----//

void AreaAlma(string &in asParent, string &in asChild, int alState)
{
AddEffectVoice("ch3lee.ogg", "", "Voice", "00_Ch3lee", false, "", 0, 0 );
SetPlayerActive(false);
StartPlayerLookAt("LookAlma2", 5, 50, "");
SetEntityActive("block", true);
AddTimer("alma2", 1, "alma2");
AddTimer("intro12", 56, "intro12");
CompleteQuest("Ch3alma", "Ch3alma");
}

void alma2(string &in asTimer)
{
AddEffectVoice("ch3alma.ogg", "", "Voice", "00_Ch3alma", false, "", 0, 0 );
AddTimer("alma3", 1, "alma3");
}

void alma3(string &in asTimer)
{
AddEffectVoice("ch3lee2.ogg", "", "Voice", "00_Ch3lee2", false, "", 0, 0 );
AddTimer("alma4", 1, "alma4");
}

void alma4(string &in asTimer)
{
AddEffectVoice("ch3alma2.ogg", "", "Voice", "00_Ch3alma2", false, "", 0, 0 );
AddTimer("alma5", 1, "alma5");
}

void alma5(string &in asTimer)
{
AddEffectVoice("ch3lee3.ogg", "", "Voice", "00_Ch3lee3", false, "", 0, 0 );
AddTimer("alma6", 1, "alma6");
}

void alma6(string &in asTimer)
{
AddEffectVoice("ch3alma3.ogg", "", "Voice", "00_Ch3alma3", false, "", 0, 0 );
AddTimer("alma7", 1, "alma7");
}

void alma7(string &in asTimer)
{
AddEffectVoice("ch3lee4.ogg", "", "Voice", "00_Ch3lee4", false, "", 0, 0 );
AddTimer("alma8", 1, "alma8");
}

void alma8(string &in asTimer)
{
AddEffectVoice("ch3alma4.ogg", "", "Voice", "00_Ch3alma4", false, "", 0, 0 );
AddTimer("alma9", 1, "alma9");
}

void alma9(string &in asTimer)
{
AddEffectVoice("ch3lee5.ogg", "", "Voice", "00_Ch3lee5", false, "", 0, 0 );
AddTimer("alma10", 1, "alma10");
}

void alma10(string &in asTimer)
{
AddEffectVoice("ch3alma5.ogg", "", "Voice", "00_Ch3alma5", false, "", 0, 0 );
}

void almabook(string &in asEntity)
{
SetPlayerActive(false);
StartPlayerLookAt("LookAlma2", 5, 50, "");
AddTimer("almabook2", 1, "almabook2");
AddTimer("intro12", 18, "intro12");
AddEffectVoice("ch3leebook.ogg", "", "Voice", "00_Ch3leebook", false, "", 0, 0 );
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);
}

void almabook2(string &in asTimer)
{
AddEffectVoice("ch3almabook.ogg", "", "Voice", "00_Ch3almabook", false, "", 0, 0 );
AddTimer("almabook3", 1, "almabook3");
}

void almabook3(string &in asTimer)
{
AddEffectVoice("ch3leebook2.ogg", "", "Voice", "00_Ch3leebook2", false, "", 0, 0 );
AddTimer("almabook4", 1, "almabook4");
}

void almabook4(string &in asTimer)
{
AddEffectVoice("ch3almabook2.ogg", "", "Voice", "00_Ch3almabook2", false, "", 0, 0 );
}

void Torture(string &in asParent, string &in asChild, int alState)
{
AddPropForce("axe", 100, 400, 400,"world");
SetLampLit("candle1", true, true);
SetLampLit("candle2", true, true);
SetEntityActive("body", true);
CreateParticleSystemAtEntity("bloodps", "ps_blood_tiny_stream", "AreaBlood", false);
CreateParticleSystemAtEntity("bloodps", "ps_blood_tiny_stream", "AreaBlood2", false);
CreateParticleSystemAtEntity("bloodps", "ps_blood_tiny_stream", "AreaBlood3", false);
CreateParticleSystemAtEntity("bloodps", "ps_blood_tiny_stream", "AreaBlood4", false);
CreateParticleSystemAtEntity("bloodps", "ps_blood_tiny_stream", "AreaBlood5", false);
CreateParticleSystemAtEntity("bloodps", "ps_blood_tiny_stream", "AreaBlood6", false);
PlaySoundAtEntity("","15_prisoner_scream.snt", "AreaBlood", 0.5, false);
AddTimer("torture2", 2, "torture2");
FadeRadialBlurTo(0.10, 2);
FadeRadialBlurTo(0.10, 2);
FadeImageTrailTo(1, 2);
}

void torture2(string &in asTimer)
{
FadeOut(0.0f);
FadeIn(3.0f);
FadeImageTrailTo(0, 1.0f);
FadePlayerRollTo(0, 33, 33);
FadeRadialBlurTo(0.0, 1);
PlaySoundAtEntity("","enemy_hallucination_disappear","Player", 0,false);
GiveSanityDamage(10, true);
SetEntityActive("body", false);
DestroyParticleSystem("bloodps");
SetLampLit("candle1", false, false);
SetLampLit("candle2", false, false);
PlaySoundAtEntity("","Whispers.snt","Player", 0,false);
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
SetSwingDoorLocked("door",false, true);
PlaySoundAtEntity("","unlock_door","door", 0,false);
SetEntityPlayerInteractCallback("door", "", false);
}

void UsedKeyOnDoor2(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","unlock_door","exit", 0,false);
SetLevelDoorLocked("exit", false);
SetEntityPlayerInteractCallback("exit", "", false);
RemoveItem("keyexit");
CompleteQuest("Ch3beach", "Ch3beach");
}

void GiveDrill(string &in asItem, string &in asEntity)
{
RemoveItem("drill");
SetEntityActive("block", false);
SetPlayerActive(false);
StartPlayerLookAt("LookAlma2", 5, 50, "");
AddEffectVoice("ch3lee7.ogg", "", "Voice", "00_Ch3lee7", false, "", 0, 0 );
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);
AddTimer("drill2", 1, "drill2");
AddTimer("intro12", 15, "intro12");
}

void drill2(string &in asTimer)
{
AddEffectVoice("ch3alma6.ogg", "", "Voice", "00_Ch3alma6", false, "", 0, 0 );
}

void pickkey(string &in asEntity)
{
SetEntityActive("dog", false);
SetEntityActive("ActivateDog", false);
SetEntityActive("AreaPanic", true);
SetEntityActive("AreaWolfSound", true);
SetEntityActive("bone", true);
SetEntityActive("bone2", true);
SetEntityActive("EnterCellar", false);
SetEntityPlayerInteractCallback("AlmaArea", "almabook", true);
}

void DoorFail(string &in asItem, string &in asEntity)
{
CreateParticleSystemAtEntity("breakps", "ps_break_wood", "door", false);
PlaySoundAtEntity("","break_wood_metal","door", 0,false);
AddTimer("doorfail2", 2, "doorfail2");
}

void doorfail2(string &in asTimer)
{
SetMessage("Messages", "worth", 4);
}

//---- Scary event before entering the beach door ----//

void WolfSound(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","Wolf.snt", "Player", 0, false);
}

void Panic(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("dog2", true);
SetEntityActive("dog3", true);
AddEnemyPatrolNode("dog2","node_14",0,"");
AddEnemyPatrolNode("dog2","node_15",0,"");
AddEnemyPatrolNode("dog2","node_14",0,"");
AddEnemyPatrolNode("dog2","node_16",3,"");
AddEnemyPatrolNode("dog3","node_17",0,"");
AddEnemyPatrolNode("dog3","node_18",3,"");
AddEnemyPatrolNode("dog3","node_19",3,"");
AddEnemyPatrolNode("dog3","node_20",0,"");
AddEnemyPatrolNode("dog3","node_22",0,"");
AddEnemyPatrolNode("dog3","node_23",0,"");
AddEnemyPatrolNode("dog3","node_24",0,"");
AddEnemyPatrolNode("dog3","node_18",0,"");
AddEnemyPatrolNode("dog3","node_17",0,"");
CheckPoint ("Checkpoint5", "PlayerStartArea_6", "DeathSettings3", "DeathHints", "Killed");
}

//---- Cave ----//

void EnterCave(string &in asParent, string &in asChild, int alState)
{
PlayMusic("Temple", true, 1.0f, 4.0f, 0, true);
CheckPoint ("Checkpoint7", "PlayerStartArea_7", "DeathSettings2", "DeathHints", "Fall");
AddTimer("cavesounds", 12, "cavesounds");
AddTimer("whisper", 35, "whispers");
}

void gate(string &in asEntity)
{
SetMoveObjectState("gate", 1.0f);
PlaySoundAtEntity("LeverSound","16_winch_bridge.snt","SoundArea", 0,true);
PlaySoundAtEntity("LeverSound","16_winch_bridge.snt","SoundArea2", 0,true);
SetEntityPlayerInteractCallback("lever", "", false);
AddTimer("gate2", 12, "gate2");
}

void gate2(string &in asTimer)
{
SetMoveObjectState("gate", 0.0f);
SetEntityPlayerInteractCallback("lever", "gate", false);
StopSound("LeverSound", 0.5f);
}

void gate3(string &in asEntity, int alState)
{
     if (alState == 1)
     {
SetMoveObjectState("gate2", 1.0f);
PlaySoundAtEntity("LeverSound","16_winch_bridge.snt","SoundArea3", 0,true);
PlaySoundAtEntity("LeverSound","16_winch_bridge.snt","SoundArea4", 0,true);
SetEntityConnectionStateChangeCallback("lever2", "");
AddTimer("gate4", 15, "gate4");
          return;
     }
}

void gate4(string &in asTimer)
{
SetMoveObjectState("gate2", 0.0f);
SetEntityConnectionStateChangeCallback("lever2", "gate3");
StopSound("LeverSound", 0.5f);
}

void CheckpointGate(string &in asParent, string &in asChild, int alState)
{
CheckPoint ("Checkpoint9", "PlayerStartArea_9", "DeathSettings4", "DeathHints", "Ch3water");
SetEntityActive("kaernk", true);
SetEntityActive("kaernk2", true);
}

void CreakSound(string &in asParent, string &in asChild, int alState)
{
CheckPoint ("Checkpoint11", "PlayerStartArea_11", "DeathSettings4", "DeathHints", "Ch3water");
PlaySoundAtEntity("","25_strain_wood","Player", 0,false);
}

void BoardBreak(string &in asParent, string &in asChild, int alState)
{
CheckPoint ("Checkpoint10", "PlayerStartArea_10", "DeathSettings4", "DeathHints", "Ch3water");
AddTimer("boardbreak2", 2, "boardbreak2");
PlaySoundAtEntity("","25_strain_wood","Player", 0,false);
}

void boardbreak2(string &in asTimer)
{
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaCreak", false);
PlaySoundAtEntity("","break_wood.snt","AreaCreak", 0,false);
SetEntityActive("wood", false);
}

void cavesounds(string &in asTimer)
{
AddTimer("cavesounds", 45, "cavesounds");
PlaySoundAtEntity("","04_rock.snt", "Player", 0, false);
StartScreenShake(0.03f,0.35f, 0.03f,4.5f);
}

void chapterend(string &in asEntity)
{	
SetMessage("Messages", "chapterend", 6);
AddTimer("chapterend2", 10, "chapterend2");
PlayMusic("08_amb_success.ogg", false, 1.0, 0, 0, true);
SetPlayerActive(false);
}

void chapterend2(string &in asTimer)
{	
ChangeMap("TheGraves.map", "PlayerStartArea_1", "","");
SetPlayerActive(true);
}

//---- Quests ----//

void Quest(string &in asEntity)
{
AddQuest("Ch3door", "Ch3door");
}

void Quest2(string &in asEntity)
{
AddQuest("Ch3beach", "Ch3beach");
SetMessage("Messages", "locked", 4);
}

//---- Death by fall ----//
//If player hits the ground too hard

void CollideAreaGround(string &in asParent, string &in asChild, int alState)
{
	AddDebugMessage("Speed is: "+GetPlayerYSpeed(), false);
	
	if(GetPlayerYSpeed() > -15) return; 
	
	GivePlayerDamage(200, "BloodSplat", true, true);
	PlayGuiSound("player_falldamage_max.snt", 1.0f);
        PlayGuiSound("L03_meat_snapsnt", 1.0f);
	StartScreenShake(0.3f, 0.5f, 0.1f, 0.4f);
        CheckPoint ("Checkpoint6", "PlayerStartArea_5", "DeathSettings2", "DeathHints", "Fall");
}

void CollideAreaGround2(string &in asParent, string &in asChild, int alState)
{
	AddDebugMessage("Speed is: "+GetPlayerYSpeed(), false);
	
	if(GetPlayerYSpeed() > -15) return; 
	
	GivePlayerDamage(200, "BloodSplat", true, true);
	PlayGuiSound("player_falldamage_max.snt", 1.0f);
        PlayGuiSound("L03_meat_snapsnt", 1.0f);
	StartScreenShake(0.3f, 0.5f, 0.1f, 0.4f);
}

void CollideAreaGround3(string &in asParent, string &in asChild, int alState)
{
	AddDebugMessage("Speed is: "+GetPlayerYSpeed(), false);
	
	if(GetPlayerYSpeed() > -5) return; 
	
	GivePlayerDamage(20, "BloodSplat", true, true);
	PlayGuiSound("player_falldamage_max.snt", 1.0f);
        PlayGuiSound("L03_meat_snapsnt", 1.0f);
        CheckPoint ("Checkpoint8", "PlayerStartArea_8", "DeathSettings2", "DeathHints", "Fall");
}

//---- Etc ----//

void Death(string &in asParent, string &in asChild, int alState) 
{
PlaySoundAtEntity("","15_player_burn","Player", 0,false);
GivePlayerDamage(0, "BloodSplat", false, true);
AddTimer("death2", 0.4, "death2");
}

void death2(string &in asTimer)
{
GivePlayerDamage(0, "BloodSplat", false, true);
AddTimer("death3", 0.5, "death3");
}

void death3(string &in asTimer)
{
PlaySoundAtEntity("","24_burn2","Player", 0,false);
GivePlayerDamage(0, "BloodSplat", false, true);
AddTimer("death4", 0.5, "death4");
SetPlayerCrouching(true);
}

void death4(string &in asTimer)
{
GivePlayerDamage(0, "BloodSplat", false, true);
AddTimer("death5", 0.5, "death5");
}

void death5(string &in asTimer)
{
GivePlayerDamage(0, "BloodSplat", false, true);
AddTimer("death6", 0.5, "death6");
}

void death6(string &in asTimer)
{
PlaySoundAtEntity("","15_player_burn","Player", 0,false);
GivePlayerDamage(200, "BloodSplat", false, true);
GivePlayerDamage(0, "BloodSplat", false, true);
GivePlayerDamage(0, "BloodSplat", false, true);
}

void whispers(string &in asTimer)
{
PlaySoundAtEntity("","HalluVoices.snt", "Player", 0, false);
AddTimer("whispers", 250, "whispers");
}

void Steps(string &in asParent, string &in asChild, int alState)
{
CreateParticleSystemAtEntity("slime", "ps_dust_falling_big_feet", "AreaFot", false);
PlaySoundAtEntity("","scare_steps_big","AreaFot", 0,false);
}

void phono(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("ch3hastobedone.ogg", "", "Voice", "00_Ch3hastobedone", false, "", 0, 0 );
PlaySoundAtEntity("","cell_basile.snt","PhonoArea", 0,false);
SetPlayerActive(false);
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);
AddTimer("intro12", 20, "intro12");
AddTimer("phono2", 2, "phono2");
          return;
     }
}

void phono2(string &in asTimer)
{
AddEffectVoice("No_get_away_from_me.ogg", "", "Voice", "00_Emma", false, "", 0, 0 );
AddTimer("phono3", 4, "phono3");
}

void phono3(string &in asTimer)
{
AddEffectVoice("ch3leephono.ogg", "", "Voice", "00_Ch3leephono", false, "", 0, 0 );
AddTimer("phono4", 1, "phono4");
}

void phono4(string &in asTimer)
{
AddEffectVoice("ch3almaphono.ogg", "", "Voice", "00_Ch3almaphono", false, "", 0, 0 );
AddTimer("phono5", 1, "phono5");
}

void phono5(string &in asTimer)
{
AddEffectVoice("ch3leephono2.ogg", "", "Voice", "00_Ch3leephono2", false, "", 0, 0 );
StartPlayerLookAt("LookAlma2", 5, 50, "");
}

void phonoharry(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("harryphono.ogg", "", "Voice", "00_Harryphono", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("intro12", 20, "intro12");
AddTimer("phonoharry2", 20, "phonoharry2");
          return;
     }
}

void phonoharry2(string &in asTimer)
{
AddDiary("DiaryHarry", "");
SetMessage("Messages", "diaryharry", 8);
}

void phonomichael(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("michaelphono.ogg", "", "Voice", "00_Michaelphono", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("intro12", 22, "intro12");
          return;
     }
}

void phonojefferson(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("jeffersonphono.ogg", "", "Voice", "00_Jeffersonphono", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("intro12", 32, "intro12");
          return;
     }
}

void UseWaxroll(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phono");
}

void UseWaxroll2(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phonoharry");
}

void UseWaxroll3(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phonomichael");
}

void UseWaxroll4(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phonojefferson");
}

void rat1(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_1", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_1", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_1", false);	
}

void rat2(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_2", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_2", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_2", false);	
}

void rat3(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_3", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_3", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_3", false);	
}

void notemusic(string &in asEntity)
{
AddTimer("notemusic2", 17, "notemusic2");
AddTimer("diary", 3, "diary");
PlayMusic("23_paper_alexander", false, 1.0f, 2.0f, 0, true);
}

void notemusic2(string &in asTimer)
{
PlayMusic("12_amb", true, 1.0f, 4.0f, 0, true);
}

void diary(string &in asTimer)
{
AddDiary("DiaryCh3Alma", "DiaryCh3Alma");
SetMessage("Messages", "almabasementdiary", 9);
}

void LanternOn(string &in asParent, string &in asChild, int alState)
{
SetLanternDisabled(false);
}

void LanternOff(string &in asParent, string &in asChild, int alState)
{
SetLanternDisabled(true);
}

//---- Messages ----//

void bonfire(string &in asEntity)
{
SetMessage("Messages", "bonfire", 8);
}

void interactbars(string &in asEntity)
{
SetMessage("Messages", "interactbars", 6);
}

void locked(string &in asEntity)
{
SetMessage("Messages", "locked", 4);
}

void budge(string &in asEntity)
{
SetMessage("Messages", "budge", 4);
}

void doorhard(string &in asParent, string &in asChild, int alState)
{
SetMessage("Messages", "doorhard", 6);
}

void NoWay(string &in asParent, string &in asChild, int alState)
{
AddEffectVoice("ch3death.ogg", "", "Voice", "00_Ch3death", false, "", 0, 0 );
}

void nowax(string &in asEntity)
{
SetMessage("Messages", "nowax", 4);
}

void notgoingback(string &in asEntity)
{
SetMessage("Messages", "notgoingback", 5);
}

void elevatorfail(string &in asEntity)
{
SetMessage("Messages", "elevatorfail", 5);
PlaySoundAtEntity("","14_elevator_clank.snt", "Player", 0, true);
}

//---- Death settings ----//

void DeathSettings(string &in asName, int alCount)
{
PlayMusic("19_event_brute.ogg", false, 1.0, 3, 0, true);
SetEntityActive("brute", true);
SetEntityActive("EnemieLeave", false);
AddEnemyPatrolNode("brute","node_1",0,"");
AddEnemyPatrolNode("brute","node_2",0,"");
AddEnemyPatrolNode("brute","node_3",0,"");
AddEnemyPatrolNode("brute","node_4",3,"");
AddEnemyPatrolNode("brute","node_5",3,"");
AddEnemyPatrolNode("brute","node_4",0,"");
AddEnemyPatrolNode("brute","node_3",0,"");
AddEnemyPatrolNode("brute","node_2",0,"");
AddEnemyPatrolNode("brute","node_1",0,"");
AddEnemyPatrolNode("brute","node_13",0,"");
SetPlayerHealth(50);
SetPlayerSanity(50);
}

void DeathSettings2(string &in asName, int alCount)
{
SetPlayerHealth(50);
SetPlayerSanity(50);
}

void DeathSettings3(string &in asName, int alCount)
{
SetPlayerHealth(50);
SetPlayerSanity(50);
SetEntityActive("dog2", true);
SetEntityActive("dog3", true);
AddEnemyPatrolNode("dog2","node_14",0,"");
AddEnemyPatrolNode("dog2","node_15",0,"");
AddEnemyPatrolNode("dog2","node_14",0,"");
AddEnemyPatrolNode("dog2","node_16",3,"");
AddEnemyPatrolNode("dog3","node_17",0,"");
AddEnemyPatrolNode("dog3","node_18",3,"");
AddEnemyPatrolNode("dog3","node_19",3,"");
AddEnemyPatrolNode("dog3","node_20",0,"");
AddEnemyPatrolNode("dog3","node_22",0,"");
AddEnemyPatrolNode("dog3","node_23",0,"");
AddEnemyPatrolNode("dog3","node_24",0,"");
AddEnemyPatrolNode("dog3","node_18",0,"");
AddEnemyPatrolNode("dog3","node_17",0,"");
PlaySoundAtEntity("","Wolf.snt", "Player", 0, false);
}

void DeathSettings4(string &in asName, int alCount)
{
SetPlayerHealth(50);
SetPlayerSanity(50);
SetEntityActive("kaernk", true);
SetEntityActive("kaernk2", true);
}

void OnEnter()
{	
StopMusic(10, 0);
}

void OnLeave()
{
StopMusic(10, 0);
SetupLoadScreen("loadscreentext", "...", 1, "load_ch3alma.png");
}