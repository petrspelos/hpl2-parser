void OnStart(){
	ConnectEntities("door_connection", "elevator_lever_1", "shelf_secret_door_1", false, 1, "CreateDust");
	ConnectEntities("door_connection", "elevator_lever_1", "shelf_secret_door_1", true, 0, "CreateDust");
	ConnectEntities("door_connection", "elevator_lever_1", "castlebase_secret_door_2", false, 1, "CreateDust");
	ConnectEntities("door_connection", "elevator_lever_1", "castlebase_secret_door_2", true, 0, "CreateDust");
	
	AddEntityCollideCallback("Player", "AmbienceArea_1", "libraryAmb", false, 0);
	AddEntityCollideCallback("Player", "ScriptArea_1", "lightbuffer", false, 0);
	AddEntityCollideCallback("Player", "ScriptArea_1", "call", true, 1);
	AddEntityCollideCallback("Player", "ScriptArea_4", "ambushWindowEvent", true, 1);
	AddEntityCollideCallback("Player", "ScriptArea_5", "HallAmb", false, 0);
	AddEntityCollideCallback("Player", "ScriptArea_6", "inspectationMusic", true, 1);
	
	for(int i=1; i<=4; i++)	{	CreateParticleSystemAtEntity("", "ps_water_rain.ps", "ParticleArea02_"+i, true);	}
	
	AddTimer("ringing", 70, "TimerList");
	//PlayPropAnimation(GetLocalVarString("_PhoneEnt"), "hammer", 0.0f, false, "");
	//PlaySoundAtEntity("ring", "phone_ring", GetLocalVarString("_PhoneEnt"), 0, false);
	//PlayPropAnimation(GetLocalVarString("_PhoneEnt"), "switchoff", 0, false, "");
	//PlaySoundAtEntity("", "phone_down", GetLocalVarString("_PhoneEnt"), 0, false);
	//SetLampLit(asEntity+"_light", true, false);
	//PlaySoundAtEntity("", "phone_up", asEntity, 0.0f, false);
	//PlayPropAnimation(asEntity, "switchon", 0.0f, false, "_PhoneCall");
	
	SetLocalVarInt("weatherAmbience", 2);	// 2 for rains
	
	for(int i=0; i<=2; i++)	AddEntityCollideCallback("WeathAmb1_"+i, "Player", "weatherAmb", false, 0);
	
}

void TimerList(string &in asTimer){
	if(asTimer == "ringing"){
		PlaySoundAtEntity("ring", "phone_ring", "phone_box_1", 0, false);
		PlayPropAnimation("phone_box_1", "hammer", 0.0f, false, "");
			SetEntityPlayerInteractCallback("phoneinteraction", "PhoneEvent", true);
			AddTimer("ringing", 5, "TimerList");
	}
	if(asTimer == "croutAmb"){ PlaySoundAtEntity("", "crout.snt", "ScriptArea_3", 0.0f, false);	AddTimer("", 25, "croutBreakingGate");	}
	if(asTimer == "impactGate1")	{	CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_3", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_4", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_5", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_6", true);	}
	if(asTimer == "impactGate2")	{	CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_15", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_22", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_2", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_1", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_7", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_8", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_9", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_10", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_11", true);	}
	if(asTimer == "impactGate3")	{	CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_21", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_16", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_12", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_13", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_14", true);	}
	if(asTimer == "impactGate4")	{	CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_23", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_24", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_25", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_27", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_17", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_20", true);	}
	if(asTimer == "impactGate5")	{	CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_18", true);	
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_19", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_26", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_28", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_29", true);
										CreateParticleSystemAtEntity("", "ps_break_wood_small.ps", "ParticleArea01_30", true);	}
	if(asTimer == "gatebroken")		{	SetEntityActive("castle_gate_arched01_open_1", true);	SetEntityActive("castle_gate_arched01_1", false);	
										FadeLightTo("BoxLight_1", 3, 3, 3, 3, -1, 0);	FadeLightTo("BoxLight_2", 1, 1, 1, 1, -1, 0);	FadeLightTo("SpotLight_5", 2, 2, 2, 2, -1, 0);	
										SetEntityActive("servant_brute_1", true); 	ShowEnemyPlayerPosition("servant_brute_1");	}
}

void weatherAmb(string &in asParent, string &in asChild, int alState){
	if(alState == 1)
		if(GetLocalVarInt("weatherAmbience") == 2)	PlaySoundAtEntity("ambienceQuart", "general_rain_m", "Player", 10, true);
		
	else
		StopSound("ambienceQuart", 5);
}

void croutBreakingGate(string &in asTimer){
if(GetLocalVarInt("GateInt") == 0)	{
	AddTimer("impactGate1", 0, "TimerList");
	AddTimer("impactGate2", 0.05f, "TimerList");
	AddTimer("impactGate3", 0.1f, "TimerList");
	AddTimer("impactGate4", 0.15f, "TimerList");
	AddTimer("impactGate5", 0.2f, "TimerList");
	
	PlaySoundAtEntity("", "crout_hit_gate", "castle_gate_arched01_1", 0, true);
	PlaySoundAtEntity("", "echoe_gate", "castle_gate_arched01_1", 0, true);
	AddTimer("ram", RandFloat(5,7), "croutBreakingGate");
	
	if(GetLocalVarInt("ambushShake")==1){	StartScreenShake(0.015f, 0.4f, 0.2f, 1.2f);	for(int i=0; i<=3; i++)	{	AddTimer("chandelier_large_"+i, 0, "shakeLamps");	}	}
	}
if(GetLocalVarInt("GateInt") == 1)	{
	SetEntityActive("castle_gate_arched01_open_1", true);	SetEntityActive("castle_gate_arched01_1", false);	
	FadeLightTo("BoxLight_1", 3, 3, 3, 3, -1, 0);	FadeLightTo("BoxLight_2", 1, 1, 1, 1, -1, 0);	FadeLightTo("SpotLight_5", 2, 2, 2, 2, -1, 0);	
	SetEntityActive("servant_brute_1", true); 	ShowEnemyPlayerPosition("servant_brute_1");
	PlaySoundAtEntity("", "crout_hit_gate", "castle_gate_arched01_1", 0, true);
	PlaySoundAtEntity("", "echoe_gate", "castle_gate_arched01_1", 0, true);
	PlayGuiSound("29_exit_door.ogg", 20);
	RemoveTimer("ram");
}
}

void inspectationMusic(string &in asParent, string &in asChild, int alState){
	PlayMusic("mansionInspectation.ogg", false, 1, 0, 0, false);
}

void shakeLamps(string &in door_name)	{	AddPropForce(door_name, 1150, 5800, 650, "world");	}

void PhoneEvent(string &in asArea){
	PlaySoundAtEntity("", "phone_up", "phone_box_1", 0.0f, false);
	PlayPropAnimation("phone_box_1", "switchon", 0.0f, false, "");
	RemoveTimer("ringing");	SetLampLit("phone_box_light", true, false);
	PlaySoundAtEntity("freq", "freq.snt", "phone_box_1", 0, false);
	SetPlayerMoveSpeedMul(0);
	
		if(GetLocalVarInt("PhoneCall") == 0){
				AddTimer("call1", 1, "PhoneTimerEvent");
				AddTimer("call2", 3.4f, "PhoneTimerEvent");
				AddTimer("hangup", 7, "PhoneTimerEvent");
				AddTimer("disconnect", 3.8f, "PhoneTimerEvent");
				AddTimer("ringing", 30, "TimerList");
		}
		if(GetLocalVarInt("PhoneCall") == 1){
						AddTimer("call3", 1, "PhoneTimerEvent");
						AddTimer("call4", 2.5f, "PhoneTimerEvent");
						AddTimer("call5", 9.4f, "PhoneTimerEvent");
						AddTimer("call6", 2+13, "PhoneTimerEvent");
						AddTimer("call7", 2+23, "PhoneTimerEvent");
						AddTimer("call8", 2+38.5f, "PhoneTimerEvent");
						AddTimer("call9", 2+50, "PhoneTimerEvent");
						AddTimer("call10", 2+53.5f, "PhoneTimerEvent");
						AddTimer("call11", 2+57, "PhoneTimerEvent");
						AddTimer("call12", 2+61.2f, "PhoneTimerEvent");
						AddTimer("call13", 2+72, "PhoneTimerEvent");
						AddTimer("call14", 2+79.5f, "PhoneTimerEvent");
						AddTimer("call15", 2+81, "PhoneTimerEvent");
						AddTimer("call16", 2+92.5f, "PhoneTimerEvent");
						AddTimer("call17", 2+95, "PhoneTimerEvent");
						AddTimer("call18", 2+101.5f, "PhoneTimerEvent");
						AddTimer("call19", 2+104, "PhoneTimerEvent");
						AddTimer("call20", 2+111.5f, "PhoneTimerEvent");
						AddTimer("call21", 2+113, "PhoneTimerEvent");
						AddTimer("call22", 2+127.5f, "PhoneTimerEvent");
						AddTimer("call23", 2+131, "PhoneTimerEvent");
						
				AddTimer("disconnect", 15+138.3f, "PhoneTimerEvent");
				AddTimer("hangup", 11+144, "PhoneTimerEvent");
		
		MovePlayerHeadPos(0.2f, 0, 0, 100, 100);
		CompleteQuest("friendQuest", "friendQuest");
		SetLocalVarInt("escapeRun", 1);	
		SetGlobalVarInt("GlobalTemple", 2);
			AddEntityCollideCallback("Player", "ScriptArea_6", "ambushChase", true, 1);			
		}
		
	AddLocalVarInt("PhoneCall", 1);
}

void PhoneTimerEvent(string &in asTimer){
	if(asTimer == "disconnect")	{	PlaySoundAtEntity("buffer", "disconnect.snt", "phone_box_1", 0.0f, false);	StopSound("freq", 0);	}
	if(asTimer == "call01-1")	{	PlaySoundAtEntity("buffer", "phonecall01_1.snt", "phone_box_1", 0.0f, false);	}
	if(asTimer == "call01-2")	{	PlayGuiSound("phonecall01_2.ogg", 3);}
	if(asTimer == "hangup")	{			PlayPropAnimation("phone_box_1", "switchoff", 0.25f, false, "");
										PlaySoundAtEntity("", "phone_down", "phone_box_1", 0, false);	SetLampLit("phone_box_light", false, false);
									if(GetLocalVarInt("escapeRun") ==0)	{	SetPlayerMoveSpeedMul(0.7f);	}
									if(GetLocalVarInt("escapeRun") ==1)	{	SetPlayerMoveSpeedMul(1);	SetPlayerRunSpeedMul(1);	}
									}
	if(asTimer == "call01-12")	{	StopSound("buffer", 0);	}
	
	for(int i=0; i<=23; i++)	{	if(asTimer == "call"+i)	{	AddEffectVoice("phonecall"+i+".ogg", "", "Amnesia", "Call"+i, false, "Player", 1, 1);		}	}

}

void ambushChase(string &in asParent, string &in asChild, int alState){
	AddTimer("gatebroken", 3.5f, "TimerList");
	RemoveTimer("croutBreakingGate");
	SetLocalVarInt("GateInt", 1);
}

void lightbuffer(string &in asParent, string &in asChild, int alState){
	if(alState == 1){	
		SetLampLit("chandelier_simple_short_1", false, true);	
	}
	else{
		SetLampLit("chandelier_simple_short_1", true, true);
	}
}

void IgniteEntranceCandle(string &in asEntityName, string &in asType){
	FadeLightTo("PointLight_5", 0.3, 0.2, 0.1, 0, -1, 7);
}
void CreateDust(string &in asConnectionName, string &in asMainEntity, string &in asConnectEntity, int alState){
	if(GetLocalVarInt("shelfMode") == 1){	SetMoveObjectState("shelf_secret_door_1", 0);	SetLocalVarInt("shelfMode", 0);		}
}
void libraryAmb(string &in asParent, string &in asChild, int alState){
	if(alState == 1){	
		PlaySoundAtEntity("libraryAmb", "03_insects", "Player", 12, true);	
	}
	else{
		StopSound("libraryAmb", 4);	
	}
}

void ambushWindowEvent(string &in asParent, string &in asChild, int alState){
	if(GetLocalVarInt("ambush") == 0)	{	PlaySoundAtEntity("", "AmbushNight.snt", "ScriptArea_3", 0.0f, false);	FadeLightTo("PointLight_26", 1, 0.7, 0, 1, -1, 7);	AddTimer("croutAmb", 15, "TimerList");}
	if(GetLocalVarInt("ambush") == 1)	{	}
	if(GetLocalVarInt("ambush") == 2)	{	}
	if(GetLocalVarInt("ambush") == 3)	{	}
	
}

void HallAmb(string &in asParent, string &in asChild, int alState){
	if(GetLocalVarInt("DayAmb") == 0){
		if(alState == 1){	SetLocalVarInt("ambushShake", 1);	}
		else			{	SetLocalVarInt("ambushShake", 0);	}
	}
}


void OnEnter(){
	
	SetMapDisplayNameEntry("mansion");
	AutoSave();
}

void OnLeave(){

}

