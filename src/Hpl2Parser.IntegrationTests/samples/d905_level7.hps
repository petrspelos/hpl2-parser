//  ___  _         _            _           _   _            ______ _ _ _       
// / _ \| |       | |          | |         | | | |           | ___ (_) | |      
/// /_\ \ |__   __| |_   _  ___| |_ ___  __| | | |__  _   _  | |_/ /_| | |_   _ 
//|  _  |  _ \ / _  | | | |/ __| __/ _ \/ _  | |  _ \| | | | | ___ \ | | | | | |
//| | | | |_) | (_| | |_| | (__| ||  __/ (_| | | |_) | |_| | | |_/ / | | | |_| |
//\_| |_/____/ \__,_|\__,_|\___|\__\___|\__,_| |____/ \__, | \____/|_|_|_|\__, |
//                                                     __/ |               __/ |
//                                                    |___/               |___/   
//													
//													By: Nick Debergue
//													
//****IF YOU'RE READING: Good luck understanding this gibberish of a language :)
//****Contact: perceptionist420@ymail.com
//****Or message me or comment at Mod/Indie DB! I'm always looking for collaborations!
//****
//****CHEATS: Search the code for "hax" (CAUTION: YOU MUST COMMENT/UNCOMMENT THESE SEGMENTS CORRECTLY FOR THE DESIRED EFFECT!)
//
//
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////---BEGINNING---//////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void startArea(string &in asEntity, int alState){
	SetMapDisplayNameEntry("LVL7");
	ClearSavedMaps();
	SetMessage("Messages", "lvl7Enter", 5);
	SetPlayerActive(false);
	FadeOut(0);
	AddTimer("startArea2", 1, "startArea2");
	
	//VARIABLES
	AddLocalVarInt("died", 0);
	AddLocalVarInt("gotHalfWay", 0);
	AddLocalVarInt("touchedPlank", 0);
	
	//Player
	AddEntityCollideCallback("Player", "startMonster1", "startMonster1", true, 1);
	AddEntityCollideCallback("Player", "fallAndDie", "fallAndDie", false, 1);
	AddEntityCollideCallback("Player", "startFarSideArea", "startFarSide", false, 1);
	
	AddEntityCollideCallback("Player", "startAmb", "startAmb", true, 1);
	AddEntityCollideCallback("Player", "startWind1", "startWind", true, 1);
	
	SetEntityPlayerInteractCallback("plank_mod_1", "plankInteract", true);
	SetEntityPlayerInteractCallback("plank_mod_2", "plankInteract", true);
	SetEntityPlayerInteractCallback("plank_mod_3", "plankInteract", true);
	
	//CHECKPOINT
	CheckPoint("beginning", "PlayerStartArea_1", "died", "deathHints", "hide");
	FadeRadialBlurTo(0, 0.5);
	
	//HAXE
	//GiveItem("lantern", "lantern", "", "lantern.tga", 1);
	//TeleportPlayer("PlayerStartArea_2");
	//AddEntityCollideCallback("Player", "passedBridge", "passedBridge", true, 1);
	//SetEntityActive("plank_mod_4", true);
	
	//
	AutoSave();
}

void startArea2(string &in asTimer){
	SetPlayerActive(true);
	FadeIn(2);
	
	//MUSIC
	PlayMusic("crickets.ogg", true, 0.5, 2, 1, true);
}

void died(string &in asName, int alCount){
	SetEntityActive("lurker_mod_1", false);
	SetEntityActive("lurker_mod_2", false);
	SetEntityActive("lurker_mod_3", false);
	
	//
	ResetProp("plank_mod_1");
	SetEntityActive("plank_mod_1", true);
	ResetProp("plank_mod_2");
	SetEntityActive("plank_mod_2", true);
	ResetProp("plank_mod_3");
	SetEntityActive("plank_mod_3", true);
	
	//
	SetEntityActive("plank_mod_4", false);//BRIDGE
	SetEntityActive("plank_mod_5", false);
	SetEntityActive("plank_mod_6", false);
	SetEntityActive("plank_mod_7", false);
	SetEntityActive("plank_mod_8", false);
	
	//
	if(asName == "beginning"){
		SetEntityActive("noMusicBrute_1", false);
		AddEntityCollideCallback("Player", "startMonster1", "startMonster1", true, 1);
		
	}else if(asName == "fallAndDie"){
		FadeIn(2);
		  
	}else if(asName == "farSide"){
		FadeIn(2);
		
		SetPlayerLampOil(1);
		GiveItemFromFile("Oil", "potion_oil.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		
		ResetProp("lurker_mod_1");
		SetLocalVarInt("touchedPlank", 0);
		SetLocalVarInt("died", GetLocalVarInt("died")+1);
		
		SetEntityPlayerInteractCallback("plank_mod_1", "plankInteract", true);
		SetEntityPlayerInteractCallback("plank_mod_2", "plankInteract", true);
		SetEntityPlayerInteractCallback("plank_mod_3", "plankInteract", true);
		
		//
		AutoSave();
		
	}else if(asName == "halfWay1"){
		FadeIn(2);
		
		SetPlayerLampOil(1);
		GiveItemFromFile("Oil", "potion_oil.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		
		SetEntityActive("ScriptArea_1", true);
		
		ResetProp("plank_mod_5");
		ResetProp("plank_mod_6");
		SetEntityActive("plank_mod_5", true);
		SetEntityActive("plank_mod_6", true);
		
		AddEntityCollideCallback("plank_mod_5", "placeBridge", "placeBridge", false, 1);
		AddEntityCollideCallback("plank_mod_6", "placeBridge", "placeBridge", false, 1);
		
		//
		ResetProp("lurker_mod_3");
		SetEntityActive("lurker_mod_3", true);
		
		//
		SetLocalVarInt("gotHalfWay", 1);
		
		//
		AutoSave();
		
	}else if(asName == "halfWay2"){
		FadeIn(2);
		
		SetPlayerLampOil(1);
		GiveItemFromFile("Oil", "potion_oil.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		GiveItemFromFile("Tinder Box", "tinderbox.ent");
		
		SetEntityActive("ScriptArea_1", true);
		
		ResetProp("plank_mod_7");
		ResetProp("plank_mod_8");
		SetEntityActive("plank_mod_7", true);
		SetEntityActive("plank_mod_8", true);
		
		AddEntityCollideCallback("plank_mod_7", "placeBridge", "placeBridge", false, 1);
		AddEntityCollideCallback("plank_mod_8", "placeBridge", "placeBridge", false, 1);
		
		//
		ResetProp("lurker_mod_2");
		SetEntityActive("lurker_mod_2", true);
		
		//
		SetLocalVarInt("gotHalfWay", 1);
		
		//
		AutoSave();
		
	}
}

//
void startAmb(string &in asParent, string &in asChild, int alState){
	PlayMusic("ambient6.ogg", true, 1, 4, 1, true);
	AddEntityCollideCallback("Player", "startCrickets", "startCrickets", true, 1);
}

void startCrickets(string &in asParent, string &in asChild, int alState){
	PlayMusic("crickets.ogg", true, 0.5, 4, 1, true);
	AddEntityCollideCallback("Player", "startAmb", "startAmb", true, 1);
}

//
void startWind(string &in asParent, string &in asChild, int alState){
	PlaySoundAtEntity("wind", "windy_passage.snt", "Player", 2, true);
	RemoveEntityCollideCallback("Player", "startWind1");
	RemoveEntityCollideCallback("Player", "startWind2");
	AddEntityCollideCallback("Player", "stopWind1", "stopWind", true, 1);
	AddEntityCollideCallback("Player", "stopWind2", "stopWind", true, 1);
}

void stopWind(string &in asParent, string &in asChild, int alState){
	StopSound("wind", 2);
	RemoveEntityCollideCallback("Player", "stopWind1");
	RemoveEntityCollideCallback("Player", "stopWind2");
	AddEntityCollideCallback("Player", "startWind1", "startWind", true, 1);
	AddEntityCollideCallback("Player", "startWind2", "startWind", true, 1);
}

//
void startMonster1(string &in asParent, string &in asChild, int alState){
	SetEntityActive("noMusicBrute_1", true);
	SetEnemySanityDecreaseActive("noMusicBrute_1", false);
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_0", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_1", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_2", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_3", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_4", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_5", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_6", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_7", 0.01, "");
	AddEnemyPatrolNode("noMusicBrute_1", "PathNodeArea_8", 0.01, "");
	//
	AddEntityCollideCallback("noMusicBrute_1", "stopMonster1", "stopMonster1", true, 1);
	
	/////////////HAXE!!!
	//TeleportPlayer("startFell");
}

void stopMonster1(string &in asParent, string &in asChild, int alState){
	FadeEnemyToSmoke("noMusicBrute_1", true);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//PLANKS GAME///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void plankInteract(string &in asEntity){
	if((GetLocalVarInt("touchedPlank") == 0)&&(GetLocalVarInt("gotHalfWay") == 0)){
		SetMessage("Messages", "makeBridge", 5);
		SetEntityActive("lurker_mod_1", true);
		
		//
		AddEntityCollideCallback("Player", "halfWayArea1", "halfWay1", false, 1);
		AddEntityCollideCallback("Player", "halfWayArea2", "halfWay2", false, 1);
		
		//
		AddEntityCollideCallback("plank_mod_1", "placeBridge", "placeBridge", false, 1);
		AddEntityCollideCallback("plank_mod_2", "placeBridge", "placeBridge", false, 1);
		AddEntityCollideCallback("plank_mod_3", "placeBridge", "placeBridge", false, 1);
		
		//
		SetLocalVarInt("touchedPlank", 1);
	}
}

void placeBridge(string &in asParent, string &in asChild, int alState){
	PlayGuiSound("puzzle_place_jar.ogg", 1);
	
	SetEntityActive("ScriptArea_1", false);
	SetEntityActive("plank_mod_1", false);
	SetEntityActive("plank_mod_2", false);
	SetEntityActive("plank_mod_3", false);
	SetEntityActive("plank_mod_4", true);
	SetEntityActive("plank_mod_5", false);
	SetEntityActive("plank_mod_6", false);
	SetEntityActive("plank_mod_7", false);
	SetEntityActive("plank_mod_8", false);
	
	//
	AddEntityCollideCallback("Player", "passedBridge", "passedBridge", true, 1);
}

void passedBridge(string &in asParent, string &in asChild, int alState){
	SetPlayerActive(false);
	FadeOut(2);
	AddTimer("passedBridgeT", 3, "passedBridgeT");
}

void passedBridgeT(string &in asTimer){
	StopSound("wind", 2);
	StartCredits("credits.ogg", false, "credits", "credits", -1);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//CHECKPOINTS///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void fallAndDie(string &in asParent, string &in asChild, int alState){
	if(GetLocalVarInt("gotHalfWay") == 1){
		FadeOut(1);
		AddTimer("fallAndDieA", 2, "fallAndDieA");
		
	}else{
		CheckPoint("fallAndDie", "startFell", "died", "deathHints", "watchStep");
		FadeOut(1);
		AddTimer("fallAndDieA", 2, "fallAndDieA");
		
	}
}

void fallAndDieA(string &in asTimer){
	SetPlayerHealth(0);
}

void startFarSide(string &in asParent, string &in asChild, int alState){
	if(GetLocalVarInt("gotHalfWay") == 0){
		if(GetLocalVarInt("died") > 1){
			CheckPoint("farSide", "startFarSide", "died", "deathHints", "usePlanks2");
		}else{
			CheckPoint("farSide", "startFarSide", "died", "deathHints", "usePlanks1");
		}
	}
}

void halfWay1(string &in asParent, string &in asChild, int alState){
	CheckPoint("halfWay1", "halfWay1", "died", "deathHints", "watchStep");
	SetLocalVarInt("gotHalfWay", 1);
}

void halfWay2(string &in asParent, string &in asChild, int alState){
	CheckPoint("halfWay2", "halfWay2", "died", "deathHints", "watchStep");
	SetLocalVarInt("gotHalfWay", 1);
}