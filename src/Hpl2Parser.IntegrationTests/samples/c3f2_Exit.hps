void OnStart()
{
SetEntityConnectionStateChangeCallback("lever_simple01_1", "StateChangeLever");
AddUseItemCallback("", "Gateway Key", "Lever Door0", "KeyOnDoor", true);
AddEntityCollideCallback("Player", "Area1", "GuardianVoice", true, 1);
AddEntityCollideCallback("Player", "Area2", "GuardianVoice2", true, 1);
SetEntityPlayerLookAtCallback("Scary_area", "Insanity1", true);
AddEntityCollideCallback("Player" , "Monsu Area 1" , "scareactivate" , true , 1);
AddEntityCollideCallback("Player" , "Monsu Area 2" , "scareactivate2" , true , 1);
AddEntityCollideCallback("Player" , "Monsu Area 3" , "scareactivate3" , true , 1);
AddEntityCollideCallback("Player" , "Monsu Area 4" , "scareactivate4" , true , 1);
AddEntityCollideCallback("Player", "The End", "CollideEnd", true, 1);
}








void OnEnter()
{
}

void StateChangeLever(string &in asEntity, int alState)
{
if(alState == 1){
SetLeverStuckState(asEntity, 1, true);
SetMoveObjectState("shelf_secret_door_1", 1.0f);
}
}

void KeyOnDoor(string &in asItem, string &in asEntity)
{
SetSwingDoorLocked("Lever Door0", false, true);
RemoveItem("Gateway Key");
PlaySoundAtEntity("", "unlock_door.snt", "Lever Door0", 0.0f, true);
}

void GuardianVoice(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","guardian_ontop", "Guardian_voice", 0, false);
}

void GuardianVoice2(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","guardian_distant3", "Rage_Guardian", 0, false);
}

void Insanity1(string &in entity, int alState)
{
PlaySoundAtEntity("", "react_scare.snt", "Player", 0, false);
GiveSanityDamage(20.0f, true);
AddTimer("Stoplook", 2.0f, "PlayerStopLook");
GiveSanityDamage(50,true);
AddPlayerBodyForce(0,0,100000,false);
}

void Door0(string &in entity)
{
SetMessage("Message", "Door0", 3.0f);    	
}

void scareactivate(string &in asParent , string &in asChild , int alState)
{
SetEntityActive("Monsu 1" , true);
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_1", 0.1f, "true");
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_2", 0.1f, "true");
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_3", 0.1f, "true");
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_4", 0.1f, "true");
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_5", 0.1f, "true");
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_6", 0.1f, "true");
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_7", 0.1f, "true");
AddEnemyPatrolNode("Monsu 1", "PathNodeArea_8", 0.1f, "true");
}

void scareactivate2(string &in asParent , string &in asChild , int alState)
{
SetEntityActive("Monsu 2" , true);
AddEnemyPatrolNode("Monsu 2", "PathNodeArea_9", 0.1f, "true");
AddEnemyPatrolNode("Monsu 2", "PathNodeArea_10", 0.1f, "true");
AddEnemyPatrolNode("Monsu 2", "PathNodeArea_11", 0.1f, "true");
AddEnemyPatrolNode("Monsu 2", "PathNodeArea_12", 0.1f, "true");
AddEnemyPatrolNode("Monsu 2", "PathNodeArea_13", 0.1f, "true");
AddEnemyPatrolNode("Monsu 2", "PathNodeArea_14", 0.1f, "true");
AddEnemyPatrolNode("Monsu 2", "PathNodeArea_15", 0.1f, "true");
}

void scareactivate3(string &in asParent , string &in asChild , int alState)
{
SetEntityActive("Monsu 3" , true);
AddEnemyPatrolNode("Monsu 3", "PathNodeArea_16", 0.1f, "true");
AddEnemyPatrolNode("Monsu 3", "PathNodeArea_17", 0.1f, "true");
AddEnemyPatrolNode("Monsu 3", "PathNodeArea_18", 0.1f, "true");
AddEnemyPatrolNode("Monsu 3", "PathNodeArea_19", 0.1f, "true");
AddEnemyPatrolNode("Monsu 3", "PathNodeArea_20", 0.1f, "true");
}

void scareactivate4(string &in asParent , string &in asChild , int alState)
{
SetEntityActive("Monsu 4" , true);
AddEnemyPatrolNode("Monsu 4", "PathNodeArea_21", 0.1f, "true");
AddEnemyPatrolNode("Monsu 4", "PathNodeArea_22", 0.1f, "true");
AddEnemyPatrolNode("Monsu 4", "PathNodeArea_23", 0.1f, "true");
AddEnemyPatrolNode("Monsu 4", "PathNodeArea_24", 0.1f, "true");
AddEnemyPatrolNode("Monsu 4", "PathNodeArea_25", 0.1f, "true");
AddEnemyPatrolNode("Monsu 4", "PathNodeArea_26", 0.1f, "true");
}

void CollideEnd(string &in asParent, string &in asChild, int alState)
{
    FadeOut(1.0f);
    AddTimer("credits", 2.0f, "TimerCredits");
}

void TimerCredits(string &in asTimer)
{
    StartCredits("credits.ogg", false, "Ending", "MyCredits", -1);
}

void OnLeave()
{
}

