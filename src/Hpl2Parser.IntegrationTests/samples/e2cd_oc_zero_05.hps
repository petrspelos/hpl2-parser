void OnStart()
{
	SetLocalVarInt("small_levers", 0);
	AddEntityCollideCallback("lever_small_lever_1", "lever1", "Lever1Placed", true, 1);
	AddEntityCollideCallback("lever_small_lever_1", "lever2", "Lever2Placed", true, 1);
	AddEntityCollideCallback("lever_small_lever_2", "lever1", "Lever1Placed", true, 1);
	AddEntityCollideCallback("lever_small_lever_2", "lever2", "Lever2Placed", true, 1);
	SetEntityConnectionStateChangeCallback("lever_small_1", "PushLever");
	SetEntityConnectionStateChangeCallback("lever_small_2", "PushLever");
	AutoSave();
}

void OnEnter()
{
	PlayMusic("06_amb", true, 1, 3, 0, true);
	CheckPoint("check01","PlayerStartArea_1", "CheckPoint01", "", "");
}

void CheckPoint01(string &in asName, int alCount)
{
	PlayMusic("06_amb", true, 1, 3, 0, true);
	ResetProp("lever_small_lever_1");
	ResetProp("lever_small_lever_2");
}

void Lever1Placed(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive(asParent, false);
	SetEntityActive(asChild, false);
	SetEntityActive("lever_small_mount_1", false);
	SetEntityActive("lever_small_1", true);
	PlayGuiSound("gameplay_open_chest", 1);
}

void Lever2Placed(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive(asParent, false);
	SetEntityActive(asChild, false);
	SetEntityActive("lever_small_mount_2", false);
	SetEntityActive("lever_small_2", true);
	PlayGuiSound("gameplay_open_chest", 1);
}

void PushLever(string &in asEntity, int alState)
{
	if (alState == -1)
	{
		if (GetLocalVarInt("small_levers") == 1)
		{
			SetEntityActive("wood_platform_3_bent", false);
			SetEntityActive("wood_platform_2", true);
			AddPropForce("potion_oil_large_1", 1, 1, 1, "world");
			AddPropForce("wood_box01_1", 1, 1, 1, "world");
			AddPropForce("wood_box02_1", 1, 1, 1, "world");
			AddPropForce("wood_box_small01_1", 1, 1, 1, "world");
			AddPropForce("wood_box_small01_2", 1, 1, 1, "world");
			SetLevelDoorLocked("level_dungeon_1", false);
			PlaySoundAtEntity("", "break_wood", "wood_platform_3_bent", 0, false);
			CreateParticleSystemAtEntity("", "ps_break_cavein.ps", "breakps", false);
		}
		else
		{
			SetLocalVarInt("small_levers", (GetLocalVarInt("small_levers") + 1));
			SetEntityActive("wood_platform_3", false);
			SetEntityActive("wood_platform_3_bent", true);
			AddPropForce("potion_oil_large_1", 10, 10, 10, "world");
			AddPropForce("wood_box01_1", 10, 10, 10, "world");
			AddPropForce("wood_box02_1", 10, 10, 10, "world");
			AddPropForce("wood_box_small01_1", 10, 10, 10, "world");
			AddPropForce("wood_box_small01_2", 10, 10, 10, "world");
			PlaySoundAtEntity("", "break_wood", "wood_platform_3_bent", 0, false);
			CreateParticleSystemAtEntity("", "ps_break_cavein.ps", "breakps", false);
		}
		SetEntityInteractionDisabled(asEntity, true);
	}
}

void BruteForce(string &in asEntity)
{
	SetLevelDoorLocked("level_dungeon_1", true);
	PlayMusic("10_event_coming", false, 1, 0, 1, true);
	PlaySoundAtEntity("", "door_level_cellar_close", "level_dungeon_1", 0, false);
	SetEntityActive("servant_brute_silent_0", true);
	for(int i = 1; i <= 99; i++)
	{
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_29", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_36", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_38", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_42", 2, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_38", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_41", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_38", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_36", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_0", "PathNodeArea_29", 0, "");
	}
	CheckPoint("check02","PlayerStartArea_2", "CheckPoint02", "", "");
}

void CheckPoint02(string &in asName, int alCount)
{
	SetPlayerCrouching(true);
	PlayMusic("21_amb", true, 1, 3, 0, true);
	PlayMusic("10_event_coming", false, 1, 0, 1, true);
	ResetProp("lever_small_lever_1");
	ResetProp("lever_small_lever_2");
	SetEntityActive("servant_brute_silent_1", true);
	for(int i = 1; i <= 99; i++)
	{
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_29", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_36", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_38", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_42", 2, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_38", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_41", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_38", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_36", 0, "");
		AddEnemyPatrolNode("servant_brute_silent_1", "PathNodeArea_29", 0, "");
	}
}

void CollideAreaFire(string &in asParent, string &in asChild, int alState)
{
	if(alState == 1) AddTimer("burn", 0.1f, "TimerBurnFire");
	else RemoveTimer("burn");
}
void InteractFire(string &in asEntity)
{
	TimerBurnFire("touch");
}
void TimerInteractFire(string &in asTimer)
{
	SetEntityPlayerInteractCallback("AreaFire", "InteractFire", true);
}
void TimerBurnFire(string &in asTimer)
{
	if(asTimer == "touch"){
		PlayGuiSound("15_player_burn.snt", 1.0f);
		GivePlayerDamage(5.0f, "BloodSplat", false,false);
		AddTimer("InteractFire", 1.0f, "TimerInteractFire");
		SetMessage("Message", "InteractFire", 4);
		return;
	}
	
	PlayGuiSound("15_player_burn.snt", 1.0f);
	GivePlayerDamage(5.0f, "BloodSplat", false,false);
	
	AddTimer("burn", 1.0f, "TimerBurnFire");
}

void OrbPieceTurq(string &in asEntity)
{
	SetGlobalVarInt("orbpiece_turquoise", 1);
	SetPlayerSanity(20);
	GiveSanityBoostSmall();
	GiveSanityBoostSmall();
	GiveSanityBoost();
}

void OnLeave()
{
	SetupLoadScreen("", "", 0, "cs_loadscreen6");
}