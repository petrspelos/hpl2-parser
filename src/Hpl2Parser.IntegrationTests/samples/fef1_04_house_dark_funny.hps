void OnEnter()
{
	if(ScriptDebugOn())
	{
		SetGlobalVarInt("FastSeekerAchievement", 1);
		SetGlobalVarInt("HealthAchievement", 1);
		SetGlobalVarInt("ItemsAchievement", 1);
		SetGlobalVarInt("NoDeathAchievement", 1);
		//SetGlobalVarInt("StatuesAchievement", 1);
		SetGlobalVarInt("WardrobeAchievement", 1);
		SetGlobalVarInt("EnemiesAchievement", 1);
		SetGlobalVarInt("PuzzleAchievement", 1);
		//SetGlobalVarInt("NoPuzzleAchievement", 1);
		SetGlobalVarInt("NoStatuesAchievement", 1);
		SetGlobalVarInt("SanityAchievement", 1);
		SetGlobalVarInt("SlimesAchievement", 1);
		SetGlobalVarInt("LightsAchievement", 1);
	}
	
	PreloadParticleSystem("ps_acid_web_dissolve.ps");
	PreloadParticleSystem("ps_dust_falling.ps");
	PreloadParticleSystem("ps_light_dust.ps");
	PreloadParticleSystem("ps_light_dust_large.ps");
	PreloadParticleSystem("ps_area_fog.ps");
	PreloadParticleSystem("ps_area_fog_large.ps");
	PreloadParticleSystem("ps_area_fog_small.ps");
	PreloadParticleSystem("ps_area_fog_sewer_long_warmup.ps");
	PreloadParticleSystem("ps_door_damage_wood.ps");
	PreloadParticleSystem("ps_break_wood.ps");
	
	PreloadParticleSystem("ps_break_glass.ps");
	
	PreloadSound("02_woosh");
	PreloadSound("02_guardian_idle_rand.snt");
	PreloadSound("04_ambience_wind_eerie.snt");
	PreloadSound("04_scare_dog.snt");
	PreloadSound("04_scare_piano.snt");
	PreloadSound("scare_wood_creak_walk.snt");
	PreloadSound("scare_wood_creak_scuf.snt");
	PreloadSound("12_epoxy_blow.snt");
	PreloadSound("12_noise_0.snt");
	PreloadSound("15_rock_break.snt");
	PreloadSound("05_event_bottles.snt");
	PreloadSound("general_thunder.snt");
	PreloadSound("custom_stories/Woods_of_lost_memories/sounds/enemy/chiu/alert.snt");
	
	PreloadSound("gameplay_acid_web.snt");
	PreloadSound("lock_door.snt");
	PreloadSound("locked_door.snt");
	PreloadSound("open_door.snt");
	PreloadSound("open_door_long.snt");
	PreloadSound("door_gate_bar_locked.snt");
	PreloadSound("door_mansion_close.snt");
	PreloadSound("door_mansion_open.snt");
	PreloadSound("close_door.snt");
	PreloadSound("close_door_long.snt");
	PreloadSound("unlock_door.snt");
	PreloadSound("react_breath.snt");
	PreloadSound("react_breath_slow.snt");
	PreloadSound("react_pant.snt");
	PreloadSound("react_scare.snt");
	PreloadSound("react_sigh.snt");
	PreloadSound("general_fire_burning.snt");
	PreloadSound("general_fire_burning_low.snt");
	PreloadSound("break_pottery.snt");
	PreloadSound("break_glass_bottle.snt");
	PreloadSound("break_glass_large.snt");
	PreloadSound("break_wood.snt");
	PreloadSound("break_wood_metal.snt");
	PreloadSound("guardian_activated.snt");
	PreloadSound("guardian_ontop.snt");
	PreloadSound("hit_wood.snt");
	PreloadSound("player_climb.snt");
	PreloadSound("player_crouch.snt");
	PreloadSound("player_jump.snt");
	PreloadSound("player_stand.snt");
	PreloadSound("roll_wood.snt");
	PreloadSound("slime_attack_normal_hit.snt");
	PreloadSound("slime_create.snt");
	PreloadSound("slime_loop.snt");
	PreloadSound("step_run_dirt.snt");
	PreloadSound("step_walk_dirt.snt");
	PreloadSound("step_sneak_dirt.snt");
	PreloadSound("step_run_fabric.snt");
	PreloadSound("step_walk_fabric.snt");
	PreloadSound("step_sneak_fabric.snt");
	PreloadSound("step_run_metal.snt");
	PreloadSound("step_walk_metal.snt");
	PreloadSound("step_sneak_metal.snt");
	PreloadSound("step_run_organic.snt");
	PreloadSound("step_walk_organic.snt");
	PreloadSound("step_sneak_organic.snt");
	PreloadSound("step_run_rock.snt");
	PreloadSound("step_walk_rock.snt");
	PreloadSound("step_sneak_rock.snt");
	PreloadSound("step_run_wood.snt");
	PreloadSound("step_run_wood_squeaky.snt");
	PreloadSound("step_walk_wood.snt");
	PreloadSound("step_walk_wood_squeaky.snt");
	PreloadSound("step_sneak_wood.snt");
	PreloadSound("step_sneak_wood_squeaky.snt");
	PreloadSound("flashback_flash.snt");
	PreloadSound("hurt_pant.snt");
	PreloadSound("sanity_damage.snt");
	PreloadSound("sanity_drain_high.snt");
	PreloadSound("sanity_drain_med.snt");
	PreloadSound("sanity_drain_low.snt");
	PreloadSound("sanity_heartbeat.snt");
	PreloadSound("sanity_pant.snt");
	PreloadSound("ui_add_quest.snt");
	PreloadSound("ui_lantern_off.snt");
	PreloadSound("ui_lantern_on.snt");
	PreloadSound("ui_sanity_gain.snt");
	PreloadSound("ui_terror_meter.snt");
	PreloadSound("enemy_hallucination_disappear.snt");

	SetMapDisplayNameEntry("HouseDark");
	
	if(GetGlobalVarInt("CellQuest") == 0)
	{
		AddTimer("checksanity", 6.0f, "TimerCheckSanity");
		CheckPoint ("CellVisionRespawn", "PlayerStartArea_2", "CPCellVision", "DeathHints", "SanityLow");
	}
	
	if(GetGlobalVarInt("HealthAchievement") == 1)
		AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("EnemiesAchievement") == 1)
	{
		SetEnemySanityDecreaseActive("grunt_1", false);
		SetEnemySanityDecreaseActive("suitor_1", false);
	}	
}

void OnLeave()
{
	RemoveTimer("addhealth");
	RemoveTimer("checkhealth");
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
}

void OnStart()
{
	AddEnemyPatrolNode("suitor_1", "PathNodeArea_1", 8.001f, "");

	AddEntityCollideCallback("Player", "AreaHearSteps", "CollideAreaHearSteps", true, 1);
	AddEntityCollideCallback("Player", "AreaHearPiano", "CollideAreaHearPiano", true, 1);
	AddEntityCollideCallback("Player", "AreaHearDog", "CollideAreaHearDog", true, 1);
	AddEntityCollideCallback("Player", "AreaCloseDoor", "CollideAreaCloseDoor", true, 1);
	AddEntityCollideCallback("Player", "AreaDestroyKitchenDoor", "CollideAreaDestroyKitchenDoor", true, 1);
	AddEntityCollideCallback("Player", "AreaCreateArmor_1", "CollideAreaCreateArmor", true, 1);
	AddEntityCollideCallback("Player", "AreaCreateArmor_2", "CollideAreaCreateArmor", true, 1);
	AddEntityCollideCallback("Player", "AreaWineJumpscare", "CollideAreaWineJumpscare", true, 1);

	AddUseItemCallback("ExplosiveWall", "chemical_container_epoxy_1", "mansionbase_secret_passage_1", "UsedExplosiveOnWall", true);
	AddUseItemCallback("keytolab", "key_laboratory_1", "mansion_3", "UsedKeyOnDoor", true);
	AddUseItemCallback("needlecellardoor", "hollow_needle_1", "cellar_wood01_1", "UsedKeyOnDoor", true);
	
	SetMapDisplayNameEntry("HouseDark");
	
	SetLightVisible("SpotLight_3", false);
	SetLightVisible("SpotLight_4", false);
	SetLightVisible("PointLight_10", false);
	
	SetPropHealth("mansion_1", 50.0f);
	
	SetMessage("Jack", "FindDarkRoom", 15.0f);
	
	StopMusic(0.1f, 0);
	
	AddQuest("CellMission1", "CellMission1");
	
	if(GetGlobalVarInt("MotherQuestFailed") == 1)
	{
		SetEntityActive("mom_statue_1", true);
		SetEntityActive("mom_statue_2", true);
	}
	if(GetGlobalVarInt("StorageQuestFailed") == 1) SetEntityActive("grunt_1", true);
	if(GetGlobalVarInt("WineQuestFailed") == 1) SetEntityActive("AreaWineJumpscare", true);
	if(GetGlobalVarInt("LibraryQuestFailed") == 1)
	{
		SetEntityActive("slime_library_1", true);
		SetSwingDoorLocked("mansion_1", true, false);
	}
	if(GetGlobalVarInt("StatuesAchievement") == 1) PlaySoundAtEntity("note_generic_1_sound", "02_statue_terror.snt", "note_generic_1", 0.0f, true);
	if(GetGlobalVarInt("PuzzleAchievement") == 1) SetPlayerSanity(100.0f);
	
	if(ScriptDebugOn())
	{
		if(HasItem("lantern_1") == false) GiveItemFromFile("lantern_1", "lantern.ent");
		if(HasItem("hollow_needle_1") == false) GiveItemFromFile("hollow_needle_1", "hollow_needle.ent");
		if(HasItem("ceremony_knife_1") == false) GiveItemFromFile("ceremony_knife_1", "ceremony_knife.ent");
	}
}

void TimerHealthAchievement(string &in asTimer)
{
	if(asTimer == "addhealth")
	{
		if(GetPlayerHealth() <= 98.0f)
		{
			AddPlayerHealth(2.0f);
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "checkhealth")
	{
		if(GetPlayerHealth() > 98.0f)
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "pausehealth")
	{
		RemoveTimer("addhealth");
		RemoveTimer("checkhealth");
	}
}

void TouchFathersDoor(string &in asEntity)
{
	if(GetGlobalVarInt("FatherQuestFailed") == 1)
	{
		AddTimer("scare", 0.8f, "TimerPlayerReactions");
		AddTimer("bang", 0.9f, "TimerBangDoor");
		PlaySoundAtEntity("brute_scream", "custom_stories/Woods_of_lost_memories/sounds/enemy/chiu/alert.snt", "Player", 0, false);
	}
}

void TimerBangDoor(string &in asTimer)
{
	CreateParticleSystemAtEntity("psbang", "ps_hit_wood.ps", "mansion_4", false);
	PlaySoundAtEntity("soundbang", "lurker_hit_wood.snt", "mansion_4", 0.0f, false);
	AddPropImpulse("mansion_4", 0, 0, 7.0f, "world");
}

void CollideAreaWineJumpscare(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("wine01_1", true);
	SetEntityActive("wine01_2", true);
	SetEntityActive("wine01_3", true);
	AddPropImpulse("wine01_1", 0, 0, 10, "world");
	AddPropImpulse("wine01_2", 0, 0, 10, "world");
	AddPropImpulse("wine01_3", 0, 0, 10, "world");
	
	PlayGuiSound("05_event_bottles", 0.4f);
	
	AddTimer("panteffect", 0.5f, "TimerPlayerReactions");
	AddTimer("breatheffect", 1.5f, "TimerPlayerReactions");
	AddTimer("", 0.5f, "TimerStopLook");
	StartPlayerLookAt("slime_6way_3", 5.0f, 5.0f, "");
}

void PickedUpNote(string &in asItem)
{
	if(asItem == "note_generic_1")
	{
		AddGlobalVarInt("StrangeNoteCount", 1);
		if(GetGlobalVarInt("StrangeNoteCount") == 1) AddQuest("StrangeNotesMission", "StrangeNotesMission");
		StopSound("note_generic_1_sound", 0.1f);
	}
}

void CPCellVision(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	AddGlobalVarInt("DarkDeathCount", 1);
	if(GetGlobalVarInt("NoPuzzleAchievement") == 1)
	{
		StopMusic(0.1f, 0);
		CompleteQuest("CellMission1", "CellMission1");
		CompleteQuest("CellMission2", "CellMission2");
		CompleteQuest("CellMission3", "CellMission3");
		SetupLoadScreen("LoadingHints", "17To18", 0, "game_loading_water.jpg");
		SetGlobalVarInt("CellQuest", 1);
		SetGlobalVarInt("CellQuestFailed", 1);
		RemoveTimer("scaresteps");
		RemoveTimer("scarepiano");
		RemoveItem("key_laboratory_1");
		StartEffectFlash(1.0f, 1.0f, 1.0f);
			
		ChangeMap("04_wood_east_funny.map", "PlayerStartArea_3", "02_woosh", "enemy_hallucination_disappear");
	}
	else if(GetGlobalVarInt("PuzzleAchievement") == 1)
	{
		if(alCount == 2)
		{
			StopMusic(0.1f, 0);
			CompleteQuest("CellMission1", "CellMission1");
			CompleteQuest("CellMission2", "CellMission2");
			CompleteQuest("CellMission3", "CellMission3");
			SetupLoadScreen("LoadingHints", "17To18", 0, "game_loading_water.jpg");
			SetGlobalVarInt("CellQuest", 1);
			SetGlobalVarInt("CellQuestFailed", 1);
			RemoveTimer("scaresteps");
			RemoveTimer("scarepiano");
			RemoveItem("key_laboratory_1");
			StartEffectFlash(1.0f, 1.0f, 1.0f);
			
			ChangeMap("04_wood_east_funny.map", "PlayerStartArea_3", "02_woosh", "enemy_hallucination_disappear");
		}
		else
		{
			AddTimer("checksanity", 6.0f, "TimerCheckSanity");
			SetEntityActive("suitor_1", true);
			SetPlayerSanity(75.0f);
			StopMusic(6.0f, 0);
			
			if(GetGlobalVarInt("StorageQuestFailed") == 1) SetEntityActive("grunt_1", true);
		}
	}
	else
	{
		if(alCount == 1)
		{
			StopMusic(0.1f, 0);
			CompleteQuest("CellMission1", "CellMission1");
			CompleteQuest("CellMission2", "CellMission2");
			CompleteQuest("CellMission3", "CellMission3");
			SetupLoadScreen("LoadingHints", "17To18", 0, "game_loading_water.jpg");
			SetGlobalVarInt("CellQuest", 1);
			SetGlobalVarInt("CellQuestFailed", 1);
			RemoveTimer("scaresteps");
			RemoveTimer("scarepiano");
			RemoveItem("key_laboratory_1");
			StartEffectFlash(1.0f, 1.0f, 1.0f);
			
			ChangeMap("04_wood_east_funny.map", "PlayerStartArea_3", "02_woosh", "enemy_hallucination_disappear");
		}
		else
		{
			AddTimer("checksanity", 6.0f, "TimerCheckSanity");
			SetEntityActive("suitor_1", true);
			SetPlayerSanity(55.0f);
			StopMusic(6.0f, 0);
			
			if(GetGlobalVarInt("StorageQuestFailed") == 1) SetEntityActive("grunt_1", true);
		}
	}
}

void CollideAreaCreateArmor(string &in asParent, string &in asChild, int alState)
{
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	if(asChild == "AreaCreateArmor_1")
	{
		SetPropActiveAndFade("scare_armor_1", true, 3.0f);
		SetPropActiveAndFade("scare_armor_2", true, 3.0f);
		SetPropActiveAndFade("scare_armor_3", true, 3.0f);
		
		AddPropImpulse("chair_nice01_6", 25, 0, 0, "world");
	}
	if(asChild == "AreaCreateArmor_2")
	{
		SetPropActiveAndFade("scare_armor_4", true, 3.0f);
		SetPropActiveAndFade("scare_armor_5", true, 3.0f);
		SetPropActiveAndFade("scare_armor_6", true, 3.0f);
	}
}

void CollideAreaHearDog(string &in asParent, string &in asChild, int alState)
{
	AddTimer("panteffect", 0.5f, "TimerPlayerReactions");
	AddTimer("breatheffect", 3.5f, "TimerPlayerReactions");
	AddTimer("", 2.5f, "TimerStopLook");
	PlaySoundAtEntity("dogsound", "04_scare_dog", "AreaDogSound", 0, false);
	SetPropActiveAndFade("scare_armor_8", true, 3.0f);
	StartPlayerLookAt("AreaDogSound", 7.5f, 10.0f, "");
}

void CollideAreaCloseDoor(string &in asParent, string &in asChild, int alState)
{
	AddTimer("breath", 1.0f, "TimerPlayerReactions");
	AddPropImpulse("mansion_2", -10, 0, 0, "world");
}

void CollideAreaDestroyKitchenDoor(string &in asParent, string &in asChild, int alState)
{
	AddTimer("scare", 0.7f, "TimerPlayerReactions");
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	SetPropHealth("mansion_8", 0);
	
	StartScreenShake(0.02f, 0.75f, 0.1f, 0.1f);
}

void CollideAreaHearSteps(string &in asParent, string &in asChild, int alState)
{
	AddTimer("resetspeedmul", 3.0f, "TimerStopLook");
	SetPlayerMoveSpeedMul(0.7f);
	SetPlayerRunSpeedMul(0.7f);
	SetPlayerLookSpeedMul(0.7f);
	AddTimer("scare", 0.5f, "TimerPlayerReactions");
	AddTimer("breath", 3.0f, "TimerPlayerReactions");
	AddTimer("breath", 6.5f, "TimerPlayerReactions");
	AddTimer("scaresteps1", 0.001f, "TimerPlaySound");
	StartPlayerLookAt("AreaStepsSound_1", 2.5f, 2.5f, "");
}

void CollideAreaHearPiano(string &in asParent, string &in asChild, int alState)
{
	AddTimer("resetspeedmul", 3.0f, "TimerStopLook");
	SetPlayerMoveSpeedMul(0.7f);
	SetPlayerRunSpeedMul(0.7f);
	SetPlayerLookSpeedMul(0.7f);
	AddTimer("scare", 1.0f, "TimerPlayerReactions");
	AddTimer("breath", 3.5f, "TimerPlayerReactions");
	AddTimer("breath", 7.0f, "TimerPlayerReactions");
	AddTimer("scarepiano1", 0.001f, "TimerPlaySound");
	StartPlayerLookAt("armour_rusty_complete_23", 2.5f, 2.5f, "");
}

void TimerPlaySound(string &in asTimer)
{
	if(asTimer == "scaresteps1")
	{
		AddTimer("scaresteps", RandFloat(6.0f, 9.0f), "TimerPlaySound");
		PlaySoundAtEntity("scarestepssound_1", "scare_wood_creak_walk", "AreaStepsSound_1", 0, false);
	}
	if(asTimer == "scaresteps")
	{
		AddTimer("scaresteps", RandFloat(6.0f, 9.0f), "TimerPlaySound");
		GiveSanityDamage(1.0f, false);
		SetLocalVarInt("ScareStepsSoundVar", RandInt(1, 10));
		if(GetLocalVarInt("ScareStepsSoundVar") == 1) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_walk", "AreaStepsSound_1", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 2) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_scuf", "AreaStepsSound_1", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 3) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_walk", "AreaStepsSound_2", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 4) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_scuf", "AreaStepsSound_2", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 5) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_walk", "AreaStepsSound_3", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 6) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_scuf", "AreaStepsSound_3", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 7) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_walk", "AreaStepsSound_4", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 8) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_scuf", "AreaStepsSound_4", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 9) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_walk", "AreaStepsSound_5", 0, false);
		if(GetLocalVarInt("ScareStepsSoundVar") == 10) PlaySoundAtEntity("scarestepssound", "scare_wood_creak_scuf", "AreaStepsSound_5", 0, false);
	}
	if(asTimer == "scarepiano1")
	{
		AddTimer("scarepiano", RandFloat(25.0f, 30.0f), "TimerPlaySound");
		PlaySoundAtEntity("scarepianosound", "04_scare_piano", "piano_1", 0, false);
		SetLightVisible("SpotLight_3", true);
		SetLightVisible("SpotLight_4", true);
		SetLightVisible("PointLight_10", true);
	}
	if(asTimer == "scarepiano")
	{
		AddTimer("scarepiano", RandFloat(25.0f, 30.0f), "TimerPlaySound");
		GiveSanityDamage(3.0f, false);
		PlaySoundAtEntity("scarepianosound", "04_scare_piano", "piano_1", 0, false);
	}
}

void TimerCheckSanity(string &in asTimer)
{
	if(asTimer == "checksanity")
	{
		if(GetPlayerSanity() > 30.0f)
		{
			StopMusic(3.0f, 0);
			FadeSepiaColorTo(0.0f, 3.0f);
		}
		if(GetPlayerSanity() <= 30.0f)
		{
			PlayMusic("03_amb", true, 0.1f, 5.0f, 0, false);
			FadeSepiaColorTo(0.6f, 3.0f);
		}
		if(GetPlayerSanity() <= 10.0f)
		{
			PlaySoundAtEntity("break_glass_large", "break_glass_large", "Player", 0.1f, false);
			GivePlayerDamage(10000000, "Slash", true, true);
			FadeSepiaColorTo(0.0f, 3.0f);
		}
		else
		{
			AddTimer("checksanity", 6.0f, "TimerCheckSanity");
		}
	}
}

void DiscoverBrokenWall(string &in asEntity)
{
	PlayGuiSound("impact_rock_low3.ogg", 1.0f);
	PlayGuiSound("15_rock_break", 0.7f);
	SetMessage("Jack", "41", 8.0f);
	
	CompleteQuest("CellMission1", "CellMission1");
	if(HasItem("chemical_container_epoxy_1") == false) AddQuest("CellMission2", "CellMission2");
}

void UsedExplosiveOnWall(string &in asItem, string &in asEntity)
{
	CompleteQuest("CellMission1", "CellMission1");
	CompleteQuest("CellMission2", "CellMission2");
	CompleteQuest("CellMission3", "CellMission3");
	SetupLoadScreen("LoadingHints", "17To18", 0, "game_loading_water.jpg");
	StopMusic(0.1f, 0);
	SetGlobalVarInt("CellQuest", 1);
	RemoveTimer("scaresteps");
	RemoveTimer("scarepiano");
	PlaySoundAtEntity("epoxyignite", "12_epoxy_blow", "mansionbase_secret_passage_1", 0, false);
	StartEffectFlash(1.0f, 1.0f, 1.0f);
	ChangeMap("04_wood_east_funny.map", "PlayerStartArea_3", "02_woosh", "enemy_hallucination_disappear");
}

void PickedUpExplosive(string &in asEntity)
{
	FadeLightTo("PointLight_1", 0.0f, 0.0f, 0.0f, 0.0f, -1, 1);
	SetPropActiveAndFade("scare_armor_7", true, 4.0f);
	
	CompleteQuest("CellMission2", "CellMission2");
	if(QuestIsCompleted("CellMission1")) AddQuest("CellMission3", "CellMission3");
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
	SetSwingDoorLocked(asEntity, false, false);
	if(asItem == "key_laboratory_1") RemoveItem(asItem);
}

void TimerFadeScreen(string &in asTimer)
{
	if(asTimer == "fadein")
	{
		FadeIn(2.0f);
	}
	if(asTimer == "fadeout")
	{
		FadeOut(2.0f);
	}
	if(asTimer == "fadeinactiveplayer")
	{
		FadeIn(2.0f);
		SetPlayerActive(true);
	}
	if(asTimer == "fadeoutactiveplayer")
	{
		FadeOut(2.0f);
		SetPlayerActive(true);	
	}	
}

void TimerStopLook(string &in asTimer)
{
	if(asTimer == "resetspeedmul")
	{
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerLookSpeedMul(1.0f);
		if(GetGlobalVarInt("FastSeekerAchievement") == 1)
			SetPlayerRunSpeedMul(1.175f);
		if(GetGlobalVarInt("WardrobeAchievement") == 1)
			SetPlayerJumpForceMul(1.175f);
	}
	if(asTimer == "activeplayer")
	{
		SetPlayerActive(true);
	}
	StopPlayerLookAt();
}

void TimerPlayerReactions(string &in asTimer)
{
	if(asTimer == "scareeffect")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "breatheffect")
	{
		PlayGuiSound("react_breath", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "sigheffect")
	{
		PlayGuiSound("react_sigh", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "panteffect")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "scare")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, true);
	}
	else if(asTimer == "breath")
	{
		PlayGuiSound("react_breath", 0.5f);
		GiveSanityDamage(4.0f, false);
	}
	else if(asTimer == "sigh")
	{
		PlayGuiSound("react_sigh", 0.5f);
		GiveSanityDamage(2.0f, false);
	}
	else if(asTimer == "pant")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, true);
	}
}