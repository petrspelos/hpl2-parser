void OnEnter()
{
	if(ScriptDebugOn())
	{
		SetGlobalVarInt("FastSeekerAchievement", 1);
		SetGlobalVarInt("HealthAchievement", 1);
		SetGlobalVarInt("ItemsAchievement", 1);
		SetGlobalVarInt("NoDeathAchievement", 1);
		//SetGlobalVarInt("StatuesAchievement", 1);
		SetGlobalVarInt("WardrobeAchievement", 1);
		SetGlobalVarInt("EnemiesAchievement", 1);
		SetGlobalVarInt("PuzzleAchievement", 1);
		//SetGlobalVarInt("NoPuzzleAchievement", 1);
		SetGlobalVarInt("NoStatuesAchievement", 1);
		SetGlobalVarInt("SanityAchievement", 1);
		SetGlobalVarInt("SlimesAchievement", 1);
		SetGlobalVarInt("LightsAchievement", 1);
	}
	
	PreloadParticleSystem("ps_acid_web_dissolve.ps");
	PreloadParticleSystem("ps_dust_falling.ps");
	PreloadParticleSystem("ps_light_dust.ps");
	PreloadParticleSystem("ps_light_dust_large.ps");
	PreloadParticleSystem("ps_area_fog.ps");
	PreloadParticleSystem("ps_area_fog_large.ps");
	PreloadParticleSystem("ps_area_fog_small.ps");
	PreloadParticleSystem("ps_area_fog_sewer_long_warmup.ps");
	PreloadParticleSystem("ps_door_damage_wood.ps");
	PreloadParticleSystem("ps_break_wood.ps");
	PreloadParticleSystem("ps_hit_wood.ps");
	
	PreloadSound("01_ambience_forest.snt");
	PreloadSound("02_acid_web.snt");
	PreloadSound("02_ambience_wind_heavy.snt");
	PreloadSound("02_bush_rand.snt");
	PreloadSound("02_insanity_whisper_loop.snt");
	PreloadSound("02_insanity_whisper_rand.snt");
	PreloadSound("02_woosh.snt");
	PreloadSound("02_attack_knife.snt");
	PreloadSound("02_guardian_idle_rand.snt");
	PreloadSound("03_insanity_baby_cry_rand.snt");
	PreloadSound("03_teleport.snt");
	PreloadSound("03_woman_death.snt");
	PreloadSound("03_music_box.snt");
	PreloadSound("03_piano_hit_1.snt");
	PreloadSound("03_piano_hit_2.snt");
	PreloadSound("03_piano_hit_3.snt");
	PreloadSound("03_piano_hit_4.snt");
	PreloadSound("lurker_hit_wood.snt");
	PreloadSound("piano_tile_blue.snt");
	PreloadSound("piano_tile_red.snt");
	PreloadSound("piano_tile_yellow.snt");
	PreloadSound("piano_tile_orange.snt");
	PreloadSound("piano_tile_green.snt");
	PreloadSound("piano_tile_purple.snt");
	PreloadSound("piano_tile_full.snt");
	PreloadSound("00_laugh.snt");
	PreloadSound("scare_wall_stomp.snt");
	PreloadSound("gameplay_tick.snt");
	PreloadSound("lock_door.snt");
	PreloadSound("16_lever_stuck.snt");
	PreloadSound("01_door.snt");
	PreloadSound("guardian_distant2.snt");
	PreloadSound("ui_use_tinderbox.snt");
	
	PreloadSound("gameplay_acid_web.snt");
	PreloadSound("lock_door.snt");
	PreloadSound("locked_door.snt");
	PreloadSound("open_door.snt");
	PreloadSound("open_door_long.snt");
	PreloadSound("door_gate_bar_locked.snt");
	PreloadSound("door_mansion_close.snt");
	PreloadSound("door_mansion_open.snt");
	PreloadSound("close_door.snt");
	PreloadSound("close_door_long.snt");
	PreloadSound("unlock_door.snt");
	PreloadSound("react_breath.snt");
	PreloadSound("react_breath_slow.snt");
	PreloadSound("react_pant.snt");
	PreloadSound("react_scare.snt");
	PreloadSound("react_sigh.snt");
	PreloadSound("general_fire_burning.snt");
	PreloadSound("general_fire_burning_low.snt");
	PreloadSound("break_pottery.snt");
	PreloadSound("break_glass_bottle.snt");
	PreloadSound("break_glass_large.snt");
	PreloadSound("break_wood.snt");
	PreloadSound("break_wood_metal.snt");
	PreloadSound("guardian_activated.snt");
	PreloadSound("guardian_ontop.snt");
	PreloadSound("hit_wood.snt");
	PreloadSound("player_climb.snt");
	PreloadSound("player_crouch.snt");
	PreloadSound("player_jump.snt");
	PreloadSound("player_stand.snt");
	PreloadSound("roll_wood.snt");
	PreloadSound("slime_attack_normal_hit.snt");
	PreloadSound("slime_create.snt");
	PreloadSound("slime_loop.snt");
	PreloadSound("step_run_dirt.snt");
	PreloadSound("step_walk_dirt.snt");
	PreloadSound("step_sneak_dirt.snt");
	PreloadSound("step_run_fabric.snt");
	PreloadSound("step_walk_fabric.snt");
	PreloadSound("step_sneak_fabric.snt");
	PreloadSound("step_run_metal.snt");
	PreloadSound("step_walk_metal.snt");
	PreloadSound("step_sneak_metal.snt");
	PreloadSound("step_run_organic.snt");
	PreloadSound("step_walk_organic.snt");
	PreloadSound("step_sneak_organic.snt");
	PreloadSound("step_run_rock.snt");
	PreloadSound("step_walk_rock.snt");
	PreloadSound("step_sneak_rock.snt");
	PreloadSound("step_run_wood.snt");
	PreloadSound("step_run_wood_squeaky.snt");
	PreloadSound("step_walk_wood.snt");
	PreloadSound("step_walk_wood_squeaky.snt");
	PreloadSound("step_sneak_wood.snt");
	PreloadSound("step_sneak_wood_squeaky.snt");
	PreloadSound("flashback_flash.snt");
	PreloadSound("hurt_pant.snt");
	PreloadSound("sanity_damage.snt");
	PreloadSound("sanity_drain_high.snt");
	PreloadSound("sanity_drain_med.snt");
	PreloadSound("sanity_drain_low.snt");
	PreloadSound("sanity_heartbeat.snt");
	PreloadSound("sanity_pant.snt");
	PreloadSound("ui_add_quest.snt");
	PreloadSound("ui_lantern_off.snt");
	PreloadSound("ui_lantern_on.snt");
	PreloadSound("ui_sanity_gain.snt");
	PreloadSound("ui_terror_meter.snt");
	PreloadSound("enemy_hallucination_disappear.snt");

	SetMapDisplayNameEntry("Wood3");
	
	CheckClearedVisions();
	
	AddEntityCollideCallback("Player", "AreaActiveGrunt_1", "CollideAreaActiveGrunt", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveGrunt_2", "CollideAreaActiveGrunt", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveBrute_1", "CollideAreaActiveBrute", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveBrute_2", "CollideAreaActiveBrute", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveBrute_3", "CollideAreaActiveBrute", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveBrute_4", "CollideAreaActiveBrute", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveSuitor_1", "CollideAreaActiveSuitor", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveSuitor_2", "CollideAreaActiveSuitor", false, 1);
	AddEntityCollideCallback("Player", "AreaActiveSuitor_3", "CollideAreaActiveSuitor", false, 1);
	
	SetPlayerActive(true);
	
	for(int i=1; i<14; i++) SetEntityInteractionDisabled("torch_static01_" + i, true);
	if(GetLocalVarInt("WineRainVar") == 0)
	{
		for(int q=2; q<=60; q++) SetEntityActive("wine01_" + q, false);
		for(int w=9; w<=60; w++) SetEntityActive("wine02_" + w, false);
	}
	else
	{
		for(int q=2; q<=60; q++) SetEntityActive("wine01_" + q, true);
		for(int w=9; w<=60; w++) SetEntityActive("wine02_" + w, true);
		PlayGuiSound("scare_whine_loop4.ogg", 1.0f);
		SetLocalVarInt("WineRainVar", 0);
	}
	
	SetEntityActive("vase01_1", false);
	
	SetLightVisible("PointLight_9", false);
	
	if(GetGlobalVarInt("HealthAchievement") == 1)
		AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
		
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
}

void OnLeave()
{
	RemoveTimer("addhealth");
	RemoveTimer("checkhealth");
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	RemoveItem("stone_hammer_1");
}

void OnStart()
{
	for(int i=6; i<53; i++) AddEntityCollideCallback("Player", "AreaLitLantern_"+i, "CollideAreaLitLantern", true, 1);
	for(int i=1; i<14; i++)
	{
		AddEntityCollideCallback("Player", "AreaLitTorch_"+i, "CollideAreaLitTorch", true, 1);
		SetEntityInteractionDisabled("torch_static01_" + i, true);
	}
	for(int i=1;i<=4;i++) AddEntityCollideCallback("SecretBook_"+i, "AreaSecretBook_"+i, "CollideSecretBook", false, 0); 
	for(int i=1; i<=12; i++) AddEntityCollideCallback("Player", "AreaDanStatue_" + i, "CollideAreaDanStatue", false, 0);
	
	AddEntityCollideCallback("Player", "AreaLitLantern_1", "CollideAreaLitLantern1", true, 1);
	AddEntityCollideCallback("Player", "AreaLitLantern_2", "CollideAreaLitLantern2", true, 1);
	AddEntityCollideCallback("Player", "AreaLitLantern_3", "CollideAreaLitLantern3", true, 1);
	AddEntityCollideCallback("Player", "AreaLitLantern_4", "CollideAreaLitLantern4", true, 1);
	AddEntityCollideCallback("Player", "AreaLitLantern_5", "CollideAreaLitLantern5", true, 1);
	
	AddEntityCollideCallback("Player", "AreaStartVision_1", "CollideAreaStartVision", true, 1);
	AddEntityCollideCallback("Player", "AreaStartVision_2", "CollideAreaStartVision", true, 1);
	AddEntityCollideCallback("Player", "AreaStartVision_3", "CollideAreaStartVision", true, 1);
	
	AddEntityCollideCallback("Player", "AreaDiscoverMaze_1", "CollideAreaDiscoverMaze", true, 1);
	AddEntityCollideCallback("Player", "AreaDiscoverMaze_2", "CollideAreaDiscoverMaze", true, 1);
	
	AddEntityCollideCallback("Player", "AreaLoadWoodPart4", "CollideAreaLoadWoodPart4", true, 1);
	
	AddEntityCollideCallback("Player", "AreaStatueNote05Scares", "CollideAreaStatueNoteScares", true, 1);
	
	AddEntityCollideCallback("Player", "AreaLibraryQuest", "CollideAreaLibraryQuest", true, 1);
	
	AddEntityCollideCallback("Player", "AreaGiantWoman", "CollideAreaGiantWoman", false, 1);
	
	AddUseItemCallback("MazeKeyDoor1", "mazekey_1", "mazedoor_1", "UsedKeyOnDoor", true);
	AddUseItemCallback("MazeKeyDoor2", "mazekey_2", "mazedoor_2", "UsedKeyOnDoor", true);
	AddUseItemCallback("KnifeWeb2", "ceremony_knife_1", "web_2", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeWeb1", "ceremony_knife_1", "web_1", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeWall1", "ceremony_knife_1", "slime_anim_wall_1", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeCeiling1", "ceremony_knife_1", "slime_anim_ceiling_1", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeWall2", "ceremony_knife_1", "slime_anim_wall_2", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeCeiling2", "ceremony_knife_1", "slime_anim_ceiling_2", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeWall3", "ceremony_knife_1", "slime_anim_wall_3", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeCeiling3", "ceremony_knife_1", "slime_anim_ceiling_3", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeWall4", "ceremony_knife_1", "slime_anim_wall_4", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeCeiling4", "ceremony_knife_1", "slime_anim_ceiling_4", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeWall5", "ceremony_knife_1", "slime_anim_wall_5", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeCeiling5", "ceremony_knife_1", "slime_anim_ceiling_5", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeWall6", "ceremony_knife_1", "slime_anim_wall_6", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlime6Way", "ceremony_knife_1", "slime_6way_18", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlimeWine", "ceremony_knife_1", "slime_wine_1", "UsedKnifeOnSlime", false);
	AddUseItemCallback("HammerPiano", "stone_hammer_1", "mazepiano_3", "UsedHammerOnPiano", true);
	
	SetEntityPlayerInteractCallback("note_generic_1", "PickedUpNote", true);
	SetEntityPlayerInteractCallback("note_generic_2", "PickedUpNote", true);
	SetEntityPlayerInteractCallback("note_generic_3", "PickedUpNote", true);
	SetEntityPlayerInteractCallback("note_paper01_1", "PickedUpNote", true);
	SetEntityPlayerInteractCallback("note_paper01_2", "PickedUpNote", true);
	SetEntityPlayerInteractCallback("note_paper01_3", "PickedUpNote", true);
	SetEntityPlayerInteractCallback("mazekey_1", "PickedUpKey", true);
	SetEntityPlayerInteractCallback("mazekey_2", "PickedUpKey", true);
	SetEntityPlayerInteractCallback("AreaPlayPianoMelody_1", "TouchPianoMelodyArea", false);
	SetEntityPlayerInteractCallback("AreaPlayPianoMelody_2", "TouchPianoMelodyArea", false);
	SetEntityPlayerInteractCallback("AreaTileRed", "TouchPianoTile", false);
	SetEntityPlayerInteractCallback("AreaTileGreen", "TouchPianoTile", false);
	SetEntityPlayerInteractCallback("AreaTilePurple", "TouchPianoTile", false);
	SetEntityPlayerInteractCallback("AreaTileYellow", "TouchPianoTile", false);
	SetEntityPlayerInteractCallback("AreaTileBlue", "TouchPianoTile", false);
	SetEntityPlayerInteractCallback("AreaTileOrange", "TouchPianoTile", false);
	
	SetEntityActive("web_1", true);
	SetEntityActive("web_2", true);
	
	SetMessage("Woman", "WakeUpJack", 6.0f);

	SetMapDisplayNameEntry("Wood3");
	
	CheckPoint ("DefaultRespawn", "PlayerStartArea_1", "CPDefaultRespawn", "DeathHints", "HideAndSurvive");

	PlaySoundAtEntity("web_1_sound", "slime_loop", "web_1", 1.0f, true);
	PlaySoundAtEntity("web_2_sound", "slime_loop", "web_2", 1.0f, true);
	PlayMusic("03_wood_theme.ogg", true, 1.0f, 1.3f, 0, false);
	
	SetLightVisible("PointLight_4", false);
	SetLightVisible("PointLight_5", false);
	SetLightVisible("PointLight_6", false);
	
	if(GetGlobalVarInt("MotherQuestFailed") == 1) SetEntityActive("note_bro_fail", true);
	else SetEntityActive("note_bro_success", true);
	
	if(ScriptDebugOn())
	{
		SetGlobalVarInt("MotherQuest", 1);
		//SetGlobalVarInt("MotherQuestFailed", 1);
		SetGlobalVarInt("FatherQuest", 1);
		//SetGlobalVarInt("FatherQuestFailed", 1);
		SetGlobalVarInt("StorageQuest", 1);
		//SetGlobalVarInt("StorageQuestFailed", 1);
		
		if(HasItem("lantern_1") == false) GiveItemFromFile("lantern_1", "lantern.ent");
		if(HasItem("hollow_needle_1") == false) GiveItemFromFile("hollow_needle_1", "hollow_needle.ent");
		if(HasItem("ceremony_knife_1") == false) GiveItemFromFile("ceremony_knife_1", "ceremony_knife.ent");
	}
	
	if(GetGlobalVarInt("GlobalDeathCount") > 0) SetGlobalVarInt("NoDeathAchievement", 0);
	else
	{
		AddTimer("NoDeathAchievement", 9.0f, "TimerUnlockAchievement");
	}
}

void TimerHealthAchievement(string &in asTimer)
{
	if(asTimer == "addhealth")
	{
		if(GetPlayerHealth() <= 98.0f)
		{
			AddPlayerHealth(2.0f);
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "checkhealth")
	{
		if(GetPlayerHealth() > 98.0f)
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "pausehealth")
	{
		RemoveTimer("addhealth");
		RemoveTimer("checkhealth");
	}
}

void CollideAreaLibraryQuest(string &in asParent, string &in asChild, int alState)
{
	AddQuest("LibraryBooksMission", "LibraryBooksMission");
}

void CollideAreaGiantWoman(string &in asParent, string &in asChild, int alState)
{
	//PlayGuiSound("ui_insanity_touch.ogg", 0.7f);
	PlayGuiSound("03_teleport", 1.0f);
	PlayGuiSound("00_laugh", 0.9f);
	
	GivePlayerDamage(4.0f, "BloodSplat", true, false);
	GiveSanityDamage(8.0f, true);
	
	AddPlayerBodyForce(0.0f, 0.0f, 9000*2.5f, false);
}

void TouchCursedTorch(string &in asEntity)
{
	AddTimer("torches", 5.9f, "TimerFailQuest");
	FadeLightTo("PointLight_8", 0.0f, 0.0f, 0.0f, 0.0f, -1, 2);
	SetEntityActive(asEntity, false);
	SetLampLit("torch_bad", false, true);
	SetEntityInteractionDisabled("torch_bad", true);
	GivePlayerDamage(50.0f, "BloodSplat", true, false);
	PlayGuiSound("ui_fire_damage.ogg", 0.7f);
	PlayGuiSound("ui_insanity_touch.ogg", 0.7f);
	SetPlayerMoveSpeedMul(0.5f);
	SetPlayerRunSpeedMul(0.5f);
	SetPlayerLookSpeedMul(0.5f);
	for(int i=1; i<14; i++)
	{		
		SetLampLit("torch_static01_" + i, false, false);
		SetEntityActive("AreaLitTorch_" + i, false);
		SetLocalVarInt("LitTorchVar_" + i, 0);
	}
}

void UsedHammerOnPiano(string &in asItem, string &in asEntity)
{
	AddTimer("piano", 5.0f, "TimerFailQuest");

	FadeEnemyToSmoke("suitor_1", false);
	FadeEnemyToSmoke("suitor_2", false);
	FadeLightTo("mazelight_3", 0.0f, 0.0f, 0.0f, 0.0f, -1, 2);
	SetLeverStuckState(asEntity, -1, false);
													
	SetEntityActive("AreaTileRed", false);
	SetEntityActive("AreaTileGreen", false);
	SetEntityActive("AreaTilePurple", false);
	SetEntityActive("AreaTileYellow", false);
	SetEntityActive("AreaTileBlue", false);
	SetEntityActive("AreaTileOrange", false);
													
	SetLightVisible("LightTileRed", false);
	SetLightVisible("LightTileGreen", false);
	SetLightVisible("LightTilePurple", false);
	SetLightVisible("LightTileYellow", false);
	SetLightVisible("LightTileBlue", false);
	SetLightVisible("LightTileOrange", false);
	
	SetPlayerActive(false);
	
	PlaySoundAtEntity("soundbang", "lurker_hit_wood.snt", asEntity, 0.7f, false);
	PlaySoundAtEntity("destroypianosound0", "03_piano_hit_1.snt", asEntity, 0.1f, false);
	CreateParticleSystemAtEntity("hammerdust0", "ps_hit_wood.ps", asEntity, false);
	AddTimer("hit1", 1.0f, "TimerHitPiano");
	AddTimer("hit2", 2.0f, "TimerHitPiano");
	AddTimer("hit3", 3.0f, "TimerHitPiano");
	AddTimer("hit4", 4.0f, "TimerHitPiano");
	
	RemoveItem(asItem);
}

void TimerHitPiano(string &in asTimer)
{
	if(asTimer == "hit1") 
	{
		CreateParticleSystemAtEntity("hammerdust1", "ps_hit_wood.ps", "AreaTileBlue", false);
		PlaySoundAtEntity("destroypianosound1", "03_piano_hit_2.snt", "AreaTileBlue", 0.1f, false);
	}
	if(asTimer == "hit2") 
	{
		CreateParticleSystemAtEntity("hammerdust2", "ps_hit_wood.ps", "AreaTileRed", false);
		PlaySoundAtEntity("destroypianosound2", "03_piano_hit_3.snt", "AreaTileRed", 0.1f, false);
	}
	if(asTimer == "hit3") 
	{
		CreateParticleSystemAtEntity("hammerdust3", "ps_hit_wood.ps", "AreaTilePurple", false);
		PlaySoundAtEntity("destroypianosound3", "03_piano_hit_4.snt", "AreaTilePurple", 0.1f, false);
	}
	if(asTimer == "hit4") 
	{
		CreateParticleSystemAtEntity("hammerdust4", "ps_hit_wood.ps", "AreaTileOrange", false);
		PlaySoundAtEntity("destroypianosound4", "03_piano_hit_1.snt", "AreaTileOrange", 0.1f, false);
	}
}

void TimerFailQuest(string &in asTimer)
{
	if(asTimer == "torches")
	{
		GiveSanityDamage(7.0f, true);
		PlayGuiSound("21_alex_low_freq_rumble", 0.7f);
		SetLocalVarInt("LitTorchCount", 0);
		AddTimer("resetspeedmul", 2.5f, "TimerStopLook");
		PlayMusic("17_puzzle.ogg", false, 1.0f, 0.2f, 10, false);
		PlaySoundAtEntity("begonewebsound", "guardian_distant2", "web_1", 0.1f, false);
		StartPlayerLookAt("web_1", 2.5f, 2.5f, "");
		StartScreenShake(0.15f, 1.5f, 1, 2);
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0.1f);
		SetPlayerLookSpeedMul(0.1f);
		SetPropHealth("web_1", 0);
		CompleteQuest("DestroyWoodMazeSlime", "DestroyWoodMazeSlime");
		StopSound("web_1_sound", 2.0f);
		FadeLightTo("PointLight_3", 0.0f, 0.0f, 0.0f, 0.0f, -1, 2);
		for(int s=1; s<=22; s++)
		{
			SetPropActiveAndFade("slime_torch_" + s, true, 2.0f);
			PlaySoundAtEntity("slime_torch_sound_" + s, "slime_loop", "slime_torch_" + s, 1.0f, true);
			AddUseItemCallback("KnifeSlimeTorch" + s, "ceremony_knife_1", "slime_torch_" + s, "UsedKnifeOnSlime", false);
		}
	}
	else if(asTimer == "piano")
	{
		SetPlayerActive(true);
		GiveSanityDamage(14.0f, true);
		PlayGuiSound("21_alex_low_freq_rumble", 0.7f);
		AddTimer("resetspeedmul", 2.5f, "TimerStopLook");
		PlayMusic("05_event_falling.ogg", false, 1.0f, 0.2f, 10, false);
		PlaySoundAtEntity("begoneangelsound1", "03_woman_death.snt", "angel_statue_1", 0.1f, false);
		PlaySoundAtEntity("begoneangelsound2", "player_react_guardian2.snt", "angel_statue_1", 0.6f, false);
		StartScreenShake(0.15f, 1.5f, 1, 2);
		StartPlayerLookAt("angel_statue_1", 1.0f, 1.0f, "");
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0.1f);
		SetPlayerLookSpeedMul(0.1f);
		SetPropActiveAndFade("angel_statue_1", false, 4.0f);
		SetPropActiveAndFade("mazepiano_3", false, 8.0f);
		SetEntityActive("AreaGiantWoman", false);
		SetEntityActive("block_box_355", false);
		SetEntityActive("block_box_295", false);
		SetEntityActive("slime_6way_18", false);
		if(GetLocalVarInt("SolvedPuzzlesCount") == 0) AddTimer("NoPuzzleAchievement", 16.0f, "TimerUnlockAchievement");
	}
}

void TimerUnlockAchievement(string &in asTimer)
{
	AddQuest(asTimer, asTimer);
	if(asTimer == "NoPuzzleAchievement") PlayMusic("04_puzzle_acid", false, 0.7f, 0.5f, 10, false);
	else PlayMusic("00_achievement_unlocked", false, 0.7f, 0.5f, 10, false);
	SetGlobalVarInt(asTimer, 1);
	SetMessage("Hints", asTimer, 10.0f);
	if(asTimer == "StatuesAchievement")
	{
		SetGlobalVarInt(asTimer, 1);
		PlaySoundAtEntity("note_generic_1_sound", "02_statue_terror.snt", "note_generic_1", 0.0f, true);
		PlaySoundAtEntity("note_generic_2_sound", "02_statue_terror.snt", "note_generic_2", 0.0f, true);
		PlaySoundAtEntity("note_generic_3_sound", "02_statue_terror.snt", "note_generic_3", 0.0f, true);
	}
	else if(asTimer == "EnemiesAchievement")
	{
		SetEnemySanityDecreaseActive("grunt_1", false);
		SetEnemySanityDecreaseActive("grunt_2", false);
		SetEnemySanityDecreaseActive("brute_1", false);
		SetEnemySanityDecreaseActive("brute_2", false);
		SetEnemySanityDecreaseActive("brute_3", false);
		SetEnemySanityDecreaseActive("brute_4", false);
		SetEnemySanityDecreaseActive("suitor_1", false);
		SetEnemySanityDecreaseActive("suitor_2", false);
		SetEnemySanityDecreaseActive("suitor_3", false);
	}
}

void CollideAreaStatueNoteScares(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("vase01_1", true);
}

void CollideAreaLoadWoodPart4(string &in asParent, string &in asChild, int alState)
{
	CompleteQuest("LibraryBooksMission", "LibraryBooksMission");
	CompleteQuest("DestroyWoodSlime", "DestroyWoodSlime");
	CompleteQuest("DestroyWoodMazeSlime", "DestroyWoodMazeSlime");
	ChangeMap("04_wood_east_funny.map", "PlayerStartArea_1", "", "");
}	

void TouchPianoTile(string &in asEntity)
{
	if(asEntity == "AreaTileRed")
	{
		PlaySoundAtEntity("redtilesound", "piano_tile_red.snt", asEntity, 0.0f, false);
		CheckPianoPuzzle(asEntity);
	}
	if(asEntity == "AreaTileGreen")
	{	
		PlaySoundAtEntity("greentilesound", "piano_tile_green.snt", asEntity, 0.0f, false);
		CheckPianoPuzzle(asEntity);
	}
	if(asEntity == "AreaTilePurple")
	{
		PlaySoundAtEntity("purpletilesound", "piano_tile_purple.snt", asEntity, 0.0f, false);
		CheckPianoPuzzle(asEntity);
	}
	if(asEntity == "AreaTileYellow")
	{
		PlaySoundAtEntity("yellowtilesound", "piano_tile_yellow.snt", asEntity, 0.0f, false);
		CheckPianoPuzzle(asEntity);
	}
	if(asEntity == "AreaTileBlue")
	{
		PlaySoundAtEntity("bluetilesound", "piano_tile_blue.snt", asEntity, 0.0f, false);
		CheckPianoPuzzle(asEntity);
	}
	if(asEntity == "AreaTileOrange")
	{
		PlaySoundAtEntity("orangetilesound", "piano_tile_orange.snt", asEntity, 0.0f, false);
		CheckPianoPuzzle(asEntity);
	}
	if(GetLocalVarInt("PianoPuzzleFailed") == 1)
	{
		SetEntityActive("AreaTileRed", false);
		SetEntityActive("AreaTileGreen", false);
		SetEntityActive("AreaTilePurple", false);
		SetEntityActive("AreaTileYellow", false);
		SetEntityActive("AreaTileBlue", false);
		SetEntityActive("AreaTileOrange", false);
		GiveSanityDamage(8.0f, true);
		PlayGuiSound("03_teleport", 1.0f);
		PlayGuiSound("00_laugh", 0.7f);
		TeleportPlayer("PlayerStartArea_8");
		SetLocalVarInt("PianoPuzzleFailed", 0);
		SetLocalVarInt("PianoPuzzleState", 0);
		AddTimer("pianotiles", 2.0f, "TimerAddCollide");
	}
}

void CheckPianoPuzzle(string &in asEntity)
{
	if(GetLocalVarInt("PianoPuzzleFailed") == 0)
	{
		if(GetLocalVarInt("PianoPuzzleState") == 0)
		{
			if(asEntity == "AreaTileRed") AddLocalVarInt("PianoPuzzleState", 1);
			else SetLocalVarInt("PianoPuzzleFailed", 1);
		}
		else
		{
			if(GetLocalVarInt("PianoPuzzleState") == 1)
			{
				if(asEntity == "AreaTileBlue") AddLocalVarInt("PianoPuzzleState", 1);
				else SetLocalVarInt("PianoPuzzleFailed", 1);
			}
			else
			{
				if(GetLocalVarInt("PianoPuzzleState") == 2)
				{
					if(asEntity == "AreaTileGreen") AddLocalVarInt("PianoPuzzleState", 1);
					else SetLocalVarInt("PianoPuzzleFailed", 1);
				}
				else
				{
					if(GetLocalVarInt("PianoPuzzleState") == 3)
					{
						if(asEntity == "AreaTileRed") AddLocalVarInt("PianoPuzzleState", 1);
						else SetLocalVarInt("PianoPuzzleFailed", 1);
					}
					else
					{
						if(GetLocalVarInt("PianoPuzzleState") == 4)
						{
							if(asEntity == "AreaTileBlue") AddLocalVarInt("PianoPuzzleState", 1);
							else SetLocalVarInt("PianoPuzzleFailed", 1);
						}
						else
						{
							if(GetLocalVarInt("PianoPuzzleState") == 5)
							{
								if(asEntity == "AreaTileYellow") AddLocalVarInt("PianoPuzzleState", 1);
								else SetLocalVarInt("PianoPuzzleFailed", 1);
							}
							else
							{
								if(GetLocalVarInt("PianoPuzzleState") == 6)
								{
									if(asEntity == "AreaTilePurple") AddLocalVarInt("PianoPuzzleState", 1);
									else SetLocalVarInt("PianoPuzzleFailed", 1);
								}
								else
								{
									if(GetLocalVarInt("PianoPuzzleState") == 7)
									{
										if(asEntity == "AreaTileYellow") AddLocalVarInt("PianoPuzzleState", 1);
										else SetLocalVarInt("PianoPuzzleFailed", 1);
									}
									else
									{
										if(GetLocalVarInt("PianoPuzzleState") == 8)
										{
											if(asEntity == "AreaTileBlue") AddLocalVarInt("PianoPuzzleState", 1);
											else SetLocalVarInt("PianoPuzzleFailed", 1);
										}
										else
										{
											if(GetLocalVarInt("PianoPuzzleState") == 9)
											{
												if(asEntity == "AreaTileOrange")
												{
													GiveSanityBoost();
													AddLocalVarInt("SolvedPuzzlesCount", 1);
													if(GetLocalVarInt("SolvedPuzzlesCount") == 2) AddTimer("PuzzleAchievement", 27.0f, "TimerUnlockAchievement");
													AddTimer("resetspeedmul", 2.5f, "TimerStopLook");
													PlayMusic("03_maze_piano_theme", false, 0.7f, 2.0f, 10, false);
													PlaySoundAtEntity("begoneangelstatue", "03_woman_death", "angel_statue_1", 0.1f, true);
													PlayGuiSound("enemy_hallucination_disappear", 0.8f);
													StartPlayerLookAt("angel_statue_1", 1.0f, 1.0f, "");
													SetPlayerMoveSpeedMul(0.1f);
													SetPlayerRunSpeedMul(0.1f);
													SetPlayerLookSpeedMul(0.1f);
													SetPropActiveAndFade("angel_statue_1", false, 4.0f);
													SetEntityActive("AreaGiantWoman", false);
													SetEntityActive("block_box_355", false);
													SetEntityActive("block_box_295", false);
													SetEntityActive("slime_6way_18", false);
													FadeEnemyToSmoke("suitor_1", false);
													FadeEnemyToSmoke("suitor_2", false);
													FadeLightTo("mazelight_3", 0.0f, 0.0f, 0.0f, 0.0f, -1, 2);
													SetLeverStuckState("mazepiano_3", -1, false);
													
													SetEntityActive("AreaTileRed", false);
													SetEntityActive("AreaTileGreen", false);
													SetEntityActive("AreaTilePurple", false);
													SetEntityActive("AreaTileYellow", false);
													SetEntityActive("AreaTileBlue", false);
													SetEntityActive("AreaTileOrange", false);
													
													SetLightVisible("LightTileRed", false);
													SetLightVisible("LightTileGreen", false);
													SetLightVisible("LightTilePurple", false);
													SetLightVisible("LightTileYellow", false);
													SetLightVisible("LightTileBlue", false);
													SetLightVisible("LightTileOrange", false);
													
													SetEntityInteractionDisabled("note_generic_5", true);
													SetEntityInteractionDisabled("stone_hammer_1", true);
													SetLightVisible("PointLight_9", false);
													RemoveUseItemCallback("HammerPiano");
													RemoveItem("stone_hammer_1");
												}
												else SetLocalVarInt("PianoPuzzleFailed", 1);
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

void TouchPianoMelodyArea(string &in asEntity)
{
	AddTimer(asEntity, 30.0f, "TimerActiveArea");
	PlaySoundAtEntity("pianomelodycomplete", "piano_tile_full", asEntity, 0.0f, false);
	SetEntityActive(asEntity, false);
}

void TimerActiveArea(string &in asTimer)
{
	SetEntityActive(asTimer, true);
}

void PickedUpKey(string &in asItem)
{
	if(asItem == "mazekey_1")
	{
		FadeLightTo("mazelight_1", 0, 0, 0, 0, -1, 2.0f);
	}
	if(asItem == "mazekey_2")
	{
		FadeLightTo("mazelight_2", 0, 0, 0, 0, -1, 2.0f);
	}
}

void CollideAreaDiscoverMaze(string &in asParent, string &in asChild, int alState)
{
	RemoveAnyActiveMonster();
	if(asChild == "AreaDiscoverMaze_1")
	{
		if(GetPlayerSanity() <= 20) SetPlayerSanity(50.0f);
	
		FadeOut(0.3);
		
		AddTimer("scare", 0.3f, "TimerPlayerReactions");	
		AddTimer("breath", 2.0f, "TimerPlayerReactions");
		AddTimer("breath", 4.0f, "TimerPlayerReactions");
		AddTimer("breatheffect", 6.0f, "TimerPlayerReactions");
		AddTimer("laugh", 5.5f, "TimerPlaySound");
		
		AddTimer("TeleportHowl1", 0.5f, "TimerTeleportHowl");	
		AddTimer("TeleportDone1", 3.5f, "TimerTelportDone");
	
		PlaySoundAtEntity("stomp","scare_wall_stomp","Player", 0, false);
		
		FadePlayerFOVMulTo(4.0f, 4.0f);
		SetRadialBlurStartDist(0.1f);
		FadeRadialBlurTo(1.0f, 5.0f);
	
		StartEffectFlash(0.2, 0.1,0.3);
	
		FadeGlobalSoundVolume(0, 0.3);
		StopMusic(0.3f, 0);
		StartScreenShake(0.1, 4.7, 0.05, 0.5);
	
		FadePlayerFOVMulTo(0.5, 3);
	}
	else if(asChild == "AreaDiscoverMaze_2")
	{
		if(GetPlayerSanity() <= 20) SetPlayerSanity(50.0f);
	
		FadeOut(0.3);
		
		AddTimer("scare", 0.3f, "TimerPlayerReactions");	
		AddTimer("breath", 2.0f, "TimerPlayerReactions");
		AddTimer("breath", 4.0f, "TimerPlayerReactions");
		AddTimer("breatheffect", 6.0f, "TimerPlayerReactions");
		AddTimer("laugh", 5.5f, "TimerPlaySound");
		
		AddTimer("TeleportHowl2", 0.5f, "TimerTeleportHowl");	
		AddTimer("TeleportDone2", 3.5f, "TimerTelportDone");
	
		PlaySoundAtEntity("stomp","scare_wall_stomp","Player", 0, false);
		
		FadePlayerFOVMulTo(4.0f, 4.0f);
		SetRadialBlurStartDist(0.1f);
		FadeRadialBlurTo(1.0f, 5.0f);
	
		StartEffectFlash(0.2, 0.1,0.3);
	
		FadeGlobalSoundVolume(0, 0.3);
		StartScreenShake(0.1, 4.7, 0.05, 0.5);
	
		FadePlayerFOVMulTo(0.5, 3);
		
		SetEntityActive("suitor_1", false);
	}
}

void TimerPlaySound(string &in asTimer)
{
	if(asTimer == "laugh") PlayGuiSound("00_laugh", 0.7f);
}

void TimerTeleportHowl(string &in asTimer)
{
	PlaySoundAtEntity("howl","guardian_activated.snt","Player", 0, false);
	SetPlayerActive(false);
	if(asTimer == "TeleportHowl1")
	{
		for(int i=1; i<=174 ; i++) SetPropActiveAndFade("mazewall_" + i, true, 7.0f);
		for(int k=1; k<=44; k++) SetPropActiveAndFade("mazecolumn_" + k, true, 8.0f);
		for(int j=1; j<=3; j++) SetPropActiveAndFade("mazedoor_" + j, true, 9.0f);
		for(int l=1; l<=8; l++) SetPropActiveAndFade("mazepainting_" + l, true, 10.0f);
		SetPropActiveAndFade("mazekey_1", true, 5.0f);
		SetPropActiveAndFade("mazepiano_1", true, 5.0f);
		SetPropActiveAndFade("mazekey_2", true, 5.0f);
		SetPropActiveAndFade("mazepiano_2", true, 5.0f);
		
		SetEntityActive("block_box_295", true);
		SetEntityActive("block_box_355", true);
		SetEntityActive("AreaPlayPianoMelody_1", true);
		SetEntityActive("AreaPlayPianoMelody_2", true);
	}
	if(asTimer == "TeleportHowl2")
	{
		for(int i=175; i<=306 ; i++) SetPropActiveAndFade("mazewall_" + i, true, 7.0f);
		for(int k=45; k<=99; k++) SetPropActiveAndFade("mazecolumn_" + k, true, 8.0f);
		for(int l=9; l<=16; l++) SetPropActiveAndFade("mazepainting_" + l, true, 9.0f);
		SetPropActiveAndFade("mazepiano_3", true, 5.0f);
		SetPropActiveAndFade("angel_statue_1", true, 10.0f);
		SetPropActiveAndFade("slime_6way_18", true, 1.0f);
	}
}

void TimerTelportDone(string &in asTimer)
{
	SetPlayerActive(true);
	FadeIn(1.3);
	if(asTimer == "TeleportDone1")
	{
		TeleportPlayer("PlayerStartArea_6");
		FadeGlobalSoundVolume(1,2);
		FadePlayerFOVMulTo(1.0f, 0.5f);
		FadeRadialBlurTo(0.0f, 1.0f);
	
		FadePlayerFOVMulTo(1, 1);
	
		StartUpMaze("part1");
	}
	if(asTimer == "TeleportDone2")
	{
		TeleportPlayer("PlayerStartArea_7");
		FadeGlobalSoundVolume(1,2);
		FadePlayerFOVMulTo(1.0f, 0.5f);
		FadeRadialBlurTo(0.0f, 1.0f);
	
		FadePlayerFOVMulTo(1, 1);
	
		StartUpMaze("part2");
	}
}

void StartUpMaze(string &in asPart)
{
	if(asPart == "part1")
	{
		CheckPoint ("checkmaze1", "PlayerStartArea_6", "CPMazeRespawn", "DeathHints", "FindKeyFollowPath");
		
		//SetMessage("Jack", "37", 6.0f);
	
		PlayMusic("03_maze_theme.ogg", true, 0.7f, 4.0f, 0, true);
		
		SetEntityActive("mazecolumn_87", true);
		SetEntityActive("mazecolumn_96", true);
		SetEntityActive("slime_6way_18", true);
	}
	if(asPart == "part2")
	{
		CheckPoint ("checkmaze2", "PlayerStartArea_7", "CPMazeRespawn", "DeathHints", "FindMemory");
	
		PlayMusic("03_maze_theme.ogg", true, 0.7f, 4.0f, 0, true);
	}
}

void PickedUpNote(string &in asItem)
{
	if(asItem == "note_generic_1")
	{
		AddGlobalVarInt("StrangeNoteCount", 1);
		if(GetGlobalVarInt("StrangeNoteCount") == 1) AddQuest("StrangeNotesMission", "StrangeNotesMission");
		StopSound("note_generic_1_sound", 0.1f);
	}
	if(asItem == "note_generic_2")
	{
		AddGlobalVarInt("StrangeNoteCount", 1);
		if(GetGlobalVarInt("StrangeNoteCount") == 1) AddQuest("StrangeNotesMission", "StrangeNotesMission");
		StopSound("note_generic_2_sound", 0.1f);
	}
	if(asItem == "note_generic_3")
	{
		AddGlobalVarInt("StrangeNoteCount", 1);
		if(GetGlobalVarInt("StrangeNoteCount") == 1) AddQuest("StrangeNotesMission", "StrangeNotesMission");
		SetEntityActive("AreaStatueNote05Scares", true);
		StopSound("note_generic_3_sound", 0.1f);
	}
	if(asItem == "note_paper01_1")
	{
		AddGlobalVarInt("MemoryNoteCount", 1);
		if(GetGlobalVarInt("MemoryNoteCount") == 1) AddQuest("MemoriesMission", "MemoriesMission");
		FadeLightTo("PointLight_4", 0.0f ,0.0f ,0.0f ,0.0f , -1, 2);
		StopSound("winememorysound", 2.0f);
		
		AutoSave();
	}
	if(asItem == "note_paper01_2")
	{
		AddGlobalVarInt("MemoryNoteCount", 1);
		if(GetGlobalVarInt("MemoryNoteCount") == 1) AddQuest("MemoriesMission", "MemoriesMission");
		FadeLightTo("PointLight_5", 0.0f ,0.0f ,0.0f ,0.0f , -1, 2);
		StopSound("librarymemorysound", 2.0f);
		
		AutoSave();
	}
	if(asItem == "note_paper01_3")
	{
		AddGlobalVarInt("MemoryNoteCount", 1);
		if(GetGlobalVarInt("MemoryNoteCount") == 1) AddQuest("MemoriesMission", "MemoriesMission");
		FadeLightTo("PointLight_6", 0.0f ,0.0f ,0.0f ,0.0f , -1, 2);
		StopSound("labmemorysound", 2.0f);
		
		AutoSave();
	}
	if(asItem == "diary_paper01_1") StopSound("brothersnotesound", 0.1f);
	if(asItem == "note_generic_4")
	{
		SetEntityActive("blood_1", false);
		SetEntityActive("AreaTouchTorch", true);	
	}
	if(asItem == "note_generic_5")
	{
		SetEntityActive("blood_2", false);
		SetPropActiveAndFade("stone_hammer_1", true, 2.0f);
		SetLightVisible("PointLight_9", true);
	}
}

void PickedUpHammer(string &in asItem)
{
	if(asItem == "stone_hammer_1") SetLightVisible("PointLight_9", false);
}

void CollideAreaDanStatue(string &in asParent, string &in asChild, int alState)
{
	if(alState == -1)
	{
		if(asChild == "AreaDanStatue_1")
		{
			StopSound("danstatuesound1", 2.5f);
			StopSound("danstatueheartbeatsound1", 2.5f);
			RemoveTimer("danstatue1part1");
			RemoveTimer("danstatue1part2");
		}
		if(asChild == "AreaDanStatue_2")
		{
			StopSound("danstatuesound2", 2.5f);
			StopSound("danstatueheartbeatsound2", 2.5f);
			RemoveTimer("danstatue2part1");
			RemoveTimer("danstatue2part2");
		}
		if(asChild == "AreaDanStatue_3")
		{
			StopSound("danstatuesound3", 2.5f);
			StopSound("danstatueheartbeatsound3", 2.5f);
			RemoveTimer("danstatue3part1");
			RemoveTimer("danstatue3part2");
		}
		if(asChild == "AreaDanStatue_4")
		{
			StopSound("danstatuesound4", 2.5f);
			StopSound("danstatueheartbeatsound4", 2.5f);
			RemoveTimer("danstatue4part1");
			RemoveTimer("danstatue4part2");
		}
		if(asChild == "AreaDanStatue_5")
		{
			StopSound("danstatuesound5", 2.5f);
			StopSound("danstatueheartbeatsound5", 2.5f);
			RemoveTimer("danstatue5part1");
			RemoveTimer("danstatue5part2");
		}
		if(asChild == "AreaDanStatue_6")
		{
			StopSound("danstatuesound6", 2.5f);
			StopSound("danstatueheartbeatsound6", 2.5f);
			RemoveTimer("danstatue6part1");
			RemoveTimer("danstatue6part2");
		}
		if(asChild == "AreaDanStatue_7")
		{
			StopSound("danstatuesound7", 2.5f);
			StopSound("danstatueheartbeatsound7", 2.5f);
			RemoveTimer("danstatue7part1");
			RemoveTimer("danstatue7part2");
		}
		if(asChild == "AreaDanStatue_8")
		{
			StopSound("danstatuesound8", 2.5f);
			StopSound("danstatueheartbeatsound8", 2.5f);
			RemoveTimer("danstatue8part1");
			RemoveTimer("danstatue8part2");
		}
		if(asChild == "AreaDanStatue_9")
		{
			StopSound("danstatuesound9", 2.5f);
			StopSound("danstatueheartbeatsound9", 2.5f);
			RemoveTimer("danstatue9part1");
			RemoveTimer("danstatue9part2");
		}
		if(asChild == "AreaDanStatue_10")
		{
			StopSound("danstatuesound10", 2.5f);
			StopSound("danstatueheartbeatsound10", 2.5f);
			RemoveTimer("danstatue10part1");
			RemoveTimer("danstatue10part2");
		}
		if(asChild == "AreaDanStatue_11")
		{
			StopSound("danstatuesound11", 2.5f);
			StopSound("danstatueheartbeatsound11", 2.5f);
			RemoveTimer("danstatue11part1");
			RemoveTimer("danstatue11part2");
		}
		if(asChild == "AreaDanStatue_12")
		{
			StopSound("danstatuesound12", 2.5f);
			StopSound("danstatueheartbeatsound12", 2.5f);
			RemoveTimer("danstatue12part1");
			RemoveTimer("danstatue12part2");
		}
	}
	else if(alState == 1)
	{
		GiveSanityDamage(0.5f, false);
		PlayGuiSound("hurt_pant.snt", 0.2f);
		if(asChild == "AreaDanStatue_1")
		{
			AddTimer("danstatue1part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue1part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound1", "02_statue_terror.snt", "AreaDanStatueSound_1", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_2")
		{
			AddTimer("danstatue2part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue2part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound2", "02_statue_terror.snt", "AreaDanStatueSound_2", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_3")
		{
			AddTimer("danstatue3part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue3part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound3", "02_statue_terror.snt", "AreaDanStatueSound_3", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_4")
		{
			AddTimer("danstatue4part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue4part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound4", "02_statue_terror.snt", "AreaDanStatueSound_4", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_5")
		{
			AddTimer("danstatue5part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue5part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound5", "02_statue_terror.snt", "AreaDanStatueSound_5", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_6")
		{
			AddTimer("danstatue6part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue6part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound6", "02_statue_terror.snt", "AreaDanStatueSound_6", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_7")
		{
			AddTimer("danstatue7part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue7part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound7", "02_statue_terror.snt", "AreaDanStatueSound_7", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_8")
		{
			AddTimer("danstatue8part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue8part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound8", "02_statue_terror.snt", "AreaDanStatueSound_8", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_9")
		{
			AddTimer("danstatue9part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue9part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound9", "02_statue_terror.snt", "AreaDanStatueSound_9", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_10")
		{
			AddTimer("danstatue10part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue10part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound10", "02_statue_terror.snt", "AreaDanStatueSound_10", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_11")
		{
			AddTimer("danstatue11part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue11part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound11", "02_statue_terror.snt", "AreaDanStatueSound_11", 3.0f, true);
		}
		if(asChild == "AreaDanStatue_12")
		{
			AddTimer("danstatue12part1", 3.0f, "TimerDanStatue");
			AddTimer("danstatue12part2", 8.0f, "TimerDanStatue");
			PlaySoundAtEntity("danstatuesound12", "02_statue_terror.snt", "AreaDanStatueSound_12", 3.0f, true);
		}
	}
}

void CollideSlimeDanArea(string &in asArea)
{
	GivePlayerDamage(1000000.0f, "BloodSplat", true, true);
	if(asArea == "SlimeDamageArea_1")
	{
		SetPropActiveAndFade("slime_1", false, 1.5f);
		StopSound("slimesound_1", 1.5f);
	}
	if(asArea == "SlimeDamageArea_2")
	{
		SetPropActiveAndFade("slime_2", false, 1.5f);
		StopSound("slimesound_2", 1.5f);
	}
	if(asArea == "SlimeDamageArea_3")
	{
		SetPropActiveAndFade("slime_3", false, 1.5f);
		StopSound("slimesound_3", 1.5f);
	}
	if(asArea == "SlimeDamageArea_4")
	{
		SetPropActiveAndFade("slime_4", false, 1.5f);
		StopSound("slimesound_4", 1.5f);
	}
	if(asArea == "SlimeDamageArea_5")
	{
		SetPropActiveAndFade("slime_5", false, 1.5f);
		StopSound("slimesound_5", 1.5f);
	}
	if(asArea == "SlimeDamageArea_6")
	{
		SetPropActiveAndFade("slime_6", false, 1.5f);
		StopSound("slimesound_6", 1.5f);
	}
	if(asArea == "SlimeDamageArea_7")
	{
		SetPropActiveAndFade("slime_7", false, 1.5f);
		StopSound("slimesound_7", 1.5f);
	}
	if(asArea == "SlimeDamageArea_8")
	{
		SetPropActiveAndFade("slime_8", false, 1.5f);
		StopSound("slimesound_8", 1.5f);
	}
	if(asArea == "SlimeDamageArea_9")
	{
		SetPropActiveAndFade("slime_9", false, 1.5f);
		StopSound("slimesound_9", 1.5f);
	}
	if(asArea == "SlimeDamageArea_10")
	{
		SetPropActiveAndFade("slime_10", false, 1.5f);
		StopSound("slimesound_10", 1.5f);
	}
	if(asArea == "SlimeDamageArea_11")
	{
		SetPropActiveAndFade("slime_11", false, 1.5f);
		StopSound("slimesound_11", 1.5f);
	}
	if(asArea == "SlimeDamageArea_12")
	{
		SetPropActiveAndFade("slime_12", false, 1.5f);
		StopSound("slimesound_12", 1.5f);
	}
	if(asArea == "SlimeDamageArea_13")
	{
		SetPropActiveAndFade("slime_13", false, 1.5f);
		StopSound("slimesound_13", 1.5f);
	}
	if(asArea == "SlimeDamageArea_14")
	{
		SetPropActiveAndFade("slime_14", false, 1.5f);
		StopSound("slimesound_14", 1.5f);
	}
	if(asArea == "SlimeDamageArea_15")
	{
		SetPropActiveAndFade("slime_15", false, 1.5f);
		StopSound("slimesound_15", 1.5f);
	}
	if(asArea == "SlimeDamageArea_16")
	{
		SetPropActiveAndFade("slime_16", false, 1.5f);
		StopSound("slimesound_16", 1.5f);
	}
	if(asArea == "SlimeDamageArea_16")
	{
		SetPropActiveAndFade("slime_16", false, 1.5f);
		StopSound("slimesound_16", 1.5f);
	}
	if(asArea == "SlimeDamageArea_17")
	{
		SetPropActiveAndFade("slime_17", false, 1.5f);
		StopSound("slimesound_17", 1.5f);
	}
	if(asArea == "SlimeDamageArea_18")
	{
		SetPropActiveAndFade("slime_18", false, 1.5f);
		StopSound("slimesound_18", 1.5f);
	}
	if(asArea == "SlimeDamageArea_19")
	{
		SetPropActiveAndFade("slime_19", false, 1.5f);
		StopSound("slimesound_19", 1.5f);
	}
	if(asArea == "SlimeDamageArea_20")
	{
		SetPropActiveAndFade("slime_20", false, 1.5f);
		StopSound("slimesound_20", 1.5f);
	}
	if(asArea == "SlimeDamageArea_21")
	{
		SetPropActiveAndFade("slime_21", false, 1.5f);
		StopSound("slimesound_21", 1.5f);
	}
	if(asArea == "SlimeDamageArea_22")
	{
		SetPropActiveAndFade("slime_22", false, 1.5f);
		StopSound("slimesound_22", 1.5f);
	}
	if(asArea == "SlimeDamageArea_23")
	{
		SetPropActiveAndFade("slime_23", false, 1.5f);
		StopSound("slimesound_23", 1.5f);
	}
	if(asArea == "SlimeDamageArea_24")
	{
		SetPropActiveAndFade("slime_24", false, 1.5f);
		StopSound("slimesound_24", 1.5f);
	}
	if(asArea == "SlimeDamageArea_25")
	{
		SetPropActiveAndFade("slime_25", false, 1.5f);
		StopSound("slimesound_25", 1.5f);
	}
	if(asArea == "SlimeDamageArea_26")
	{
		SetPropActiveAndFade("slime_26", false, 1.5f);
		StopSound("slimesound_26", 1.5f);
	}
	if(asArea == "SlimeDamageArea_27")
	{
		SetPropActiveAndFade("slime_27", false, 1.5f);
		StopSound("slimesound_27", 1.5f);
	}
	if(asArea == "SlimeDamageArea_28")
	{
		SetPropActiveAndFade("slime_28", false, 1.5f);
		StopSound("slimesound_28", 1.5f);
	}
	if(asArea == "SlimeDamageArea_29")
	{
		SetPropActiveAndFade("slime_29", false, 1.5f);
		StopSound("slimesound_29", 1.5f);
	}
	if(asArea == "SlimeDamageArea_30")
	{
		SetPropActiveAndFade("slime_30", false, 1.5f);
		StopSound("slimesound_30", 1.5f);
	}
	if(asArea == "SlimeDamageArea_31")
	{
		SetPropActiveAndFade("slime_31", false, 1.5f);
		StopSound("slimesound_31", 1.5f);
	}
	if(asArea == "SlimeDamageArea_32")
	{
		SetPropActiveAndFade("slime_32", false, 1.5f);
		StopSound("slimesound_32", 1.5f);
	}
	if(asArea == "SlimeDamageArea_33")
	{
		SetPropActiveAndFade("slime_33", false, 1.5f);
		StopSound("slimesound_33", 1.5f);
	}
	if(asArea == "SlimeDamageArea_34")
	{
		SetPropActiveAndFade("slime_34", false, 1.5f);
		StopSound("slimesound_34", 1.5f);
	}
	if(asArea == "SlimeDamageArea_35")
	{
		SetPropActiveAndFade("slime_35", false, 1.5f);
		StopSound("slimesound_35", 1.5f);
	}
	if(asArea == "SlimeDamageArea_36")
	{
		SetPropActiveAndFade("slime_36", false, 1.5f);
		StopSound("slimesound_36", 1.5f);
	}
	if(asArea == "SlimeDamageArea_37")
	{
		SetPropActiveAndFade("slime_37", false, 1.5f);
		StopSound("slimesound_37", 1.5f);
	}
	if(asArea == "SlimeDamageArea_38")
	{
		SetPropActiveAndFade("slime_38", false, 1.5f);
		StopSound("slimesound_38", 1.5f);
	}
	if(asArea == "SlimeDamageArea_39")
	{
		SetPropActiveAndFade("slime_39", false, 1.5f);
		StopSound("slimesound_39", 1.5f);
	}
	if(asArea == "SlimeDamageArea_40")
	{
		SetPropActiveAndFade("slime_40", false, 1.5f);
		StopSound("slimesound_40", 1.5f);
	}
	if(asArea == "SlimeDamageArea_41")
	{
		SetPropActiveAndFade("slime_41", false, 1.5f);
		StopSound("slimesound_41", 1.5f);
	}
	if(asArea == "SlimeDamageArea_42")
	{
		SetPropActiveAndFade("slime_42", false, 1.5f);
		StopSound("slimesound_42", 1.5f);
	}
	if(asArea == "SlimeDamageArea_43")
	{
		SetPropActiveAndFade("slime_43", false, 1.5f);
		StopSound("slimesound_43", 1.5f);
	}
	if(asArea == "SlimeDamageArea_44")
	{
		SetPropActiveAndFade("slime_44", false, 1.5f);
		StopSound("slimesound_44", 1.5f);
	}
	if(asArea == "SlimeDamageArea_45")
	{
		SetPropActiveAndFade("slime_45", false, 1.5f);
		StopSound("slimesound_45", 1.5f);
	}
	if(asArea == "SlimeDamageArea_46")
	{
		SetPropActiveAndFade("slime_46", false, 1.5f);
		StopSound("slimesound_46", 1.5f);
	}
	if(asArea == "SlimeDamageArea_47")
	{
		SetPropActiveAndFade("slime_47", false, 1.5f);
		StopSound("slimesound_47", 1.5f);
	}
	if(asArea == "SlimeDamageArea_48")
	{
		SetPropActiveAndFade("slime_48", false, 1.5f);
		StopSound("slimesound_48", 1.5f);
	}
	if(asArea == "SlimeDamageArea_49")
	{
		SetPropActiveAndFade("slime_49", false, 1.5f);
		StopSound("slimesound_49", 1.5f);
	}
	if(asArea == "SlimeDamageArea_50")
	{
		SetPropActiveAndFade("slime_50", false, 1.5f);
		StopSound("slimesound_50", 1.5f);
	}
}

void TimerDanStatue(string &in asTimer)
{
	if(asTimer == "danstatue1part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound1", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue1part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue1part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(5.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_1", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_1", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_1");
		FadeLightTo("StatueLight_1", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_1", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue1part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(1.5f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_1", true);
		SetEntityActive("SlimeDamageArea_2", true);
		SetEntityActive("SlimeDamageArea_3", true);
		SetEntityActive("SlimeDamageArea_4", true);
		SetPropActiveAndFade("slime_1", true, 1.0f);
		SetPropActiveAndFade("slime_2", true, 1.0f);
		SetPropActiveAndFade("slime_3", true, 1.0f);
		SetPropActiveAndFade("slime_4", true, 1.0f);
		PlaySoundAtEntity("slimesound_1", "slime_loop", "SlimeDamageArea_1", 0.1f, true);
		PlaySoundAtEntity("slimesound_2", "slime_loop", "SlimeDamageArea_2", 0.1f, true);
		PlaySoundAtEntity("slimesound_3", "slime_loop", "SlimeDamageArea_3", 0.1f, true);
		PlaySoundAtEntity("slimesound_4", "slime_loop", "SlimeDamageArea_4", 0.1f, true);
	}
	if(asTimer == "danstatue2part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound2", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue2part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue2part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_2", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_2", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_2");
		FadeLightTo("StatueLight_2", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_2", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue2part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_5", true);
		SetEntityActive("SlimeDamageArea_6", true);
		SetEntityActive("SlimeDamageArea_7", true);
		SetEntityActive("SlimeDamageArea_8", true);
		SetPropActiveAndFade("slime_5", true, 1.0f);
		SetPropActiveAndFade("slime_6", true, 1.0f);
		SetPropActiveAndFade("slime_7", true, 1.0f);
		SetPropActiveAndFade("slime_8", true, 1.0f);
		PlaySoundAtEntity("slimesound_5", "slime_loop", "SlimeDamageArea_5", 0.1f, true);
		PlaySoundAtEntity("slimesound_6", "slime_loop", "SlimeDamageArea_6", 0.1f, true);
		PlaySoundAtEntity("slimesound_7", "slime_loop", "SlimeDamageArea_7", 0.1f, true);
		PlaySoundAtEntity("slimesound_8", "slime_loop", "SlimeDamageArea_8", 0.1f, true);
	}
	if(asTimer == "danstatue3part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound3", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue3part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue3part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_3", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_3", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_3");
		FadeLightTo("StatueLight_3", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_3", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue3part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_9", true);
		SetEntityActive("SlimeDamageArea_10", true);
		SetEntityActive("SlimeDamageArea_11", true);
		SetEntityActive("SlimeDamageArea_12", true);
		SetPropActiveAndFade("slime_9", true, 1.0f);
		SetPropActiveAndFade("slime_10", true, 1.0f);
		SetPropActiveAndFade("slime_11", true, 1.0f);
		SetPropActiveAndFade("slime_12", true, 1.0f);
		PlaySoundAtEntity("slimesound_9", "slime_loop", "SlimeDamageArea_9", 0.1f, true);
		PlaySoundAtEntity("slimesound_10", "slime_loop", "SlimeDamageArea_10", 0.1f, true);
		PlaySoundAtEntity("slimesound_11", "slime_loop", "SlimeDamageArea_11", 0.1f, true);
		PlaySoundAtEntity("slimesound_12", "slime_loop", "SlimeDamageArea_12", 0.1f, true);
	}
	if(asTimer == "danstatue4part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound4", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue4part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue4part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_4", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_4", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_4");
		FadeLightTo("StatueLight_4", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_4", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue4part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_13", true);
		SetEntityActive("SlimeDamageArea_14", true);
		SetEntityActive("SlimeDamageArea_15", true);
		SetEntityActive("SlimeDamageArea_16", true);
		SetPropActiveAndFade("slime_13", true, 1.0f);
		SetPropActiveAndFade("slime_14", true, 1.0f);
		SetPropActiveAndFade("slime_15", true, 1.0f);
		SetPropActiveAndFade("slime_16", true, 1.0f);
		PlaySoundAtEntity("slimesound_13", "slime_loop", "SlimeDamageArea_13", 0.1f, true);
		PlaySoundAtEntity("slimesound_14", "slime_loop", "SlimeDamageArea_14", 0.1f, true);
		PlaySoundAtEntity("slimesound_15", "slime_loop", "SlimeDamageArea_15", 0.1f, true);
		PlaySoundAtEntity("slimesound_16", "slime_loop", "SlimeDamageArea_16", 0.1f, true);
	}
	if(asTimer == "danstatue5part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound5", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue5part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue5part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_5", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_5", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_5");
		FadeLightTo("StatueLight_5", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_5", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue5part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_17", true);
		SetEntityActive("SlimeDamageArea_18", true);
		SetEntityActive("SlimeDamageArea_19", true);
		SetEntityActive("SlimeDamageArea_20", true);
		SetPropActiveAndFade("slime_17", true, 1.0f);
		SetPropActiveAndFade("slime_18", true, 1.0f);
		SetPropActiveAndFade("slime_19", true, 1.0f);
		SetPropActiveAndFade("slime_20", true, 1.0f);
		PlaySoundAtEntity("slimesound_17", "slime_loop", "SlimeDamageArea_17", 0.1f, true);
		PlaySoundAtEntity("slimesound_18", "slime_loop", "SlimeDamageArea_18", 0.1f, true);
		PlaySoundAtEntity("slimesound_19", "slime_loop", "SlimeDamageArea_19", 0.1f, true);
		PlaySoundAtEntity("slimesound_20", "slime_loop", "SlimeDamageArea_20", 0.1f, true);
	}
	if(asTimer == "danstatue6part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound6", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue6part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue6part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_6", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_6", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_6");
		FadeLightTo("StatueLight_6", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_6", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue6part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_21", true);
		SetEntityActive("SlimeDamageArea_22", true);
		SetEntityActive("SlimeDamageArea_23", true);
		SetEntityActive("SlimeDamageArea_24", true);
		SetPropActiveAndFade("slime_21", true, 1.0f);
		SetPropActiveAndFade("slime_22", true, 1.0f);
		SetPropActiveAndFade("slime_23", true, 1.0f);
		SetPropActiveAndFade("slime_24", true, 1.0f);
		PlaySoundAtEntity("slimesound_21", "slime_loop", "SlimeDamageArea_21", 0.1f, true);
		PlaySoundAtEntity("slimesound_22", "slime_loop", "SlimeDamageArea_22", 0.1f, true);
		PlaySoundAtEntity("slimesound_23", "slime_loop", "SlimeDamageArea_23", 0.1f, true);
		PlaySoundAtEntity("slimesound_24", "slime_loop", "SlimeDamageArea_24", 0.1f, true);
	}
	if(asTimer == "danstatue7part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound7", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue7part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue7part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_7", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_7", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_7");
		FadeLightTo("StatueLight_7", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_7", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue7part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_25", true);
		SetEntityActive("SlimeDamageArea_26", true);
		SetEntityActive("SlimeDamageArea_27", true);
		SetPropActiveAndFade("slime_25", true, 1.0f);
		SetPropActiveAndFade("slime_26", true, 1.0f);
		SetPropActiveAndFade("slime_27", true, 1.0f);
		PlaySoundAtEntity("slimesound_25", "slime_loop", "SlimeDamageArea_25", 0.1f, true);
		PlaySoundAtEntity("slimesound_26", "slime_loop", "SlimeDamageArea_26", 0.1f, true);
		PlaySoundAtEntity("slimesound_27", "slime_loop", "SlimeDamageArea_27", 0.1f, true);
	}
	if(asTimer == "danstatue8part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound8", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue8part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue8part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_8", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_8", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_8");
		FadeLightTo("StatueLight_8", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_8", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue8part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_28", true);
		SetEntityActive("SlimeDamageArea_29", true);
		SetEntityActive("SlimeDamageArea_30", true);
		SetEntityActive("SlimeDamageArea_31", true);
		SetPropActiveAndFade("slime_28", true, 1.0f);
		SetPropActiveAndFade("slime_29", true, 1.0f);
		SetPropActiveAndFade("slime_30", true, 1.0f);
		SetPropActiveAndFade("slime_31", true, 1.0f);
		PlaySoundAtEntity("slimesound_28", "slime_loop", "SlimeDamageArea_28", 0.1f, true);
		PlaySoundAtEntity("slimesound_29", "slime_loop", "SlimeDamageArea_29", 0.1f, true);
		PlaySoundAtEntity("slimesound_30", "slime_loop", "SlimeDamageArea_30", 0.1f, true);
		PlaySoundAtEntity("slimesound_31", "slime_loop", "SlimeDamageArea_31", 0.1f, true);
	}
	if(asTimer == "danstatue9part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound9", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue9part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue9part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_9", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_9", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_9");
		FadeLightTo("StatueLight_9", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_9", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue9part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_32", true);
		SetEntityActive("SlimeDamageArea_33", true);
		SetEntityActive("SlimeDamageArea_34", true);
		SetEntityActive("SlimeDamageArea_35", true);
		SetPropActiveAndFade("slime_32", true, 1.0f);
		SetPropActiveAndFade("slime_33", true, 1.0f);
		SetPropActiveAndFade("slime_34", true, 1.0f);
		SetPropActiveAndFade("slime_35", true, 1.0f);
		PlaySoundAtEntity("slimesound_32", "slime_loop", "SlimeDamageArea_32", 0.1f, true);
		PlaySoundAtEntity("slimesound_33", "slime_loop", "SlimeDamageArea_33", 0.1f, true);
		PlaySoundAtEntity("slimesound_34", "slime_loop", "SlimeDamageArea_34", 0.1f, true);
		PlaySoundAtEntity("slimesound_35", "slime_loop", "SlimeDamageArea_35", 0.1f, true);
	}
	if(asTimer == "danstatue10part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound10", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue10part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue10part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_10", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_10", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_10");
		FadeLightTo("StatueLight_10", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_10", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue10part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_36", true);
		SetEntityActive("SlimeDamageArea_37", true);
		SetEntityActive("SlimeDamageArea_38", true);
		SetEntityActive("SlimeDamageArea_39", true);
		SetEntityActive("SlimeDamageArea_40", true);
		SetPropActiveAndFade("slime_36", true, 1.0f);
		SetPropActiveAndFade("slime_37", true, 1.0f);
		SetPropActiveAndFade("slime_38", true, 1.0f);
		SetPropActiveAndFade("slime_39", true, 1.0f);
		SetPropActiveAndFade("slime_40", true, 1.0f);
		PlaySoundAtEntity("slimesound_36", "slime_loop", "SlimeDamageArea_36", 0.1f, true);
		PlaySoundAtEntity("slimesound_37", "slime_loop", "SlimeDamageArea_37", 0.1f, true);
		PlaySoundAtEntity("slimesound_38", "slime_loop", "SlimeDamageArea_38", 0.1f, true);
		PlaySoundAtEntity("slimesound_39", "slime_loop", "SlimeDamageArea_39", 0.1f, true);
		PlaySoundAtEntity("slimesound_40", "slime_loop", "SlimeDamageArea_40", 0.1f, true);
	}
	if(asTimer == "danstatue11part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound11", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue11part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue11part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_11", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_11", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_11");
		FadeLightTo("StatueLight_11", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_11", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue11part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_41", true);
		SetEntityActive("SlimeDamageArea_42", true);
		SetEntityActive("SlimeDamageArea_43", true);
		SetEntityActive("SlimeDamageArea_44", true);
		SetEntityActive("SlimeDamageArea_45", true);
		SetPropActiveAndFade("slime_41", true, 1.0f);
		SetPropActiveAndFade("slime_42", true, 1.0f);
		SetPropActiveAndFade("slime_43", true, 1.0f);
		SetPropActiveAndFade("slime_44", true, 1.0f);
		SetPropActiveAndFade("slime_45", true, 1.0f);
		PlaySoundAtEntity("slimesound_41", "slime_loop", "SlimeDamageArea_41", 0.1f, true);
		PlaySoundAtEntity("slimesound_42", "slime_loop", "SlimeDamageArea_42", 0.1f, true);
		PlaySoundAtEntity("slimesound_43", "slime_loop", "SlimeDamageArea_43", 0.1f, true);
		PlaySoundAtEntity("slimesound_44", "slime_loop", "SlimeDamageArea_44", 0.1f, true);
		PlaySoundAtEntity("slimesound_45", "slime_loop", "SlimeDamageArea_45", 0.1f, true);
	}
	if(asTimer == "danstatue12part1")
	{
		GiveSanityDamage(1.0f, false);
		PlayGuiSound("hurt_pant.snt", 0.4f);
		PlaySoundAtEntity("danstatueheartbeatsound12", "02_statue_heartbeat.snt", "Player", 0.0f, true);
	}
	if(asTimer == "danstatue12part2" && GetPlayerHealth() > 0.0f)
	{
		AddTimer("breatheffect", 2.5f, "TimerPlayerReactions");
		AddTimer("danstatue12part3", 4.0f, "TimerDanStatue");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("hurt_pant.snt", 0.9f);
		PlayGuiSound("21_alex_low_freq_rumble", 0.5f);
		PlaySoundAtEntity("danstatuesaw", "02_statue_seen.snt", "AreaDanStatueSound_12", 0.0f, false);
		PlayMusic("18_puzzle_valve02", false, 1.0f, 0.1f, 10, false);
		SetEntityActive("AreaDanStatue_12", false);
		RemoveEntityCollideCallback("Player", "AreaDanStatue_12");
		FadeLightTo("StatueLight_12", 0.7f, 0.15f, 0.2f, 0.7f, 2.25f, 2);
		SetMessage("Strange", "IGreetYou", 5.0f);
		StartPlayerLookAt("AreaDanStatueSound_12", 1.0f, 1.0f, "");
		AddTimer("", 3.0f, "TimerStopLook");
		AddGlobalVarInt("MetStatuesCount", 1);
		if(GetGlobalVarInt("MetStatuesCount") == 24) AddTimer("StatuesAchievement", 13.0f, "TimerUnlockAchievement");
	}
	if(asTimer == "danstatue12part3")
	{
		AddTimer("breatheffect", 2.0f, "TimerPlayerReactions");
		GiveSanityDamage(2.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
		PlayGuiSound("react_scare", 0.7f);
		PlayGuiSound("guardian_activated.snt", 0.7f);
		StartScreenShake(0.01f, 5, 2, 2);
		
		SetEntityActive("SlimeDamageArea_46", true);
		SetEntityActive("SlimeDamageArea_47", true);
		SetEntityActive("SlimeDamageArea_48", true);
		SetEntityActive("SlimeDamageArea_49", true);
		SetEntityActive("SlimeDamageArea_50", true);
		SetPropActiveAndFade("slime_46", true, 1.0f);
		SetPropActiveAndFade("slime_47", true, 1.0f);
		SetPropActiveAndFade("slime_48", true, 1.0f);
		SetPropActiveAndFade("slime_49", true, 1.0f);
		SetPropActiveAndFade("slime_50", true, 1.0f);
		PlaySoundAtEntity("slimesound_46", "slime_loop", "SlimeDamageArea_46", 0.1f, true);
		PlaySoundAtEntity("slimesound_47", "slime_loop", "SlimeDamageArea_47", 0.1f, true);
		PlaySoundAtEntity("slimesound_48", "slime_loop", "SlimeDamageArea_48", 0.1f, true);
		PlaySoundAtEntity("slimesound_49", "slime_loop", "SlimeDamageArea_49", 0.1f, true);
		PlaySoundAtEntity("slimesound_50", "slime_loop", "SlimeDamageArea_50", 0.1f, true);
	}
}

void UsedKnifeOnSlime(string &in asItem, string &in asEntity)
{
	if(asEntity == "web_1" || asEntity == "slime_6way_18" || asEntity == "slime_wine_1" || StringContains(asEntity, "slime_torch_") == true || StringContains(asEntity, "slime_library_") == true) 
		SetMessage("Jack", "UseKnifeFail", 5.0f);
	else
	{
		GiveSanityBoostSmall();
		PlayGuiSound("02_attack_knife.snt", 1.0f);
		if(asEntity == "web_2")
		{
			CompleteQuest("DestroyWoodSlime", "DestroyWoodSlime");
			PlaySoundAtEntity("fadeoutwebsound", "guardian_activated.snt", asEntity, 0.9f, false);
			SetPropHealth(asEntity, 0);
			StopSound("web_2_sound", 2.0f);
		}
		else
		{
			AddGlobalVarInt("GlobalSlimesCount", 1);
			CreateParticleSystemAtEntity("fadeoutslime", "particles/ps_acid_web_dissolve.ps", asEntity, false);
			PlaySoundAtEntity("fadeoutslimesound", "02_acid_web.snt", asEntity, 0.1f, false);
			SetPropActiveAndFade(asEntity, false, 2.0f);
			if(asEntity == "slime_anim_ceiling_1") StopSound("slime_anim_ceiling_1_sound", 2.0f);
			if(asEntity == "slime_anim_wall_1") StopSound("slime_anim_wall_1_sound", 2.0f);
			if(asEntity == "slime_anim_ceiling_2") StopSound("slime_anim_ceiling_2_sound", 2.0f);
			if(asEntity == "slime_anim_wall_2") StopSound("slime_anim_wall_2_sound", 2.0f);
			if(asEntity == "slime_anim_ceiling_3") StopSound("slime_anim_ceiling_3_sound", 2.0f);
			if(asEntity == "slime_anim_wall_3") StopSound("slime_anim_wall_3_sound", 2.0f);
			if(asEntity == "slime_anim_ceiling_4") StopSound("slime_anim_ceiling_4_sound", 2.0f);
			if(asEntity == "slime_anim_wall_4") StopSound("slime_anim_wall_4_sound", 2.0f);
			if(asEntity == "slime_anim_ceiling_5") StopSound("slime_anim_ceiling_5_sound", 2.0f);
			if(asEntity == "slime_anim_wall_5") StopSound("slime_anim_wall_5_sound", 2.0f);
			if(asEntity == "slime_anim_wall_6") StopSound("slime_anim_wall_6_sound", 2.0f);
		}
	}
}

void CPMazeRespawn(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	
	PlayMusic("03_maze_theme.ogg", true, 0.7f, 4.0f, 0, false);
}

void CPDefaultRespawn(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
	RemoveAnyActiveMonster();
	ResetMonstersActivationAreas();
	
	if(GetGlobalVarInt("LabQuest") == 0) PlayMusic("03_wood_theme.ogg", true, 1.0f, 1.3f, 0, false);
	else PlayMusic("03_wood_theme_alternative.ogg", true, 1.0f, 1.3f, 0, false);
}

void CollideAreaActiveGrunt(string &in asParent, string &in asChild, int alState)
{
	string sEnemyPrefix = "";
	string sEnemySuffix = "";
	string sEnemyName = "";
	if(StringContains(asChild, "Grunt"))		sEnemyPrefix = "grunt";
	else if(StringContains(asChild, "Brute"))		sEnemyPrefix = "brute";
	else if(StringContains(asChild, "Suitor"))	sEnemyPrefix = "suitor";
	
	if(StringContains(asChild, "1"))	sEnemySuffix = "_1";
	else if(StringContains(asChild, "2"))	sEnemySuffix = "_2";
	else if(StringContains(asChild, "3"))	sEnemySuffix = "_3";
	else if(StringContains(asChild, "4"))	sEnemySuffix = "_4";
	
	sEnemyName = sEnemyPrefix + sEnemySuffix;
	
	if(GetLocalVarString("gsCurrActiveEnemy") == sEnemyName)
		return;
	else if(GetLocalVarString("gsCurrActiveEnemy") == "noenemy")
	{
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
	}
	else if(GetEnemyState(GetLocalVarString("gsCurrActiveEnemy")) <= 2 && GetEntityPlayerDistance(GetLocalVarString("gsCurrActiveEnemy")) >= 6)
	{
		RemoveAnyActiveMonster();
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
	}
	else
		return;
	
	if(asChild == "AreaActiveGrunt_1")
	{
		ClearEnemyPatrolNodes("grunt_1");
		
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_5", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_9", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_17", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_20", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_25", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_29", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_25", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_20", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_17", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_9", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_30", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_35", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_40", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_43", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_40", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_30", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_9", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_5", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_1", RandFloat(4.5f, 6.5f), "");
	
		TeleportEnemyToNode("grunt_1", "PathNodeArea_1", false);
		SetEntityActive("grunt_1", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("grunt_1", false);
	}
	if(asChild == "AreaActiveGrunt_2")
	{
		ClearEnemyPatrolNodes("grunt_2");
		
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_46", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_49", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_53", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_55", RandFloat(2.5f, 4.5f), "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_53", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_49", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_85", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_93", 2.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_103", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_109", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_103", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_97", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_49", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_46", 0.001f, "");
		AddEnemyPatrolNode("grunt_2", "PathNodeArea_44", RandFloat(4.5f, 6.5f), "");
	
		TeleportEnemyToNode("grunt_2", "PathNodeArea_44", false);
		SetEntityActive("grunt_2", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("grunt_2", false);
	}
}

void CollideAreaActiveBrute(string &in asParent, string &in asChild, int alState)
{
	string sEnemyPrefix = "";
	string sEnemySuffix = "";
	string sEnemyName = "";
	if(StringContains(asChild, "Grunt"))		sEnemyPrefix = "grunt";
	else if(StringContains(asChild, "Brute"))		sEnemyPrefix = "brute";
	else if(StringContains(asChild, "Suitor"))	sEnemyPrefix = "suitor";
	
	if(StringContains(asChild, "1"))	sEnemySuffix = "_1";
	else if(StringContains(asChild, "2"))	sEnemySuffix = "_2";
	else if(StringContains(asChild, "3"))	sEnemySuffix = "_3";
	else if(StringContains(asChild, "4"))	sEnemySuffix = "_4";
	
	sEnemyName = sEnemyPrefix + sEnemySuffix;
	
	if(GetLocalVarString("gsCurrActiveEnemy") == sEnemyName)
		return;
	else if(GetLocalVarString("gsCurrActiveEnemy") == "noenemy")
	{
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
	}
	else if(GetEnemyState(GetLocalVarString("gsCurrActiveEnemy")) <= 2 && GetEntityPlayerDistance(GetLocalVarString("gsCurrActiveEnemy")) >= 6)
	{
		RemoveAnyActiveMonster();
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
	}
	else
		return;
	
	if(asChild == "AreaActiveBrute_1")
	{
		ClearEnemyPatrolNodes("brute_1");
		
		AddEnemyPatrolNode("brute_1", "PathNodeArea_25", 1.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_29", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_93", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_103", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_106", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_103", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_110", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_112", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_115", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_112", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_110", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_97", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_93", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_29", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_25", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_20", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_17", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_12", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_17", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_20", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_22", RandFloat(4.5f, 6.5f), "");
	
		TeleportEnemyToNode("brute_1", "PathNodeArea_27", false);
		SetEntityActive("brute_1", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("brute_1", false);
	}
	if(asChild == "AreaActiveBrute_2")
	{
		ClearEnemyPatrolNodes("brute_2");
		
		AddEnemyPatrolNode("brute_2", "PathNodeArea_118", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_129", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_123", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_130", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_133", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_135", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_133", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_136", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_138", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_142", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_115", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_143", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_146", 2.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_143", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_115", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_142", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_138", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_147", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_148", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_149", 0.001f, "");
		AddEnemyPatrolNode("brute_2", "PathNodeArea_116", RandFloat(4.5f, 6.5f), "");
	
		TeleportEnemyToNode("brute_2", "PathNodeArea_116", false);
		SetEntityActive("brute_2", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("brute_2", false);
	}
	if(asChild == "AreaActiveBrute_3")
	{
		ClearEnemyPatrolNodes("brute_3");
		
		AddEnemyPatrolNode("brute_3", "PathNodeArea_151", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_156", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_159", RandFloat(2.5f, 3.5f), "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_163", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_164", 2.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_163", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_159", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_168", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_171", RandFloat(2.5f, 3.5f), "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_174", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_176", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_199", RandFloat(3.5f, 5.5f), "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_176", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_174", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_168", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_156", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_150", 0.001f, "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_179", RandFloat(3.5f, 5.5f), "");
		AddEnemyPatrolNode("brute_3", "PathNodeArea_150", RandFloat(4.5f, 6.5f), "");
	
		TeleportEnemyToNode("brute_3", "PathNodeArea_150", false);
		SetEntityActive("brute_3", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("brute_3", false);
	}
	if(asChild == "AreaActiveBrute_4")
	{
		ClearEnemyPatrolNodes("brute_4");
		
		AddEnemyPatrolNode("brute_4", "PathNodeArea_185", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_189", RandFloat(3.5f, 5.5f), "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_125", 1.9f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_129", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_185", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_192", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_196", RandFloat(3.5f, 5.5f), "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_199", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_176", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_174", RandFloat(4.5f, 6.5f), "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_171", 2.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_174", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_176", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_199", 2.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_206", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_208", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_209", 2.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_208", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_206", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_192", 0.001f, "");
		AddEnemyPatrolNode("brute_4", "PathNodeArea_182", RandFloat(4.5f, 6.5f), "");
	
		TeleportEnemyToNode("brute_4", "PathNodeArea_182", false);
		SetEntityActive("brute_4", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("brute_4", false);
	}
}

void CollideAreaActiveSuitor(string &in asParent, string &in asChild, int alState)
{
	string sEnemyPrefix = "";
	string sEnemySuffix = "";
	string sEnemyName = "";
	if(StringContains(asChild, "Grunt"))		sEnemyPrefix = "grunt";
	else if(StringContains(asChild, "Brute"))		sEnemyPrefix = "brute";
	else if(StringContains(asChild, "Suitor"))	sEnemyPrefix = "suitor";
	
	if(StringContains(asChild, "1"))	sEnemySuffix = "_1";
	else if(StringContains(asChild, "2"))	sEnemySuffix = "_2";
	else if(StringContains(asChild, "3"))	sEnemySuffix = "_3";
	else if(StringContains(asChild, "4"))	sEnemySuffix = "_4";
	
	sEnemyName = sEnemyPrefix + sEnemySuffix;
	
	if(GetLocalVarString("gsCurrActiveEnemy") == sEnemyName)
		return;
	else if(GetLocalVarString("gsCurrActiveEnemy") == "noenemy")
	{
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
	}
	else if(GetEnemyState(GetLocalVarString("gsCurrActiveEnemy")) <= 2 && GetEntityPlayerDistance(GetLocalVarString("gsCurrActiveEnemy")) >= 6)
	{
		RemoveAnyActiveMonster();
		SetLocalVarString("gsCurrActiveEnemy", sEnemyName);
		SetEntityActive(asChild, false);
		AddLocalVarInt("MonstersActivatedVar", 1);
		if(GetLocalVarInt("MonstersActivatedVar") >= 2)
			ResetMonstersActivationAreas();
	}
	else
		return;
	
	if(asChild == "AreaActiveSuitor_1")
	{
		ClearEnemyPatrolNodes("suitor_1");
		
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_239", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_243", 4.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_245", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_251", 4.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_249", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_253", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_336", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_322", 4.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_316", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_312", 4.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_316", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_322", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_336", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_253", 2.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_255", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_259", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_269", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_281", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_283", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_285", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_287", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_295", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_297", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_303", 2.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_289", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_287", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_285", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_283", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_281", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_269", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_259", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_255", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_253", 4.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_249", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_245", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_243", 2.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_440", 3.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_243", 1.001f, "");
	
		TeleportEnemyToNode("suitor_1", "PathNodeArea_237", false);
		SetEntityActive("suitor_1", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("suitor_1", false);
	}
	if(asChild == "AreaActiveSuitor_2")
	{
		ClearEnemyPatrolNodes("suitor_2");
		
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_575", 4.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_573", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_571", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_569", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_565", 3.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_475", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_495", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_499", 4.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_557", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_561", 2.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_557", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_501", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_503", 2.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_501", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_499", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_495", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_490", 3.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_488", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_483", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_479", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_472", 3.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_569", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_571", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_573", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_575", 0.001f, "");
		AddEnemyPatrolNode("suitor_2", "PathNodeArea_581", 2.001f, "");
	
		TeleportEnemyToNode("suitor_2", "PathNodeArea_581", false);
		SetEntityActive("suitor_2", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("suitor_2", false);
	}
	if(asChild == "AreaActiveSuitor_3")
	{
		ClearEnemyPatrolNodes("suitor_3");
		
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_541", 4.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_533", 3.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_525", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_527", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_529", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_531", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_540", 2.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_536", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_537", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_538", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_355", 3.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_538", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_537", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_536", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_533", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_525", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_524", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_517", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_513", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_511", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_507", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_501", 4.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_507", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_523", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_524", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_525", 0.001f, "");
		AddEnemyPatrolNode("suitor_3", "PathNodeArea_533", 1.001f, "");
	
		TeleportEnemyToNode("suitor_3", "PathNodeArea_542", false);
		SetEntityActive("suitor_3", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)	
			SetEnemySanityDecreaseActive("suitor_3", false);
		
		if(GetLocalVarInt("AllMazeRevealed") == 0)
		{
			SetPropActiveAndFade("slime_anim_wall_2", true, 2.0f);
			SetPropActiveAndFade("slime_anim_wall_3", true, 2.0f);
			SetPropActiveAndFade("slime_anim_wall_4", true, 2.0f);
			SetPropActiveAndFade("slime_anim_wall_5", true, 2.0f);
			SetPropActiveAndFade("slime_anim_wall_6", true, 2.0f);
			SetPropActiveAndFade("slime_anim_ceiling_2", true, 2.0f);
			SetPropActiveAndFade("slime_anim_ceiling_3", true, 2.0f);
			SetPropActiveAndFade("slime_anim_ceiling_4", true, 2.0f);
			SetPropActiveAndFade("slime_anim_ceiling_5", true, 2.0f);
			PlaySoundAtEntity("slime_anim_wall_2_sound", "slime_loop", "slime_anim_wall_2", 2.0f, true);
			PlaySoundAtEntity("slime_anim_wall_3_sound", "slime_loop", "slime_anim_wall_3", 2.0f, true);
			PlaySoundAtEntity("slime_anim_wall_4_sound", "slime_loop", "slime_anim_wall_4", 2.0f, true);
			PlaySoundAtEntity("slime_anim_wall_5_sound", "slime_loop", "slime_anim_wall_5", 2.0f, true);
			PlaySoundAtEntity("slime_anim_wall_6_sound", "slime_loop", "slime_anim_wall_6", 2.0f, true);
			PlaySoundAtEntity("slime_anim_wall_7_sound", "slime_loop", "slime_anim_wall_7", 2.0f, true);
			PlaySoundAtEntity("slime_anim_ceiling_2_sound", "slime_loop", "slime_anim_ceiling_2", 2.0f, true);
			PlaySoundAtEntity("slime_anim_ceiling_3_sound", "slime_loop", "slime_anim_ceiling_3", 2.0f, true);
			PlaySoundAtEntity("slime_anim_ceiling_4_sound", "slime_loop", "slime_anim_ceiling_4", 2.0f, true);
			PlaySoundAtEntity("slime_anim_ceiling_5_sound", "slime_loop", "slime_anim_ceiling_5", 2.0f, true);
			StartScreenShake(0.1, 4.7, 0.05, 0.5);
			PlaySoundAtEntity("howl","guardian_ontop.snt","Player", 0, false);
			AddTimer("scareeffect", 0.001f, "TimerPlayerReactions");
			AddTimer("breatheffect", 3.0f, "TimerPlayerReactions");
			SetLocalVarInt("AllMazeRevealed", 1);
		}
	}
}

void PlayerInteractWeb(string asEntity)
{
	PlayGuiSound("step_sneak_organic.snt", 0.9f);
	if(asEntity == "web_2")
		AddQuest("DestroyWoodSlime", "DestroyWoodSlime");
	else if(asEntity == "web_1")
		AddQuest("DestroyWoodMazeSlime", "DestroyWoodMazeSlime");
}

int GetEnemyState(string asEnemy)
{
	if(StringContains(GetEnemyStateName(asEnemy), "Hunt") || StringContains(GetEnemyStateName(asEnemy), "Alert") || StringContains(GetEnemyStateName(asEnemy), "Attack") || StringContains(GetEnemyStateName(asEnemy), "Hurt"))
		return 4;
	else if(GetEnemyStateName(asEnemy) == "BreakDoor")
		return 3;
	else if(GetEnemyStateName(asEnemy) == "Search" || GetEnemyStateName(asEnemy) == "Investigate")
		return 2;
	else if(GetEnemyStateName(asEnemy) == "Idle")
		return 0;
	else
		return 1;
}

float GetEntityPlayerDistance(string asEntity)
{
	string sEntityName = asEntity;
	float fPlayerPosX = GetPlayerPosX();
	float fPlayerPosY = GetPlayerPosY();
	float fPlayerPosZ = GetPlayerPosZ();
	float fEntityPosX = GetEntityPosX(sEntityName);
	float fEntityPosY = GetEntityPosY(sEntityName);
	float fEntityPosZ = GetEntityPosZ(sEntityName);
	float fDistance = MathSqrt(MathPow((fEntityPosX - fPlayerPosX), 2.0f) + MathPow((fEntityPosY - fPlayerPosY), 2.0f) + MathPow((fEntityPosZ - fPlayerPosZ), 2.0f));
	//AddDebugMessage("Distance between Player and " + sEntityName + " = " + fDistance, false);
	return fDistance;
}

void RemoveAnyActiveMonster()
{
	SetEntityActive(GetLocalVarString("gsCurrActiveEnemy"), false);
	FadeEnemyToSmoke(GetLocalVarString("gsCurrActiveEnemy"), false);
	SetLocalVarString("gsCurrActiveEnemy", "noenemy");
}

void ResetMonstersActivationAreas()
{
	SetLocalVarInt("MonstersActivatedVar", 0);
	SetEntityActive("AreaActiveGrunt_1", true);
	SetEntityActive("AreaActiveGrunt_2", true);
	SetEntityActive("AreaActiveBrute_1", true);
	SetEntityActive("AreaActiveBrute_2", true);
	SetEntityActive("AreaActiveBrute_3", true);
	SetEntityActive("AreaActiveBrute_4", true);
	SetEntityActive("AreaActiveSuitor_1", true);
	SetEntityActive("AreaActiveSuitor_2", true);
	SetEntityActive("AreaActiveSuitor_3", true);
	
	if(GetGlobalVarInt("WineQuest") == 1)
	{
		SetEntityActive("AreaActiveGrunt_1", false);
		SetEntityActive("AreaActiveBrute_2", false);
		if(GetGlobalVarInt("WineQuestFailed") == 0)
			SetEntityActive("AreaActiveGrunt_2", false);
	}
	if(GetGlobalVarInt("LibraryQuest") == 1)
	{
		SetEntityActive("AreaActiveGrunt_2", false);
		if(GetGlobalVarInt("LibraryQuestFailed") == 0)
			SetEntityActive("AreaActiveBrute_4", false);
	}
	if(GetGlobalVarInt("LabQuest") == 1)
	{
		SetEntityActive("AreaActiveBrute_1", false);
		SetEntityActive("AreaActiveBrute_3", false);
		SetEntityActive("AreaActiveBrute_4", false);
		if(GetGlobalVarInt("LabQuestFailed") == 0)
			SetEntityActive("AreaActiveSuitor_2", false);
	}
}

void CheckClearedVisions()
{
	if(GetGlobalVarInt("WineQuest") == 1 && GetLocalVarInt("VisionsCleared") == 0)
	{
		AddLocalVarInt("VisionsCleared", 1);
	
		CheckPoint ("WineRespawn", "PlayerStartArea_9", "CPDefaultRespawn", "DeathHints", "HideAndSurvive");
	
		SetEntityActive("SecretBook_1", true);
		SetEntityActive("SecretBook_2", true);
		SetEntityActive("SecretBook_3", true);
		SetEntityActive("SecretBook_4", true);
		SetEntityActive("AreaLibraryQuest", true);
		SetEntityActive("AreaActiveBrute_1", true);
		SetEntityActive("AreaActiveGrunt_2", false);

		PlayMusic("03_wood_theme.ogg", true, 1.0f, 1.3f, 0, false);
		
		if(GetGlobalVarInt("WineQuestFailed") == 1)
		{
			SetEntityActive("tinderbox_3", true);
			SetEntityActive("tinderbox_4", true);
			
			SetMessage("Jack", "WineQuestFail", 6.0f);
			
			SetLocalVarInt("WineRainVar", 1);
			
			SetEntityActive("SlimeWineDamageArea_1", true);
			SetEntityActive("slime_wine_1", true);
			PlaySoundAtEntity("slimewinesound", "slime_loop.snt", "slime_wine_1", 2.0f, true);
		}
		else
		{
			SetEntityActive("AreaActiveGrunt_1", false);
			SetEntityActive("potion_sanity_3", true);
			SetEntityActive("potion_oil_2", true);
			SetEntityActive("note_paper01_1", true);
			SetLightVisible("PointLight_4", true);
			PlaySoundAtEntity("winememorysound", "02_insanity_whisper_loop.snt", "note_paper01_1", 2.0f, true);
		
			SetMessage("Jack", "WineQuestSuccess", 6.0f);
		}
	}
	else if(GetGlobalVarInt("LibraryQuest") == 1 && GetLocalVarInt("VisionsCleared") == 1)
	{
		AddLocalVarInt("VisionsCleared", 1);
	
		CheckPoint ("LibraryRespawn", "PlayerStartArea_10", "CPDefaultRespawn", "DeathHints", "HideAndSurvive");
	
		ReplaceEntity("painting03_4", "painting03_4", "painting03_4_dyn", "painting03_dynamic.ent", true);
		PlaySoundAtEntity("brothersnotesound", "03_music_box.snt", "diary_paper01_1", 0.1f, true);
		
		PlayMusic("03_wood_theme.ogg", true, 1.0f, 1.3f, 0, false);
		
		SetLampLit("orb_pedestal_4", false, true);
		SetPropActiveAndFade("orb_1_of_7", false, 1.0f);
		SetEntityActive("shelf_high02_4", false);
		SetEntityActive("AreaSecretBook_1", false);
		SetEntityActive("AreaSecretBook_2", false);
		SetEntityActive("AreaSecretBook_3", false);
		SetEntityActive("AreaSecretBook_4", false);
		SetEntityActive("AreaActiveGrunt_1", false);
		SetEntityActive("AreaActiveBrute_3", true);
		SetEntityActive("AreaActiveBrute_4", false);
		
		SetEntityActive("slime_anim_ceiling_1", true);
		SetEntityActive("slime_anim_wall_1", true);
		PlaySoundAtEntity("slime_anim_ceiling_1_sound", "slime_loop", "slime_anim_ceiling_1", 0.1f, true);
		PlaySoundAtEntity("slime_anim_wall_1_sound", "slime_loop", "slime_anim_wall_1", 0.1f, true);
		if(GetGlobalVarInt("LibraryQuestFailed") == 1)
		{
			SetMessage("Jack", "LibraryQuestFail", 8.0f);
			
			for(int s=1; s<=10; s++)
			{
				SetPropActiveAndFade("slime_library_" + s, true, 2.0f);
				PlaySoundAtEntity("slime_library_" + s + "_sound", "slime_loop", "slime_library_" + s, 1.0f, true);
				AddUseItemCallback("KnifeSlimeLibrary" + s, "ceremony_knife_1", "slime_library_" + s, "UsedKnifeOnSlime", false);
			}
		}
		else
		{
			SetEntityActive("tinderbox_1", true);
			SetEntityActive("tinderbox_2", true);
			SetEntityActive("potion_sanity_1", true);
			//SetEntityActive("potion_sanity_2", true);
			SetEntityActive("potion_oil_1", true);
			SetEntityActive("potion_oil_large_1", true);
			SetEntityActive("note_paper01_2", true);
			SetLightVisible("PointLight_5", true);	
			PlaySoundAtEntity("librarymemorysound", "02_insanity_whisper_loop.snt", "note_paper01_2", 2.0f, true);
			
			AddGlobalVarInt("GlobalSlimesCount", 1);
			
			SetMessage("Jack", "LibraryQuestSuccess", 6.0f);
		}
	}
	else if(GetGlobalVarInt("LabQuest") == 1 && GetLocalVarInt("VisionsCleared") == 2)
	{
		AddLocalVarInt("VisionsCleared", 1);
	
		CheckPoint ("LabRespawn", "PlayerStartArea_6", "CPDefaultRespawn", "DeathHints", "HideAndSurvive");
		
		SetEntityActive("AreaActiveBrute_3", false);
	
		SetEntityActive("web_1", false);
		SetEntityActive("web_2", false);
		
		PlayMusic("03_wood_theme_alternative.ogg", true, 1.0f, 1.3f, 0, false);
		
		SetFogColor(0.1f, 0.025f, 0, 1.0f);
		SetSkyBoxColor(0.1f, 0.025f, 0, 1.0f);
		
		SetEntityActive("note_generic_4", false);
		SetEntityActive("blood_1", false);
		SetEntityActive("torch_bad", false);
		SetEntityActive("AreaTouchTorch", false);
		//SetEntityActive("nail_static_2", true);
		//SetEntityActive("blood_2", true);
		SetEntityActive("note_generic_5", true);
		
		SetLampLit("torch_static01_9", true, false);
		SetLampLit("torch_static01_7", true, false);
		SetLampLit("torch_static01_4", true, false);
		SetLampLit("torch_static01_1", true, false);
		
		SetEntityActive("AreaActiveGrunt_1", false);
		SetEntityActive("AreaActiveGrunt_2", false);
		SetEntityActive("AreaActiveBrute_1", false);
		SetEntityActive("AreaActiveBrute_2", false);
		SetEntityActive("AreaActiveBrute_3", false);
		SetEntityActive("AreaActiveBrute_4", false);
		
		SetEntityActive("AreaTileRed", true);
		SetEntityActive("AreaTileGreen", true);
		SetEntityActive("AreaTilePurple", true);
		SetEntityActive("AreaTileYellow", true);
		SetEntityActive("AreaTileBlue", true);
		SetEntityActive("AreaTileOrange", true);
		
		SetLeverStuckState("mazepiano_3", 0, false);
		for(int i=1; i<14; i++) SetEntityActive("AreaLitTorch_" + i, false);
		if(GetGlobalVarInt("LabQuestFailed") == 1)
		{
			SetFogProperties(1.0f, 12.5f, 0.5f, true);
			SetMessage("Jack", "LabQuestFailed", 8.0f);
			//SetEnemyIsHallucination("suitor_2", true);
		}
		else
		{
			SetFogProperties(1.0f, 17.5f, 0.5f, true);
			SetEntityActive("AreaActiveSuitor_2", false);
			SetEntityActive("note_paper01_3", true);
			SetLightVisible("PointLight_6", true);
			PlaySoundAtEntity("labmemorysound", "02_insanity_whisper_loop.snt", "note_paper01_3", 2.0f, true);
			SetMessage("Jack", "LabQuestSuccess", 8.0f);
			SetLightVisible("PointLight_6", true);
		}
		
		SetupLoadScreen("LoadingHints", "15To16", 0, "game_loading_desert.jpg");
		
		if(GetGlobalVarInt("HouseDeathCount") == 0)
			AddTimer("EnemiesAchievement", 4.0f, "TimerUnlockAchievement");
	}
	
	ResetMonstersActivationAreas();
}

void CollideAreaStartVision(string &in asParent, string &in asChild, int alState)
{
	if(GetPlayerSanity() <= 20) SetPlayerSanity(40.0f);
	AddTimer("scareeffect", 0.001f, "TimerPlayerReactions");
	AddTimer("breatheffect", 3.5f, "TimerPlayerReactions");
	SetLanternActive(false, false);
	SetPlayerActive(false);
	StartEffectFlash(0.0f, 1.0f, 0.3f);
	if(asChild == "AreaStartVision_1")
	{
		AddTimer("wine", 5.0f, "TimerLoadHouse");
		PlayMusic("03_piano_eerie_stinger01", false, 0.7f, 0.0f, 10, true);
		SetMessage("Jack", "11", 5.0f);
		TeleportPlayer("PlayerStartVisionArea_1");
		SetupLoadScreen("LoadingHints", "09To10", 0, "game_loading_brennenburg.jpg");
	}
	if(asChild == "AreaStartVision_2")
	{
		AddTimer("library", 5.0f, "TimerLoadHouse");
		PlayMusic("03_piano_eerie_stinger02", false, 0.7f, 0.0f, 10, true);
		SetMessage("Jack", "20", 5.0f);
		TeleportPlayer("PlayerStartVisionArea_2");
		SetupLoadScreen("LoadingHints", "11To12", 0, "game_loading_brennenburg.jpg");
	}
	if(asChild == "AreaStartVision_3")
	{
		AddTimer("lab", 5.0f, "TimerLoadHouse");
		PlayMusic("03_piano_eerie_stinger03", false, 0.7f, 0.0f, 10, true);
		SetMessage("Jack", "30", 5.0f);
		TeleportPlayer("PlayerStartVisionArea_3");
		SetupLoadScreen("LoadingHints", "13To14", 0, "game_loading_brennenburg.jpg");
		
		RemoveItem("mazekey_1");
		RemoveItem("mazekey_2");
	}
}

void TimerLoadHouse(string &in asTimer)
{
	if(asTimer == "wine") ChangeMap("02_house_nice_funny.map", "PlayerStartArea_4", "flashback_flash", "react_sigh");
	if(asTimer == "library") ChangeMap("02_house_nice_funny.map", "PlayerStartArea_5", "flashback_flash", "react_sigh");
	if(asTimer == "lab") ChangeMap("02_house_nice_funny.map", "PlayerStartArea_6", "flashback_flash", "react_sigh");
}

void CollideSecretBook(string &in asParent, string &in asChild, int alState)
{
	if(alState == 1) {
	SetLocalVarInt("Var"+asParent, 1);

	AddTimer(asParent, 12, "PushBackBook");

	SetPropObjectStuckState(asParent, 1);

	PlaySoundAtEntity("Sound"+asParent, "gameplay_tick", asParent, 0.0f, false);

	StartScreenShake(0.001f, 0.5f, 0.5f, 0.5f);

	PlayGuiSound("16_lever_stuck", 0.3f);

/*DEBUG
*/
AddDebugMessage("Book in area: "+asParent, true);
} else {
SetLocalVarInt("Var"+asParent, 0);

	RemoveTimer(asParent);

	PlaySoundAtEntity("Sound2"+asParent, "lock_door", asParent, 1.5f, false);
	PlayGuiSound("16_lever_stuck", 0.2f);

	StopSound("Sound"+asParent, 1.0f);

/*DEBUG
*/
AddDebugMessage("Book out of area: "+asParent, true);
}

/*All books are pulled before time is out and the secret room is revealed.
*/
if(GetLocalVarInt("VarSecretBook_1") == 1 && GetLocalVarInt("VarSecretBook_2") == 1 && GetLocalVarInt("VarSecretBook_3") == 1 && GetLocalVarInt("VarSecretBook_4") == 1) {

	CompleteQuest("LibraryBooksMission", "LibraryBooksMission");

	SetPropObjectStuckState("SecretBook_*", -1);

	SetEntityInteractionDisabled("SecretBook_*", true);

	PlaySoundAtEntity("BooksDone", "lock_door", "Player", 0, false);

	for(int i=1;i<=4;i++){ RemoveTimer("SecretBook_"+i); StopSound("SoundSecretBook_"+i, 0.0f); }

	GiveSanityBoostSmall();
	
	GiveSanityDamage(0.1f, true);

	PlayMusic("03_puzzle_secret.ogg", false, 0.7f, 0, 10, false);

	SetPropActiveAndFade("shelf_high02_4", false, 1.0f);
	
	StartScreenShake(0.05f, 1.0f, 0.5f, 0.5f);
	
	PlaySoundAtEntity("destroyshelf", "01_door", "shelf_high02_4", 0.0f, false);
	PlayGuiSound("react_scare", 1.0f);
/*DEBUG
*/
AddDebugMessage("All books in position, move shelf!", true);
}

}
void PushBackBook(string &in asTimer)
{
	SetPropObjectStuckState(asTimer, -1);

	AddTimer("2"+asTimer, 0.25f, "PushBackBook02");
}
void PushBackBook02(string &in asTimer)
{
	if(asTimer == "2SecretBook_1") SetPropObjectStuckState("SecretBook_1", 0);
	else 
	if(asTimer == "2SecretBook_2") SetPropObjectStuckState("SecretBook_2", 0);		 
	else
	if(asTimer == "2SecretBook_3") SetPropObjectStuckState("SecretBook_3", 0);
	else
	if(asTimer == "2SecretBook_4") SetPropObjectStuckState("SecretBook_4", 0);
}

void CollideAreaLitTorch(string &in asParent, string &in asChild, int alState)
{
	if(asChild == "AreaLitTorch_1")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_1", 1.0f, false);
		SetLampLit("torch_static01_1", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_1", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_2")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_2", 1.0f, false);
		SetLampLit("torch_static01_2", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_2", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_3")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_3", 1.0f, false);
		SetLampLit("torch_static01_3", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_3", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_4")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_4", 1.0f, false);
		SetLampLit("torch_static01_4", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_4", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_5")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_5", 1.0f, false);
		SetLampLit("torch_static01_5", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_5", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_6")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_6", 1.0f, false);
		SetLampLit("torch_static01_6", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_6", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_7")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_7", 1.0f, false);
		SetLampLit("torch_static01_7", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_7", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_8")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_8", 1.0f, false);
		SetLampLit("torch_static01_8", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_8", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_9")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_9", 1.0f, false);
		SetLampLit("torch_static01_9", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_9", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_10")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_10", 1.0f, false);
		SetLampLit("torch_static01_10", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_10", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_11")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_11", 1.0f, false);
		SetLampLit("torch_static01_11", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_11", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_12")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_12", 1.0f, false);
		SetLampLit("torch_static01_12", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_12", 1);
			
		CheckLitTorchPuzzle();
	}
	if(asChild == "AreaLitTorch_13")
	{
		PlaySoundAtEntity("littorchsound", "02_woosh", "torch_static01_13", 1.0f, false);
		SetLampLit("torch_static01_13", true, true);
		AddLocalVarInt("LitTorchCount", 1);
		SetLocalVarInt("LitTorchVar_13", 1);
			
		CheckLitTorchPuzzle();
	}
}

void TimerAddCollide(string &in asTimer)
{
	if(asTimer == "torch")
	{
		for(int k=1; k<14; k++) AddEntityCollideCallback("Player", "AreaLitTorch_"+k, "CollideAreaLitTorch", true, 1);
	}
	if(asTimer == "pianotiles")
	{
		SetEntityActive("AreaTileRed", true);
		SetEntityActive("AreaTileGreen", true);
		SetEntityActive("AreaTilePurple", true);
		SetEntityActive("AreaTileYellow", true);
		SetEntityActive("AreaTileBlue", true);
		SetEntityActive("AreaTileOrange", true);
	}
}

void CheckLitTorchPuzzle()
{
	if(GetLocalVarInt("LitTorchVar_1") == 1)
	{
		if(GetLocalVarInt("LitTorchVar_4") == 1)
		{
			if(GetLocalVarInt("LitTorchVar_7") == 1)
			{
				if(GetLocalVarInt("LitTorchVar_9") == 1)
				{
					GiveSanityBoost();
					AddLocalVarInt("SolvedPuzzlesCount", 1);
					AddTimer("resetspeedmul", 2.5f, "TimerStopLook");
					PlayMusic("16_puzzle_bridge", false, 1.0f, 0.2f, 10, false);
					PlaySoundAtEntity("begonewebsound", "guardian_distant2", "web_1", 0.1f, false);
					StartPlayerLookAt("web_1", 2.5f, 2.5f, "");
					StartScreenShake(0.1, 1.5f, 1,2);
					SetPlayerMoveSpeedMul(0.1f);
					SetPlayerRunSpeedMul(0.1f);
					SetPlayerLookSpeedMul(0.1f);
					SetPropHealth("web_1", 0);
					CompleteQuest("DestroyWoodMazeSlime", "DestroyWoodMazeSlime");
					StopSound("web_1_sound", 2.0f);
					FadeLightTo("PointLight_3", 0.0f, 0.0f, 0.0f, 0.0f, -1, 2);
					FadeLightTo("PointLight_8", 0.0f, 0.0f, 0.0f, 0.0f, -1, 2);
					SetEntityActive("AreaTouchTorch", false);
					SetLampLit("torch_bad", false, true);
					SetEntityInteractionDisabled("torch_bad", true);
					SetEntityInteractionDisabled("note_generic_4", true);
					for(int i=1; i<14; i++) SetEntityActive("AreaLitTorch_" + i, false);
				}
				else 
				if(GetLocalVarInt("LitTorchCount") == 4)
				{
					int lt = RandInt(1, 3);
					if(lt == 1) SetMessage("Mother", "StatuesMazeFail01", 5.0f);
					if(lt == 2) SetMessage("Mother", "StatuesMazeFail02", 5.0f);
					if(lt == 3) SetMessage("Mother", "StatuesMazeFail03", 5.0f);
					GiveSanityDamage(7.0f, true);
					PlayGuiSound("03_teleport", 1.0f);
					TeleportPlayer("PlayerStartArea_3");
					SetLocalVarInt("LitTorchCount", 0);
					for(int i=1; i<14; i++)
					{		
						SetLampLit("torch_static01_" + i, false, false);
						RemoveEntityCollideCallback("Player", "AreaLitTorch_" + i);
						SetLocalVarInt("LitTorchVar_" + i, 0);
					}
					AddTimer("torch", 2.0f, "TimerAddCollide");
				}
			}
			else 
			if(GetLocalVarInt("LitTorchCount") == 4)
			{
				int lt = RandInt(1, 3);
				if(lt == 1) SetMessage("Mother", "StatuesMazeFail01", 5.0f);
				if(lt == 2) SetMessage("Mother", "StatuesMazeFail02", 5.0f);
				if(lt == 3) SetMessage("Mother", "StatuesMazeFail03", 5.0f);
				GiveSanityDamage(8.0f, true);
				PlayGuiSound("03_teleport", 1.0f);
				TeleportPlayer("PlayerStartArea_3");
				SetLocalVarInt("LitTorchCount", 0);
				for(int i=1; i<14; i++)
				{		
					SetLampLit("torch_static01_" + i, false, false);
					RemoveEntityCollideCallback("Player", "AreaLitTorch_" + i);
					SetLocalVarInt("LitTorchVar_" + i, 0);
				}
				AddTimer("torch", 2.0f, "TimerAddCollide");
			}
		}
		else 
		if(GetLocalVarInt("LitTorchCount") == 4)
		{
			int lt = RandInt(1, 3);
			if(lt == 1) SetMessage("Mother", "StatuesMazeFail01", 5.0f);
			if(lt == 2) SetMessage("Mother", "StatuesMazeFail02", 5.0f);
			if(lt == 3) SetMessage("Mother", "StatuesMazeFail03", 5.0f);
			GiveSanityDamage(9.0f, true);
			PlayGuiSound("03_teleport", 1.0f);
			TeleportPlayer("PlayerStartArea_3");
			SetLocalVarInt("LitTorchCount", 0);
			for(int i=1; i<14; i++)
			{		
				SetLampLit("torch_static01_" + i, false, false);
				RemoveEntityCollideCallback("Player", "AreaLitTorch_" + i);
				SetLocalVarInt("LitTorchVar_" + i, 0);
			}
			AddTimer("torch", 2.0f, "TimerAddCollide");
		}
	}
	else 
	if(GetLocalVarInt("LitTorchCount") == 4)
	{
		int lt = RandInt(1, 3);
		if(lt == 1) SetMessage("Mother", "StatuesMazeFail01", 5.0f);
		if(lt == 2) SetMessage("Mother", "StatuesMazeFail02", 5.0f);
		if(lt == 3) SetMessage("Mother", "StatuesMazeFail03", 5.0f);
		GiveSanityDamage(10.0f, true);
		PlayGuiSound("03_teleport", 1.0f);
		TeleportPlayer("PlayerStartArea_3");
		SetLocalVarInt("LitTorchCount", 0);
		for(int i=1; i<14; i++)
		{		
			SetLampLit("torch_static01_" + i, false, false);
			RemoveEntityCollideCallback("Player", "AreaLitTorch_" + i);
			SetLocalVarInt("LitTorchVar_" + i, 0);
		}
		AddTimer("torch", 2.0f, "TimerAddCollide");
	}
}

void CollideAreaLitLantern(string &in asParent, string &in asChild, int alState)
{
	AddGlobalVarInt("GlobalLightsCount", 1);
	for(int i=6; i<53; i++)
	{
		if(asChild == "AreaLitLantern_" + i)
		{
			PlaySoundAtEntity("litlanternsound_" + i, "ui_use_tinderbox", "elevator_lamp_" + i, 2.0f, false);
			SetLampLit("elevator_lamp_" + i, true, true);
		}
	}
}

void CollideAreaLitLantern1(string &in asParent, string &in asChild, int alState)
{
	AddGlobalVarInt("GlobalLightsCount", 1);
	PlaySoundAtEntity("litlanternsound", "ui_use_tinderbox", "elevator_lamp_1", 2.0f, false);
	SetLampLit("elevator_lamp_1", true, true);
}

void CollideAreaLitLantern2(string &in asParent, string &in asChild, int alState)
{
	AddGlobalVarInt("GlobalLightsCount", 1);
	PlaySoundAtEntity("litlanternsound", "ui_use_tinderbox", "elevator_lamp_2", 2.0f, false);
	SetLampLit("elevator_lamp_2", true, true);
}

void CollideAreaLitLantern3(string &in asParent, string &in asChild, int alState)
{
	AddGlobalVarInt("GlobalLightsCount", 1);
	PlaySoundAtEntity("litlanternsound", "ui_use_tinderbox", "elevator_lamp_3", 2.0f, false);
	SetLampLit("elevator_lamp_3", true, true);
}

void CollideAreaLitLantern4(string &in asParent, string &in asChild, int alState)
{
	AddGlobalVarInt("GlobalLightsCount", 1);
	PlaySoundAtEntity("litlanternsound", "ui_use_tinderbox", "elevator_lamp_4", 2.0f, false);
	SetLampLit("elevator_lamp_4", true, true);
}

void CollideAreaLitLantern5(string &in asParent, string &in asChild, int alState)
{
	AddGlobalVarInt("GlobalLightsCount", 1);
	PlaySoundAtEntity("litlanternsound", "ui_use_tinderbox", "elevator_lamp_5", 2.0f, false);
	SetLampLit("elevator_lamp_5", true, true);
}

void TimerSaySomething(string &in asTimer)
{
	if(asTimer == "")
	{
		SetMessage("", "", 5.0f);
	}
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
	SetSwingDoorLocked(asEntity, false, false);
	if(asEntity == "mazedoor_1")
	{
		GiveSanityBoostSmall();
		RemoveItem(asItem);
	}
	if(asEntity == "mazedoor_2")
	{
		GiveSanityBoostSmall();
		RemoveItem(asItem);
	}
}

void TimerFadeScreen(string &in asTimer)
{
	if(asTimer == "fadein")
	{
		FadeIn(2.0f);
	}
	if(asTimer == "fadeout")
	{
		FadeOut(2.0f);
	}
	if(asTimer == "fadeinactiveplayer")
	{
		FadeIn(2.0f);
		SetPlayerActive(true);
	}
	if(asTimer == "fadeoutactiveplayer")
	{
		FadeOut(2.0f);
		SetPlayerActive(true);	
	}	
}

void TimerStopLook(string &in asTimer)
{
	if(asTimer == "resetspeedmul")
	{
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerLookSpeedMul(1.0f);
		if(GetGlobalVarInt("FastSeekerAchievement") == 1)
			SetPlayerRunSpeedMul(1.175f);
		if(GetGlobalVarInt("WardrobeAchievement") == 1)
			SetPlayerJumpForceMul(1.175f);
	}
	if(asTimer == "activeplayer")
	{
		SetPlayerActive(true);
	}
	StopPlayerLookAt();
}

void TimerPlayerReactions(string &in asTimer)
{
	if(asTimer == "scareeffect")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "breatheffect")
	{
		PlayGuiSound("react_breath", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "sigheffect")
	{
		PlayGuiSound("react_sigh", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "panteffect")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "scare")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, true);
	}
	else if(asTimer == "breath")
	{
		PlayGuiSound("react_breath", 0.5f);
		GiveSanityDamage(4.0f, false);
	}
	else if(asTimer == "sigh")
	{
		PlayGuiSound("react_sigh", 0.5f);
		GiveSanityDamage(2.0f, false);
	}
	else if(asTimer == "pant")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, true);
	}
}