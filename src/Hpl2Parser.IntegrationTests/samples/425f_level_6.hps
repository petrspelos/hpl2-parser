//////////////////////////////////////////////////////////////////////////////////////	
//OnStart
//////////////////////////////////////////////////////////////////////////////////////
void OnStart()
{
	StopMusic(0,1);
	AddEntityCollideCallback("Player", "BreakFall", "Crouch", true, 1);
	AddEntityCollideCallback("Player", "Message", "Show", false, 1);
	AddEntityCollideCallback("Player", "Roam", "StopCrouching", true, 1);
	AddEntityCollideCallback("Player", "Voice", "Opening", true, 1);
	AddUseItemCallback("", "KeyToLevel6DoorThingy", "Door", "UseKeyOnDoor", true);
	SetEntityPlayerInteractCallback("Key","Exit", true);
}

//////////////////////////////////////////////////////////////////////////////////////	
//OnEnter
//////////////////////////////////////////////////////////////////////////////////////

void OnEnter()
{
	AutoSave();
}

//////////////////////////////////////////////////////////////////////////////////////	
//Dialogue
//////////////////////////////////////////////////////////////////////////////////////
void Opening(string &in asParent, string &in asChild, int alState)
{
	SetPlayerMoveSpeedMul(0);
	SetPlayerRunSpeedMul(0);
	SetPlayerJumpDisabled(true);
	AddEffectVoice("level6_p1.ogg" ,"", "Dialogue", "Level6_1", false, "", 0, 0);
	SetEffectVoiceOverCallback("End");
}

void End()
{
	SetPlayerMoveSpeedMul(1);
	SetPlayerRunSpeedMul(1);
	SetPlayerJumpDisabled(false);
}

void Children(string &in asTimer)
{
	AddEffectVoice("InsaneGirl.ogg" ,"", "Dialogue", "Insane_Girl", false, "", 0, 0);
	AddEffectVoice("InsaneBoy.ogg" ,"", "Dialogue", "Insane_Boy", false, "", 0, 0);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Fall
//////////////////////////////////////////////////////////////////////////////////////

void StartFall(string &in asEntity)
{
	SetEntityActive("BlockPlayer", true);
	AddEffectVoice("level6_p2.ogg" ,"", "Dialogue", "Level6_2", false, "", 0, 0);
	AddTimer("", 1.5, "CollapseFloor");
}	
	
void CollapseFloor(string &in asTimer)
{
	SetPropHealth("Disappear_1", 0);
	SetPropHealth("Disappear_2", 0);
	SetPropHealth("Disappear_3", 0);
	SetPropHealth("Disappear_4", 0);
	AddEffectVoice("level6_p3.ogg" ,"", "Dialogue", "", false, "", 0, 0);
	PlaySoundAtEntity("explosion", "explosion_rock_large.snt", "RevealBloodRoom", 0, false);
	StartScreenShake( 0.1, 0.1, 0.1, 0.1);
}

void Crouch(string &in asParent, string &in asChild, int alState)
{
	StopAllEffectVoices(0);
	SetPlayerCrouching(true);
	FadeOut(0.5);
	PlayMusic("insanity_ear_ring.ogg", false, 1, 3, 1, false);
	SetPlayerActive(false);
	AddTimer("", 4, "FadeBack");
	AddTimer("", 3, "Children");
}

void FadeBack(string &in asTimer)
{
	SetPlayerActive(true);
	FadeIn(3);
	FadeImageTrailTo(3, 1);
	FadeRadialBlurTo(0.4, 1);
	AddQuest("Fall", "Break");
	AddTimer("", 6, "StopEffects");
}

void StopEffects(string &in asTimer)
{
	FadeImageTrailTo(0, 1);
	FadeRadialBlurTo(0, 1);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Key
//////////////////////////////////////////////////////////////////////////////////////
void UseKeyOnDoor(string &in asItem, string &in asEntity)
{
	SetSwingDoorLocked(asEntity, false, true);
    PlaySoundAtEntity("unlock_door", "unlock_door.snt", asEntity, 0, false);
    RemoveItem(asItem);
	CompleteQuest("Drop", "PipeKey");
}

//////////////////////////////////////////////////////////////////////////////////////	
//Door Mechanics
//////////////////////////////////////////////////////////////////////////////////////

void DoorMechanics(string &in asEntity)
{
	if(GetSwingDoorLocked(asEntity) == false)
	{
		SetMessage("Messages", "Locked", 1);
	}

	if(GetSwingDoorLocked(asEntity) == false)
	{
		SetMessage("Messages", "Blank", 1);
	}
	
	if(HasItem("Key") == true)
	{
		SetPropHealth(asEntity, -1000);
	}
}

//////////////////////////////////////////////////////////////////////////////////////	
//Entrance
//////////////////////////////////////////////////////////////////////////////////////

void StopCrouching(string &in asParent, string &in asChild, int alState)
{
	PlayMusic("Track11.ogg", true, 2, 1, 1, true);
	SetPlayerCrouching(false);
	CompleteQuest("Fall", "Break");
	SetEntityActive("Block", true);
	SetPlayerMoveSpeedMul(0.2);
	SetPlayerRunSpeedMul(0.2);
	StartPlayerLookAt("LookRight", 3, 5, "");
	AddTimer("", 2.5, "TurnLeft");
}

void StopLooking(string &in asTimer)
{
		StopPlayerLookAt();
		SetEntityActive("Block_1", false);
		SetEntityActive("Block_2", false);
		SetPlayerMoveSpeedMul(1);
		SetPlayerRunSpeedMul(1);
}

void TurnLeft(string &in asTimer)
{
	StartPlayerLookAt("LookLeft", 3, 5, "");
	AddTimer("", 1, "StopLooking");
}

//////////////////////////////////////////////////////////////////////////////////////	
//Wheels
//////////////////////////////////////////////////////////////////////////////////////

void Wheels1(string &in asEntity, int alState)
{
	if(alState != 1) return;
	
	PlaySoundAtEntity("", "18_valve_off.snt", "TurnOn_1", 1, false);
}

void Wheels2(string &in asEntity, int alState)
{
	if(alState != 1) return;
	
	PlaySoundAtEntity("", "18_valve_off.snt", "TurnOn_2", 1, false);
	SetEntityActive("Blocker", false);
	SetEntityActive("Message", false);
}

void Wheels3(string &in asEntity, int alState)
{
	if(alState != 1) return;
	
	PlaySoundAtEntity("", "18_valve_off.snt", "TurnOn_3", 1, false);
	CreateParticleSystemAtEntity("Water", "ps_pipe_flow_large.ps", "WaterFall", true);
	CreateParticleSystemAtEntity("Splash", "ps_water_dump_splash.ps", "WaterSplash", true);
	SetEntityActive("KeyToLevel6DoorThingy", true);
	StartPlayerLookAt("KeyToLevel6DoorThingy", 1, 1, "BeforeStopLook");
	AddTimer("", 3 ,"StopLookingKey");
	}

void StopLookingKey(string &in asTimer)
{
	StopPlayerLookAt();
	AddQuest("Drop", "PipeKey");
}	

//////////////////////////////////////////////////////////////////////////////////////	
//Unlock Door
//////////////////////////////////////////////////////////////////////////////////////

void UseKeyOnDoor(string &in item)
{
	SetSwingDoorLocked("Door", false, true);
	AddTimer("", 0.5, "OpenDoorSlightly");
}
	
void OpenDoorSlightly(string &in asTimer)
{
		SetPlayerMoveSpeedMul(1);
		SetPlayerRunSpeedMul(1);
        SetSwingDoorClosed("Door", false, false);
        SetSwingDoorDisableAutoClose("Door", true);
        PlaySoundAtEntity("creak", "joint_door_move_special.snt", "Door", 1, false);
        AddTimer("", 2, "TimerStopSound");
        AddTimer("Door", 0, "TimerMoveDoor");
}
 
void TimerMoveDoor(string &in asTimer)
{
        if(GetLocalVarInt("VarDoor") == 10) return;
        AddLocalVarInt("VarDoor", 1);
 
        AddTimer(asTimer, 0.03, "TimerMoveDoor");
 
        AddPropForce(asTimer, -70, 0, 0, "world");
}
 
void TimerStopSound(string &in asTimer)
{
        StopSound("creak", 0.4);
}

void Show(string &in asParent, string &in asChild, int alState)
{
	SetMessage("Messages", "Choice3", 3);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Exit
//////////////////////////////////////////////////////////////////////////////////////

void Exit(string &in item)
{
	SetLightVisible("KeyLight", false);
	SetSwingDoorClosed("Door", true, false);
	SetPropHealth("Door", -200);
	SetEntityActive("SE", true);
	ShowEnemyPlayerPosition("SE");
	SetEntityActive("Appear_1", true);
	SetEntityActive("Appear_2", true);
	SetEntityActive("Appear_3", true);
	SetEntityActive("Appear_4", true);
	CheckPoint ("", "PlayerStartArea_2", "Reset", "DeathHint", "Run");
}

//////////////////////////////////////////////////////////////////////////////////////	
//Checkpoint
//////////////////////////////////////////////////////////////////////////////////////

void Reset(string &in asName, int alCount)
{
	SetEnemyDisabled("SE", false);
}

//////////////////////////////////////////////////////////////////////////////////////	
//OnLeave
//////////////////////////////////////////////////////////////////////////////////////
void OnLeave()
{
CompleteQuest("Fall", "Break");
int load = RandInt(0, 10);
if(load == 10) SetupLoadScreen("Loading", "LoadScreen1", 0,"loading_screen1.jpg");
if(load == 1) SetupLoadScreen("Loading", "LoadScreen2", 0, "loading_screen2.jpg");
if(load == 2) SetupLoadScreen("Loading", "LoadScreen3", 0, "loading_screen3.jpg");
if(load == 3) SetupLoadScreen("Loading", "LoadScreen4", 0,"loading_screen4.jpg");
if(load == 4) SetupLoadScreen("Loading", "LoadScreen5", 0,"loading_screen5.jpg");
if(load == 5) SetupLoadScreen("Loading", "LoadScreen6", 0,"loading_screen6.jpg");
if(load == 6) SetupLoadScreen("Loading", "LoadScreen7", 0,"loading_screen7.jpg");
if(load == 7) SetupLoadScreen("Loading", "LoadScreen8", 0,"loading_screen8.jpg");
if(load == 8) SetupLoadScreen("Loading", "LoadScreen9", 0,"loading_screen9.jpg");
if(load == 9) SetupLoadScreen("Loading", "LoadScreen10", 0,"loading_screen10.jpg");
if(load == 0) SetupLoadScreen("Loading", "LoadScreen11", 0,"loading_screen11.jpg");
if(load == 11) SetupLoadScreen("Loading", "LoadScreen12", 0,"loading_screen12.jpg");
if(load == 12) SetupLoadScreen("Loading", "LoadScreen13", 0,"loading_screen13.jpg");
if(load == 13) SetupLoadScreen("Loading", "LoadScreen14", 0,"loading_screen14.jpg");
if(load == 14) SetupLoadScreen("Loading", "LoadScreen15", 0,"loading_screen15.jpg");
if(load == 15) SetupLoadScreen("Loading", "LoadScreen16", 0,"loading_screen16.jpg");
if(load == 16) SetupLoadScreen("Loading", "LoadScreen17", 0,"loading_screen17.jpg");
if(load == 17) SetupLoadScreen("Loading", "LoadScreen18", 0,"loading_screen18.jpg");
if(load == 18) SetupLoadScreen("Loading", "LoadScreen19", 0,"loading_screen19.jpg");
if(load == 19) SetupLoadScreen("Loading", "LoadScreen20", 0,"loading_screen20.jpg");
}