void OnStart()
{  
	AutoSave();
	AddEntityCollideCallback("Player", "AreaCollide_1", "BruteActive_1", true, 1);
	AddEntityCollideCallback("Player", "AreaDamage_1", "Damage", false, 1);
	AddEntityCollideCallback("Player", "shadow_1", "Shadow1", true, 1);
	AddEntityCollideCallback("Player", "shadow_2", "Shadow2", true, 1);
	AddEntityCollideCallback("Player", "shadow_3", "Shadow3", true, 1);
	AddEntityCollideCallback("Player", "shadow_4", "Shadow4", true, 1);
	AddEntityCollideCallback("Player", "Ending_4", "CureDrink", true, 1);
	AddEntityCollideCallback("Player", "Voice_1", "voice_1", true, 1);
	AddEntityCollideCallback("Player", "Voice_2", "voice_2", true, 1);
	AddEntityCollideCallback("Player", "Voice_3", "voice_3", true, 1);
	AddEntityCollideCallback("Player", "Voice_4", "voice_4", true, 1);
	AddEntityCollideCallback("Player", "BruteDissapear", "BruteInactive", true, 1);
	
FadeSepiaColorTo(0, 0.1f);
FadeRadialBlurTo(0, 0.1f);
}





void OnEnter()
{ 
	PlayMusic("Temple", true, 0.1, 0.1, 10, false);
	AddTimer("PlayerCough", 30, "TimerCough");
}




void OnLeave()
{ 
	SetupLoadScreen("LoadingText", "LoadScreen15", 0, "game_loading_rose.jpg");
}


////////////////////////////////////BruteAppears////////////////////////

void BruteActive_1(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("servant_brute_1", true);
	
	AddEnemyPatrolNode("servant_brute_1", "Path_1_1", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_2", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_3", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_4", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_5", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_6", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_7", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_8", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "Path_1_9", 0.001, "");
	
	CheckPoint("Brute", "PlayerStartArea_2", "BruteRespawn", "", "");
	
	
}

void BruteRespawn(string &in asName, int alCount)
{
	SetEntityActive("servant_brute_1", true);
} 

void BruteInactive(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("servant_brute_1", false);
	CheckPoint("Water", "PlayerStartArea_4", "WaterMusic", "", "");
}

void WaterMusic(string &in asName, int alCount)
{
	PlayMusic("Temple", true, 0.1, 0.1, 10, false);
}

//////////////////////////////////////DamagePlayer////////////////////////////

void Damage(string &in asParent, string &in asChild, int alState)
{
	GivePlayerDamage(100, "BloodSplat", false, true);
}

///////////////////////////////Cough////////////////////////////////////

void TimerCough(string &in asTimer)
{
		if(asTimer == "PlayerCough") {
	
		SetLocalVarInt("RandomInt", RandInt(1,4));
		
		GetLocalVarInt("RandomInt");
		
		}
		
		
		if(GetLocalVarInt("RandomInt") == 1) {
			PlaySoundAtEntity("", "player_cough", "Player", 0, false);
			AddTimer("PlayerCough", 16, "TimerCough");
		}
		
		else if(GetLocalVarInt("RandomInt") == 2) {
			PlaySoundAtEntity("", "player_cough", "Player", 0, false);
			AddTimer("PlayerCough", 35, "TimerCough");
		}
		
		
		else if(GetLocalVarInt("RandomInt") == 3) {
			PlaySoundAtEntity("", "player_cough", "Player", 0, false);
			AddTimer("PlayerCough", 23, "TimerCough");
		}
		
		else if(GetLocalVarInt("RandomInt") == 4) {
			PlaySoundAtEntity("", "player_cough", "Player", 0, false);
			AddTimer("PlayerCough", 25, "TimerCough");
		}
		

		
}

///////////////////////////////Shadow///////////////////////////////////

void Shadow1(string &in asParent, string &in asChild, int alState)

{
	AddEffectVoice("Shadow_9", "", "Dialogue", "Shadow_9", false, "Player", 0, 15);
	
}

void Shadow2(string &in asParent, string &in asChild, int alState)

{
	AddEffectVoice("Shadow_10", "", "Dialogue", "Shadow_10", false, "Player", 0, 15);
	
}

void Shadow3(string &in asParent, string &in asChild, int alState)

{
	AddEffectVoice("Shadow_11", "", "Dialogue", "Shadow_11", false, "Player", 0, 15);
	
}

void Shadow4(string &in asParent, string &in asChild, int alState)

{
	AddEffectVoice("Shadow_12", "", "Dialogue", "Shadow_12", false, "Player", 0, 15);
	
}

//////////////////////////////////Cure//////////////////////////////////

void CureDrink(string &in asParent, string &in asChild, int alState)
{
	
	if(GetGlobalVarInt("Ending4") == 0) return;
	
	AddTimer("PlayerCoughPass", 0.5f, "TimerPass");
	AddTimer("PlayerCoughPass2", 1.3f, "TimerPass");
	AddTimer("PlayerCoughPass3", 1.8f, "TimerPass");
	AddTimer("PlayerCrouchPass", 3, "TimerPass");
	AddTimer("PlayerLookPass", 3.3f, "TimerPass");
	AddTimer("PlayerCoughPass4", 3.5f, "TimerPass");
	AddTimer("PlayerCoughPass5", 4.6f, "TimerPass");
	AddTimer("PlayerFadeOutPass", 6, "TimerPass");
	AddTimer("PlayerStopRingPass", 11, "TimerPass");
	AddTimer("DialogueSickPass", 12, "TimerPass");
	AddTimer("PlayerWakePass", 46, "TimerPass");
	AddTimer("PlayerLook2Pass", 49, "TimerPass");
	AddTimer("PlayerMoanPass", 51, "TimerPass");
	AddTimer("PlayerLook3Pass", 53, "TimerPass");
	AddTimer("PlayerFadeOut2Pass", 54, "TimerPass");
	AddTimer("PlayerUseCurePass", 57, "TimerPass");
	AddTimer("PlayerWakeUpCuredPass", 68, "TimerPass");
	AddTimer("PlayerCuredLookPass", 72, "TimerPass");
	AddTimer("PlayerCuredResumeGameplay", 77, "TimerPass");
	
}

void TimerPass(string &in asTimer)
{
		if(asTimer == "PlayerCoughPass") {
		
		PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		SetPlayerActive(false);
		RemoveTimer("PlayerCough");
		}
		
		else if(asTimer == "PlayerCoughPass2") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerCoughPass3") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerCrouchPass") {
		
		PlaySoundAtEntity("", "player_bodyfall.snt", "Player", 1, true);
		GiveSanityDamage(100, true);
		PlaySoundAtEntity("ring", "insanity_ear_ring.snt", "Player", 1, true);
		SetPlayerCrouching(true);
		}
		
		else if(asTimer == "PlayerCoughPass4") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerLookPass") StartPlayerLookAt("AreaPassLook", 0.5, 0.5, "");
		
		else if(asTimer == "PlayerCoughPass5") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerFadeOutPass") FadeOut(2);
		
		else if(asTimer == "PlayerStopRingPass") StopSound("ring", 0.4);
		
		else if(asTimer == "DialogueSickPass") { 
			AddEffectVoice("Ending4FlashbackSick", "", "", "", false, "Player", 0, 15);
			StartPlayerLookAt("AreaPassLook_1", 0.5, 0.5, "");
			SetEntityActive("glass_container_blood_static_1", true);
			
		
		}
		
		else if(asTimer == "PlayerWakePass") {
			FadeIn(2);
			PlaySoundAtEntity("", "react_pant.snt", "Player", 1, false);
			}
			
		else if(asTimer == "PlayerLook2Pass") StartPlayerLookAt("AreaPassLook_2", 0.5, 0.5, "");
		
		else if(asTimer == "PlayerMoanPass") PlaySoundAtEntity("", "react_sigh.snt", "Player", 1, false);
			
		else if(asTimer == "PlayerLook3Pass") StartPlayerLookAt("AreaPassLook_3", 0.5, 0.5, "");
		
		else if(asTimer == "PlayerFadeOut2Pass") FadeOut(2);
		
		else if(asTimer == "PlayerUseCurePass") {
			TeleportPlayer("PlayerStartArea_3");
			SetEntityActive("glass_container_1", true);
			SetEntityActive("glass_container_blood_static_1", false);
			SetEntityActive("blood_spatter03_1", true);
			AddEffectVoice("RobertCured", "", "", "", false, "Player", 0, 15);
			StartPlayerLookAt("AreaPassLook_5", 0.5, 0.5, "");
			
			}
		
		else if(asTimer == "PlayerWakeUpCuredPass") FadeIn(2);
		
		else if(asTimer == "PlayerCuredLookPass") {
			StartPlayerLookAt("AreaPassLook_4", 0.5, 0.5, "");
			PlaySoundAtEntity("", "react_sigh.snt", "Player", 1, false);
		}
		
		else if(asTimer == "PlayerCuredResumeGameplay") {
			SetPlayerActive(true);
			SetPlayerCrouching(false);
			StopPlayerLookAt();
			RemoveItem("Cure");
		
		}
		
		
}


///////////////////////////////////LIMIT////////////////////////////////

void LIMIT(string &in asEntity, int alState)
{
	SetEntityInteractionDisabled(asEntity, true);
	
	PlaySoundAtEntity("phono_scrape", "ptest_phono_loop", asEntity, 1.0f, false);
	
	AddTimer("PlayerMusic", 5, "TimerLIMIT");

}
	

void TimerLIMIT(string &in asTimer)
{
	if(asTimer == "PlayerMusic") AddEffectVoice("LIMIT", "", "", "", true, "ScriptArea_1", 0, 5);
}


///////////////////////////////////End23////////////////////////////////

void End23(string &in asEntity)
{
	AddGlobalVarInt("Ending2/3", +1);
	
}	

void voice_1(string &in asParent, string &in asChild, int alState)
{
	if(GetGlobalVarInt("Ending2/3") < 16) return;
	AddEffectVoice("OverHere", "", "Dialogue", "OverHere", false, "Player", 0, 15);
}

void voice_2(string &in asParent, string &in asChild, int alState)
{
	if(GetGlobalVarInt("Ending2/3") < 16) return;
	AddEffectVoice("Don'tBeAfraid", "", "Dialogue", "Don'tBeAfraid", false, "Player", 0, 15);
}

void voice_3(string &in asParent, string &in asChild, int alState)
{
	if(GetGlobalVarInt("Ending2/3") < 16) return;
	AddEffectVoice("Don'tListenToIt", "", "Dialogue", "Don'tListenToIt", false, "Player", 0, 15);
}

void voice_4(string &in asParent, string &in asChild, int alState)
{
	if(GetGlobalVarInt("Ending2/3") < 16) return;
	AddEffectVoice("GoToTheOrbChamber", "", "Dialogue", "GoToTheOrbChamber", false, "Player", 0, 15);
}

void voice_5(string &in asParent, string &in asChild, int alState)
{
	if(GetGlobalVarInt("Ending2/3") < 16) return;
	AddEffectVoice("Murderer", "", "Dialogue", "Murderer", false, "Player", 0, 15);
}





			
