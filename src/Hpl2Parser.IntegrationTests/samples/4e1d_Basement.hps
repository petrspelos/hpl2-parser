////////////////////////////
// Run when entering map
void OnStart()
{
	SetPlayerMoveSpeedMul(0.911f);
	SetPlayerRunSpeedMul(1);

	SetLightVisible("PointLight_86", false);
	SetLightVisible("PointLight_85", false);
	SetLightVisible("PointLight_84", false);
	SetLightVisible("PointLight_87", false);
	SetLightVisible("PointLight_1", false);

	SetEntityActive("block_box_22", false);
	SetEntityActive("block_box_12", false);
    AddUseItemCallback("", "ItemHammer", "padlock_acid_1", "HammerAnimation", true);
    AddUseItemCallback("", "ItemHammer", "padlock_acid_2", "NeedNoteFirst", true);
	AddUseItemCallback("", "key_laboratory_1", "CisDoor", "CisUnlock", true);
	AddUseItemCallback("", "ItemHammer", "RealWood", "WoodHammerANIM", true);
	AddUseItemCallback("", "Chemy", "PlaceArea", "PotPlace", true);
    CheckPoint("Checkpoint", "FirstCheck", "DeathSettings", "DeathHints", "DHint1");
    SetEntityPlayerInteractCallback("KeyOne", "KeyOne", false);
	SetEntityPlayerInteractCallback("KeyTwo", "KeyTwo", false);
	AddUseItemCallback("", "ThirdKey", "ThirdKeyHole", "MechaKeyFunc", true);
    AddUseItemCallback("", "cellarkey", "cellar_wood01_1", "CellarUnlocked", true);
	AddUseItemCallback("", "realscrew", "fakeblock", "Barricade", true);
    AddUseItemCallback("CrowbarOnDoor", "Crowbar", "Door", "CrowbarOnDoor", true);
    SetPlayerActive(false);  
    FadeOut(0);
	AddTimer("activate_player", 1.16f, "FadeIn");
    PlayMusic("25_amb.ogg", true, 1, 4, 1, false);
	AddEntityCollideCallback("Player", "telearea", "Stuff", true, 1);
	AddEntityCollideCallback("grunt", "RipSteve", "RIP", true, 1);
	AddEntityCollideCallback("Player", "AreaLookXD", "Looking", true, 1);
	AddEntityCollideCallback("Player", "hahacyka", "GRUNTY", true, 1);
	AddEntityCollideCallback("Player", "closetarea", "closetxd", true, 1);
	AddEntityCollideCallback("Player", "closetclose", "closetrip", true, 1);
	AddEntityCollideCallback("Player", "Look3", "ButtonXD", true, 1);
	AddEntityCollideCallback("Player", "CorpseReact", "LookAtCorpse", true, 1);
	AddEntityCollideCallback("Player", "Flooded", "Great", true, 1);
	AddEntityCollideCallback("Player", "CoughBox", "Cancer", false, 1);
	AddEntityCollideCallback("Player", "CoughStop", "CancerStop", false, 1);
	AddEntityCollideCallback("Player", "CoughStopTwo", "CancerStopTwo", false, 1);
	AddEntityCollideCallback("Player", "EnemySnap", "SnapItOut", false, 1);
	AddEntityCollideCallback("Player", "ThirdCheckTrigger", "WORKPLZ", true, 1);
	AddEntityCollideCallback("Player", "PitArea", "Death", false, 1);
	AddEntityCollideCallback("Player", "AreaBreak", "DOORLMAO", true, 1);
	AddEntityCollideCallback("Player", "Pain", "UGHH", true, 1);
	AddEntityCollideCallback("Player", "CisCloseBoom", "EREKT", false, 1);
	AddEntityCollideCallback("Player", "LastBoom", "ENDXD", true, 1);
}

void notjustyet(string &in asEntity)
{
	SetMessage("ScreenText", "notjustyet", 0);
}

void Doorclose(){

if(GetLocalVarInt("VarIntLever") == 3){
	SetEntityActive("block_box_22", true);
	SetMoveObjectState("MechDoor", 0);
	AddTimer("ClosingSecond", 3.5f, "ClosingSecond");
	AddTimer("ClosingThird", 7, "ClosingThird");
	RemoveTimer("IncomingGruntCheck");
	GiveSanityBoost();
	//AddQuest("REALIZE", "REALIZE");
	AddLocalVarInt("checkifclosed", 1);
	SetEntityActive("triggerhunt", false);
}
}

void MechDoorEND(string &in asEntity, int alState)
{
     if (alState == 1)
     {
	 SetLeverStuckState(asEntity, 1, true);
	 AddLocalVarInt("VarIntLever", 1);
     Doorclose();
	 return;
     }
}

void MechDoorEND2(string &in asEntity, int alState)
{
     if (alState == 1)
     {
	 SetLeverStuckState(asEntity, 1, true);
	 AddLocalVarInt("VarIntLever", 1);
	 Doorclose();
	 return;
     }
}

void MechDoorEND3(string &in asEntity, int alState)
{
     if (alState == 1)
     {
	 SetLeverStuckState(asEntity, 1, true);
	 SetMessage("ScreenText", "ShouldBeFineNow", 0);
	 AddLocalVarInt("VarIntLever", 1);
     Doorclose();
	 return;
     }
}

void ClosingSecond(string &in asTimer)
{
	SetMoveObjectState("MechDoorTwo", 0);
}

void ClosingThird(string &in asTimer)
{
	SetMoveObjectState("MechDoorThree", 0);
	StopSound("PLZSTOP", 3);
}

void HammerAnimation(string &in asItem, string &in asEntity)
{
     SetEntityActive("ObjectHammerFirst", true);
	 StartPlayerLookAt("ObjectHammerFirst", 2, 2, "");
	 AddTimer("FirstHit", 0.6f, "FirstHit");
	 AddTimer("FirstEnd", 1, "FirstEnd");
	 AddTimer("SecondHit", 1.5f, "SecondHit");
	 AddTimer("ThirdHit", 2, "ThirdHit");
	 AddTimer("LastHit", 2.5f, "LastHit");
	 AddTimer("RLYHit", 3, "RLYHit");
	 AddTimer("REALHit", 3.5f, "REALHit");
	 AddTimer("FinishAnimation", 3.9f, "FinishAnimation");
	 SetPlayerActive(false);
}

void FirstHit(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", false);
	SetEntityActive("ObjectHammerFirstEnd", true);
}

void FirstEnd(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", true);
	SetEntityActive("ObjectHammerFirstEnd", false);
	PlaySoundAtEntity("","impact_metal_high.snt", "Player", 0, false);
	CreateParticleSystemAtEntity("", "ps_hit_metal", "Padlock", false);
}

void SecondHit(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", false);
	SetEntityActive("ObjectHammerFirstEnd", true);
}

void ThirdHit(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", true);
	SetEntityActive("ObjectHammerFirstEnd", false);
	PlaySoundAtEntity("","impact_metal_high.snt", "Player", 0, false);
	CreateParticleSystemAtEntity("", "ps_hit_metal", "Padlock", false);
}

void LastHit(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", false);
	SetEntityActive("ObjectHammerFirstEnd", true);
}

void RLYHit(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", true);
	SetEntityActive("ObjectHammerFirstEnd", false);
	PlaySoundAtEntity("","impact_metal_high.snt", "Player", 0, false);
	CreateParticleSystemAtEntity("", "ps_hit_metal", "Padlock", false);
}

void REALHit(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", false);
	SetEntityActive("ObjectHammerFirstEnd", true);
}
	 
void FinishAnimation(string &in asTimer)
{
	CreateParticleSystemAtEntity("", "ps_hit_metal", "Padlock", false);
    CreateParticleSystemAtEntity("", "ps_break_pot_plant", "Padlock", false);
    SetEntityActive("ObjectHammerFirst", true);
	SetEntityActive("FallenPadlock", true);
	SetEntityActive("ObjectHammerFirstEnd", false);
    SetEntityActive("padlock_acid_1", false);
	AddTimer("LastHammer", 0.5f, "LastHammer");
	GiveSanityBoost();
	SetPlayerActive(true);
	StopPlayerLookAt();
	PlaySoundAtEntity("","break_wood_metal", "Player", 0, false);
	SetSwingDoorLocked("prison_section_1", false, false);
}

void LastHammer(string &in asTimer)
{
	SetEntityActive("ObjectHammerFirst", false);
	SetEntityActive("ObjectHammerFirstEnd", false);
}

void CrowbarOnDoor (string &in asItem, string &in asEntity) 
{
	RemoveItem(asItem);
	PlaySoundAtEntity("","puzzle_place_jar", "Player", 0, false);
	SetEntityActive("Joint", true);
	AddEntityCollideCallback("Joint", "AreaCrowbarCollide", "BreakCrowbarDoor", true, 1);
	SetPlayerActive(false);
	StartPlayerLookAt("Joint", 1.3f, 1.3f, "");
    AddGlobalVarInt("HotelNight", 1);
	AddTimer ("", 1, "EnablePlayer");
}

void EnablePlayer (string &in asTimer)
{
	SetPlayerActive(true);
	StopPlayerLookAt();
}

void BreakCrowbarDoor(string &in asParent, string &in asChild, int alState)
{
	GiveSanityBoostSmall();
	SetSwingDoorDisableAutoClose("realstorage", true);
	SetSwingDoorClosed("Door", false,false);
	PlaySoundAtEntity("break","break_wood_metal", "AreaCrowbar", 0, false);
	SetEntityActive("Joint", false);
	SetEntityActive("Broken", true);
	AddTimer("TimerPushDoor", 0.1f, "TimerPushDoor");	
	PlaySoundAtEntity("", "break_wood.snt", "realstorage", 0, false);
	PlayMusic("10_puzzle01.ogg", false, 0.7, 0.1, 10, false);
	SetEntityActive("Door", false);
	SetEntityActive("realstorage", true);
}

void TimerPushDoor(string &in asTimer)
{
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "AreaEffect", false);
	SetSwingDoorClosed("realstorage", false, false);
	AddPropImpulse("realstorage", 2.21f, 0, 0, "world");
}


void CellarUnlocked(string &in asItem, string &in asEntity)
{
    PlaySoundAtEntity("", "unlock_door", "cellar_wood01_1", 0, false);
    SetSwingDoorLocked("cellar_wood01_1", false, true);
	RemoveItem(asItem);
	SetEntityActive("cellar_wood01_1", false);
	SetEntityActive("realcellar", true);
}

void Gate(string &in asEntity)
{
    SetMoveObjectState("graydoor", 0.6f);
    SetMessage("ScreenText", "DoorMessage", 0);
    AddTimer("closegate", 2, "closegate");
}

void closegate(string &in asTimer)
{
    SetMoveObjectState("graydoor", 0.0f);
}

void Stuff(string &in asParent, string &in asChild, int alState)
{
    PlaySoundAtEntity("","door_level_cellar_close","Player", 0, false);
    SetLampLit("Lamp1", false, true);
	SetLampLit("Lamp2", false, true);
    PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
	AddTimer("LookTimer", 4, "LookTimer");
	AddTimer("LadderTimer", 3, "LadderTimer");
    StartPlayerLookAt("Arealook2", 5, 5, "");
    GiveSanityDamage(25, true);
    SetMessage("ScreenText", "FirstMessage", 0);
	PlayMusic("20_event_darkness.ogg", false, 0.9f, 1, 1, false);
	SetPlayerActive(false);
    PlaySoundAtEntity("","general_wind_whirl.snt","Player", 0, false);
}

void Looking(string &in asParent, string &in asChild, int alState)
{
	AddTimer("InspectTimer", 3, "InspectTimer");
	AddTimer("InspectTimer2", 6, "InspectTimer2");
	AddTimer("Move", 10, "Move");
    StartPlayerLookAt("Look1", 1.5f, 1.5f, "");
	SetPlayerActive(false);
    SetMessage("ScreenText", "FourthMessage", 0);
}


void LookTimer(string &in asTimer)
{
    StopPlayerLookAt();
    SetPlayerActive(true);
    SetEntityActive("grunt",true);
    AddEnemyPatrolNode("grunt","PathNodeArea_1",0,"");
    AddEnemyPatrolNode("grunt","PathNodeArea_2",0,"");
    AddEnemyPatrolNode("grunt","PathNodeArea_3",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_4",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_5",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_6",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_7",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_8",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_9",0,"");
	SetPlayerMoveSpeedMul(0.9f);
}

void InspectTimer2(string &in asTimer)
{
    SetMessage("ScreenText", "FifthMessage", 0);
    StartPlayerLookAt("Look3", 1.5f, 1.5f, "");
}

void InspectTimer(string &in asTimer)
{
    StartPlayerLookAt("Look2", 1.5f, 1.5f, "");
}

void LadderTimer(string &in asTimer)
{
    SetMessage("ScreenText", "SecondMessage", 0);
    StartPlayerLookAt("AreaLADDER", 1.5f, 1.5f, "");
}

void Move(string &in asTimer)
{
    SetMessage("ScreenText", "SixthMessage", 0);
    SetPlayerActive(true);
	SetPlayerMoveSpeedMul(0.7f);
	StopPlayerLookAt();
}

void RIP(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("grunt", false);
	PlaySoundAtEntity("","door_level_cellar_open","Player", 0, false);
	SetMessage("ScreenText", "ThirdMessage", 0);
    PlayMusic("01_amb_darkness.ogg", true, 1, 4, 1, false);
	//AddQuest("ELEVATOR", "ELEVATOR");
	SetEntityActive("fakeelevator", false);
	SetEntityActive("realelevator", true);
	AddTimer("MSGtimer", 12, "MSGtimer");
    SetEntityPlayerInteractCallback("Button", "NewMap", false);
	GiveSanityBoostSmall();
}

void MSGtimer(string &in asTimer)
{
    SetMessage("ScreenText", "MSG", 0);
}

void GRUNTY(string &in asParent, string &in asChild, int alState)
{
	AddTimer("lookgrunty", 0.47f, "lookgrunty");
	SetEntityActive("grunty", true);
	AddEnemyPatrolNode("grunty", "nod1", 0.0001f, "run");
	AddEnemyPatrolNode("grunty", "nod2", 0.0001f, "run");
	AddEnemyPatrolNode("grunty", "nod3", 0.0001f, "run");
	ShowEnemyPlayerPosition("grunty");
}

void lookgrunty(string &in asTimer)
{
	StartPlayerLookAt("grunty", 14, 16, "");
	AddTimer("lookgruntystop", 2, "lookgruntystop");
}

void lookgruntystop(string &in asTimer)
{
	StopPlayerLookAt();
}

void closetxd(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("","react_scare.snt","Player", 0, false);
	AddPropForce("cabinet_simple_1", 0, 0, 76, "world");	
}

void closetrip(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("","react_scare.snt","Player", 0, false);
	SetSwingDoorClosed("cabinet_simple_1", true, true);
	PlaySoundAtEntity("","react_breath.snt","Player", 0, false);
}

void ButtonXD(string &in asParent, string &in asChild, int alState)
{
	AddQuest("ELEVATORXD", "ELEVATORXD");
	SetEntityActive("cellarkey", true);
}

void FadeIn(string &in asTimer)
{
    SetPlayerActive(true);
	FadeIn(1.6f);
}

void DoorLockedPlayer(string &in entity)
{
   SetMessage("ScreenText", "msgname", 0);
}

void Something(string &in entity)
{
   SetMessage("ScreenText", "pit", 0);
   PlaySoundAtEntity("","insanity_whisper.snt","Player", 0, false);
}

void DickArea(string &in entity)
{
   PlaySoundAtEntity("","ui_sanity_gain.snt","Player", 0, false);
}

void LockedDoorXD(string &in entity)
{
   SetMessage("ScreenText", "msgname2", 0);
}

void Barricade(string &in asItem, string &in asEntity)
{
    PlaySoundAtEntity("", "unlock_door", "fakeblock", 0, false);
    SetEntityActive("fakeblock", false);
    SetEntityActive("BarArea", false); 
	SetEntityActive("legitblock", true);
	SetSwingDoorLocked("cellar_wood01_3", false, false);
}

void LookAtCorpse(string &in asParent, string &in asChild, int alState)
{
    CheckPoint("Checkpoint2", "CancerRespawn", "DeathSettings2", "DeathHints", "DHint2");
    PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
	AddTimer("StopTimer", 6, "StopTimer");
    StartPlayerLookAt("Corpse", 1.5f, 1.5f, "");
    GiveSanityDamage(16, true);
    SetMessage("ScreenText", "CorpseMessage", 0);
	PlayMusic("11_event_tree.ogg", false, 0.9f, 1, 1, false);
	SetPlayerMoveSpeedMul(0.2f);
	FadeImageTrailTo(1, 2);
	FadeRadialBlurTo(0.10, 2);
	FadeRadialBlurTo(0.10, 2);
}

void StopTimer(string &in asTimer)
{
    AddTimer("MusicTimer", 5, "MusicTimer");
	SetPlayerMoveSpeedMul(0.7f);
	StopPlayerLookAt();
	FadeImageTrailTo(0, 1.0f);
    FadePlayerRollTo(0, 33, 33);   
	FadeRadialBlurTo(0.0, 1);
}

void MusicTimer(string &in asTimer)
{
     PlayMusic("04_amb.ogg", true, 1, 4, 1, false);
}

void Great(string &in asParent, string &in asChild, int alState)
{
     SetMessage("ScreenText", "WetMSG", 0);
}

void LooksRusty(string &in asEntity)
{
    SetMessage("ScreenText", "LooksRusty", 0);
}

void Cancer(string &in asParent, string &in asChild, int alState)
{
     PlaySoundAtEntity("","player_cough.snt","Player", 0, false);
	 GivePlayerDamage(5, "BloodSplat", false, true);
	 AddTimer("Cyka", 10, "Cyka");
}

void Cyka(string &in asTimer)
{
     PlaySoundAtEntity("","player_cough.snt","Player", 0, false);
	 GivePlayerDamage(2, "BloodSplat", false, true);
	 AddTimer("Cyka", 10, "Cyka");
}

void CancerStop(string &in asParent, string &in asChild, int alState)
{
     RemoveTimer("Cyka");
}

void CancerStopTwo(string &in asParent, string &in asChild, int alState)
{
     RemoveTimer("Cyka");
}

void MechDoorInteract(string &in asEntity)
{
     SetMessage("ScreenText", "Heavy", 0);
}

void QuestPaper(string &in asEntity)
{
     AddQuest("HeavyMemento", "HeavyMemento");
}

void KeyOne(string &in asEntity)
{
     SetMessage("ScreenText", "KeyOne", 0);
}

void KeyTwo(string &in asEntity)
{
     SetMessage("ScreenText", "KeyTwo", 0);
}

void MechDoorKaxoPisteXD(string &in asEntity, int alState)
{
     if (alState == 1)
     {
	 PlaySoundAtEntity("","13_attach_wheel.snt","MechDoor", 0, false);
	 SetMessage("ScreenText", "KeyMissing", 0);
	 return;
     }
}

void MechDoorXD(string &in asEntity, int alState)
{
     if (alState == 1)
     {
	 SetLeverStuckState(asEntity, 1, true);
	 CompleteQuest("ELEVATOR", "ELEVATOR");
	 CompleteQuest("ELEVATORXD", "ELEVATORXD");
	  PlaySoundAtEntity("","13_attach_wheel.snt","MechDoor", 0, false);
	  PlayMusic("03_puzzle_secret.ogg", false, 0.7, 0.1, 10, false);
      SetMoveObjectState("MechDoor", 1.0f);
	  AddTimer("DoorBreakOne", 4, "DoorBreakOne");
	  AddTimer("DoorBreakTwo", 6, "DoorBreakTwo");
	  AddTimer("DoorBreakThree", 8, "DoorBreakThree");
	  AddTimer("DoorBreakFour", 10, "DoorBreakFour");
	  AddTimer("DoorBreakFive", 12, "DoorBreakFive");
	  AddTimer("Mecha", 3.5f, "Mecha");
	 AddTimer("MechaLOL", 7, "MechaLOL");
	 GiveSanityBoostSmall();
	 RotatePropToSpeed("elevator_machine_cog_main_real", 1, 1, 1, 0, 0, false, "");
	 RotatePropToSpeed("cogwheel01_mounted", 1, 2, 0, 0, 1, false, "");
	 RotatePropToSpeed("cogwheel02_mounted", -1, -2, 0, 0, 1, false, "");
	 RotatePropToSpeed("cogwheel03_mounted", 1, 2, 0, 0, 1, false, "");
	 PlaySoundAtEntity("PLZSTOP","13_machine_run.snt", "cogwheel01_mounted", 0, false);
	 SetEntityActive("block_box_12", false);
	 SetEntityConnectionStateChangeCallback("InclineLever", "");

	 return;
     }
}

void Mecha(string &in asTimer)
{
     SetMoveObjectState("MechDoorTwo", 1.0f);
}

void LookOnDoor(string &in asTimer)
{
      PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
}

void DoorBreakOne(string &in asTimer)
{
     CreateParticleSystemAtEntity("", "ps_break_pot_plant", "DoorArea", false);
     PlaySoundAtEntity("","break_wood.snt","DoorArea", 0,false);
}

void DoorBreakTwo(string &in asTimer)
{
     CreateParticleSystemAtEntity("", "ps_break_pot_plant", "DoorArea", false);
     PlaySoundAtEntity("","break_wood.snt","DoorArea", 0,false);
}

void DoorBreakThree(string &in asTimer)
{
     CreateParticleSystemAtEntity("", "ps_break_pot_plant", "DoorArea", false);
     PlaySoundAtEntity("","break_wood.snt","DoorArea", 0,false);
}

void DoorBreakFour(string &in asTimer)
{
     CreateParticleSystemAtEntity("", "ps_break_pot_plant", "DoorArea", false);
     PlaySoundAtEntity("","break_wood.snt","DoorArea", 0,false);
}

void DoorBreakFive(string &in asTimer)
{
     CreateParticleSystemAtEntity("", "ps_break_pot_plant", "DoorArea", false);
     PlaySoundAtEntity("","break_wood.snt","DoorArea", 0,false);
}

void MechaLOL(string &in asTimer)
{
     SetMoveObjectState("MechDoorThree", 1.0f);
	 AddTimer("DoorStop", 2.5f, "DoorStop");
}

void DoorStop(string &in asTimer)
{
     StopPlayerLookAt();
	 SetPlayerMoveSpeedMul(0.9f);
	 SetPlayerActive(true);  
}

void MechaKeyFunc(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("","unlock_door","Player", 0,false);
	CompleteQuest("HeavyMemento", "HeavyMemento");
	SetEntityConnectionStateChangeCallback("InclineLever", "MechDoorXD");
	RemoveItem(asItem);
	SetEntityActive("ThirdKeyJoint", true);
	SetEntityActive("BreakDoorREAL", true);
}

void SnapItOut(string &in asParent, string &in asChild, int alState)
{
	 AddTimer("IncomingGruntCheck", 4.2f, "IncomingGruntCheck");
	 SetMessage("ScreenText", "IBetterClose", 0);
	 SetLocalVarInt("checkifclosed", 0);
	 SetEntityActive("EnemySnap", false);
}


void IncomingGruntCheck(string &in asTimer)
{
	if(GetLocalVarInt("checkifclosed") == 0)
	{
		AddEntityCollideCallback("Player", "triggerhunt", "closedhunt", false, 1);
		SetEntityActive("triggerhunt", true);
	}
	
}

void closedhunt(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("minutegrunt", true);
	AddEnemyPatrolNode("minutegrunt","sur_1", 0.01f, "");
	AddEnemyPatrolNode("minutegrunt","sur_2", 0.01f, "");
	AddEnemyPatrolNode("minutegrunt","sur_3", 0.01f, "");
	ShowEnemyPlayerPosition("minutegrunt");
	SetEntityActive("triggerhunt", false);
	SetEntityInteractionDisabled("FirstLever", true);
	SetEntityInteractionDisabled("SecondLever", true);
	SetEntityInteractionDisabled("ThirdLever", true);
}


void DeathSettings(string &in asName, int alCount)
{

	FadeIn(0.69f);
	SetEntityActive("grunt", true);
	AddEnemyPatrolNode("grunt","PathNodeArea_1",0,"");
    AddEnemyPatrolNode("grunt","PathNodeArea_2",0,"");
    AddEnemyPatrolNode("grunt","PathNodeArea_3",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_4",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_5",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_6",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_7",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_8",0,"");
	AddEnemyPatrolNode("grunt","PathNodeArea_9",0,"");
	PlaySoundAtEntity("","door_level_cellar_close","Player", 0, false);
}

void DeathSettings2(string &in asName, int alCount)
{
	FadeIn(1);
	SetEntityActive("EnemySnap", true);
	SetEntityInteractionDisabled("FirstLever", false);
	SetEntityInteractionDisabled("SecondLever", false);
	SetEntityInteractionDisabled("ThirdLever", false);
	SetEntityActive("minutegrunt", false);
}

void Death(string &in asParent, string &in asChild, int alState)
{
    GivePlayerDamage(200, "BloodSplat", false, true);
    PlaySoundAtEntity("","react_pant.snt","Player", 0,false);
    FadeOut(1);
}

void WORKPLZ(string &in asParent, string &in asChild, int alState)
{
CheckPoint("Checkpoint3", "ThirdCheck", "DeathSettings3", "DeathHints", "DHint3");
}

void DeathSettings3(string &in asName, int alCount)
{
FadeIn(1);
}

void WoodHammerANIM(string &in asItem, string &in asEntity)
{
    PlaySoundAtEntity("","impact_metal_low.snt", "Player", 0, false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "FirstEffect", false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "SecondEffect", false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "ThirdEffect", false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "FourthEffect", false);
	GiveSanityBoost();
	SetPlayerActive(true);  
	StopPlayerLookAt();
	SetEntityActive("RealWood", false);
	SetEntityActive("BrokenWood", true);
	PlaySoundAtEntity("","break_wood_metal.snt", "Player", 0, false);
	//CompleteQuest("REALIZE", "REALIZE");
}

void DOORLMAO(string &in asParent, string &in asChild, int alState)
{
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "BreakEffect", false);
	PlaySoundAtEntity("","hit_wood.snt", "Player", 0, false);
	GiveSanityDamage(25, true);
	PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
	PlaySoundAtEntity("","insanity_baby_cry.snt","Player", 0, false);
    PlayMusic("LabAmb.ogg", true, 0.7, 0.1, 125, false);
}

void PickUpXD(string &in entity)
{
   SetMessage("ScreenText", "Pot", 0);
}

void LetterQuest(string &in entity)
{
   AddQuest("New", "New");
   SetEntityActive("padlock_acid_2", false);
   SetEntityActive("padlock_acid_1", true);
   AddQuest("Memento", "Memento");
}

void PotPlace(string &in asItem, string &in asEntity)
{
	RemoveItem(asItem);
	AddUseItemCallback("", "flask01_aqua_regia_1", "PlaceArea", "AddingMix", true);
	AddUseItemCallback("", "NameOfFirstPlant", "PlaceArea", "AddingFirstIngr", true);
	AddUseItemCallback("", "NameOfSecondPlant", "PlaceArea", "AddingSecondIngr", true);
	SetLightVisible("PointLight_66", false);
    SetLightVisible("PointLight_65", false);
    SetLightVisible("PointLight_54", false);
	SetLightVisible("PointLight_67", false);
	SetLightVisible("PointLight_68", false);
	SetLightVisible("PointLight_69", false);
	SetEntityActive("InvisibleEmpty", true);
	PlaySoundAtEntity("","26_place_glass.snt","Player", 0, false);
	SetLocalVarInt("methcook", 0);
}

void AddingMix(string &in asItem, string &in asEntity)
{
    SetPlayerActive(false);
	RemoveItem(asItem);
    SetEntityActive("Pouring", true);
	AddTimer("PourTimer", 2, "PourTimer");
	CreateParticleSystemAtEntity("Destroyer", "ps_liquid_epoxy_drip", "DripEffect", false);
	PlaySoundAtEntity("STOPXD","12_epoxy_drip","Pouring", 0, false);
	AddTimer("PourTimerSOUND", 2, "PourTimerSOUND");
	AddLocalVarInt("methcook", 1);
}

void PourTimer(string &in asTimer)
{
	SetEntityActive("Pouring", false);
	SetPlayerActive(true);
	DestroyParticleSystem("Destroyer");
	SetEntityActive("InvisibleHalf", true);
	SetEntityActive("InvisibleEmpty", false);
	if(GetLocalVarInt("methcook")==3)
	{
    	MethDone();
	}
}

void PourTimerSOUND(string &in asTimer)
{
	StopSound("STOPXD", 1);
}


void AddingFirstIngr(string &in asItem, string &in asEntity)
{
    PlaySoundAtEntity("","slime_create.snt","Player", 0, false);
	RemoveItem(asItem);
	AddLocalVarInt("methcook", 1);


	if(GetLocalVarInt("methcook")==3)
	{
    	MethDone();
	}

}

void AddingSecondIngr(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("","slime_create.snt","Player", 0, false);
	RemoveItem(asItem);
	AddLocalVarInt("methcook", 1);

	if(GetLocalVarInt("methcook")==3)
	{
    	MethDone();
	}

}

void MethDone()
{
	SetEntityActive("InvisibleHalf", false);
	GiveSanityBoost();
	CompleteQuest("CisXD", "CisXD");
	CompleteQuest("Memento", "Memento");
	CompleteQuest("New", "New");
	SetEntityActive("Complete", true);
	SetEntityActive("InvisibleHalf", false);
	PlayMusic("12_puzzle_epoxy.ogg", false, 1, 4, 69, false);
	StopMusic(0, 1);
	SetPlayerActive(true);
	SetEntityActive("PlaceArea", false);
}

void Complete(string &in entity)
{
   SetPlayerActive(false);
   SetEntityActive("antidote_corpse_2", true);
   PlaySoundAtEntity("WTF","player_climb.snt","Player", 0, false);
   AddTimer("CorpseXD", 0.5f, "CorpseXD");
}

void CorpseXD(string &in asTimer)
{
    SetLampLit("torch_static01_12", false, false);
	SetEntityActive("antidote_corpse_1", false);
	PlaySoundAtEntity("WTF","player_climb.snt", "Player", 0, false);
	SetMessage("ScreenText", "DickArea", 0);
	StartPlayerLookAt("DickAreaXD", 5, 5, "");
	AddTimer("CorpseXDLOL", 3, "CorpseXDLOL");
	AddTimer("CorpseXDLOLREKT", 3.6f, "CorpseXDLOLREKT");
	AddTimer("Buhach", 11, "Buhach");
	AddTimer("Lie", 6, "Lie");
	AddTimer("Up", 16, "Up");
	PlaySoundAtEntity("","general_wind_whirl.snt","Player", 0, false);
	StopMusic(0, 1);
}
void CorpseXDLOL(string &in asTimer)
{
	StartPlayerLookAt("DickArea_1", 5.5f, 7, "");
	RemoveItem("Complete");
}

void CorpseXDLOLREKT(string &in asTimer)
{
	FadeOut(0);	
	GiveSanityDamage(25, true);
	PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
	SetEntityActive("LastLocked", true);
	SetEntityActive("CisDoorOPEN2", false);
	SetEntityActive("cave_in_9", true);
}







void Drainage(string &in asEntity)
{
	AddQuest("CisXD", "CisXD");
	AddEntityCollideCallback("Player", "halluc", "hallucscript", true, 1);
	SetEntityActive("halluc", true);
	SetEntityActive("standgirl", true);
	SetEntityActive("torch_static01_19", false);
	SetEntityActive("torch_static01_blue", true);
	SetLightVisible("PointLight_86", true);
	SetLightVisible("PointLight_85", true);
	SetLightVisible("PointLight_84", true);
	SetLightVisible("PointLight_87", true);
	SetLightVisible("PointLight_1", true);

	SetLampLit("torch_static01_20", false, false);
	SetLampLit("torch_static01_21", false, false);
	SetLampLit("torch_static01_13", false, false);
	SetLampLit("torch_static01_17", false, false);
	SetLampLit("torch_static01_18", false, false);
	SetLampLit("torch_static01_16", false, false);

}

void hallucscript(string &in asParent, string &in asChild, int alState)
{
	StartPlayerLookAt("standgirl", 10, 11, "");
	AddTimer("girlstop", 1.47f, "girlstop");
	SetPlayerCrouching(false);
	SetPlayerCrouchDisabled(true);
	SetPlayerMoveSpeedMul(0.36f);
}

void deadbody(string &in asEntity)
{
	SetMessage("ScreenText", "deadbody", 0);
}

void girlstop(string &in asTimer)
{
	AddTimer("bluelight", 0.76f, "bluelight");
	SetPlayerCrouchDisabled(false);
	StopPlayerLookAt();
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "halluceffect1", false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "halluceffect2", false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "halluceffect3", false);
	GiveSanityDamage(1, true);
	SetEntityActive("standgirl", false);
	SetLampLit("torch_static01_blue", false, true);
	SetEntityActive("torch_static01_19", true);
	SetLampLit("torch_static01_19", false, false);
	SetLightVisible("PointLight_86", false);
	SetLightVisible("PointLight_85", false);
	SetLightVisible("PointLight_84", false);
	SetLightVisible("PointLight_87", false);
	SetLightVisible("PointLight_1", false);
	SetPlayerMoveSpeedMul(0.89f);
}

void bluelight(string &in asTimer)
{
	SetMessage("ScreenText", "thatgirl", 0);
	SetEntityActive("torch_static01_blue", false);
}

void CisUnlock(string &in asItem, string &in asEntity)
{
    SetEntityActive("CisDoorOPEN", true);
	SetEntityActive("CisDoor", false);
	RemoveItem(asItem);
	PlaySoundAtEntity("","unlock_door.snt","Player", 0, false);
}

void Buhach(string &in asTimer)
{
	FadeIn(4);	
	SetEntityActive("Pain", true);
}

void Lie(string &in asTimer)
{
	MovePlayerHeadPos(0.0f, -1.1f, 0.0f, 1.0f, 0.5f);
	FadeRadialBlurTo(0.10, 2);
	SetPlayerCrouching(false);
	FadePlayerRollTo(15, 1, 1);
	SetEntityActive("antidote_corpse_1", true);
	SetEntityActive("antidote_corpse_2", false);
}

void Up(string &in asTimer)
{
	SetPlayerActive(true); 
    FadeImageTrailTo(0, 1.0f);
    MovePlayerHeadPos(0.0, 0, 0, 1.0f, 0.5f);
	SetPlayerMoveSpeedMul(0.65f);
	SetPlayerRunSpeedMul(0.65f);
	StopPlayerLookAt();
	PlaySoundAtEntity("","player_cough.snt","Player", 0, false);
	SetMessage("ScreenText", "Close2", 0);
}

void UGHH(string &in asParent, string &in asChild, int alState)
{
    SetMessage("ScreenText", "Hurts", 0);
    PlaySoundAtEntity("","player_cough.snt","Player", 0, false);
	AddQuest("LELEXDLOL", "LELEXDLOL");
	CompleteQuest("notetwo", "PickUpNoteQUEST");
	SetEntityActive("LastBoom", true);
	SetEntityActive("DisableArea", true);
	SetEntityActive("CisCloseBoom", true);
	AddTimer("RockFall", 4, "RockFall");
	SetPlayerRunSpeedMul(0.69f);
}

void EREKT(string &in asParent, string &in asChild, int alState)
{
    CreateParticleSystemAtEntity("", "ps_break_cavein", "ScriptArea_WTF", false);
	CreateParticleSystemAtEntity("", "ps_break_cavein", "ScriptArea_WTF_1", false);
	CreateParticleSystemAtEntity("", "ps_break_cavein", "ScriptArea_WTF_2", false);
    PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
	SetEntityActive("CisCloseBoom", false);
	SetEntityActive("torch_static01_10", false);
	SetEntityActive("cave_in_3", true);
	SetEntityActive("cave_in_4", true);
	SetEntityActive("wood_box02_10", false);
	SetEntityActive("wood_box02_8", false);
	StartScreenShake(0.8f,0.8f, 0.16f, 8.2f);
	FadeRadialBlurTo(0.0, 1);
	AddTimer("INTENSE", 14, "INTENSE");
	CheckPoint("Checkpoint4", "CollapseRestart", "DeathSettings4", "DeathHints", "DHint4");
	PlayMusic("08_amb.ogg", false, 0.7, 0.1, 16, false);
	PlaySoundAtEntity("", "explosion_rock_large.snt", "Player", 0, false);
	SetMessage("ScreenText", "LASTRESORT", 0);
}

void ENDXD(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("notjustyet", false);
    CreateParticleSystemAtEntity("", "ps_break_cavein", "ScriptArea_LOL", false);
	CreateParticleSystemAtEntity("", "ps_break_cavein", "ScriptArea_LOL_1", false);
	CreateParticleSystemAtEntity("", "ps_break_cavein", "ScriptArea_LOL_2", false);
	CreateParticleSystemAtEntity("", "ps_break_cavein", "ScriptArea_LOL_2", false);
    PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
	SetEntityActive("cave_in_1", true);
	SetEntityActive("cave_in_2", true);
	SetEntityActive("cave_in_8", true);
	StartScreenShake(0.8f, 0.8f, 0.16f, 4.6f);
	RemoveTimer("INTENSE");
	GiveSanityBoost();
	PlayMusic("29_event_end.ogg", false, 1, 0, 17, false);
	SetSwingDoorDisableAutoClose("castle_arched01_1", true); 
    SetSwingDoorClosed("castle_arched01_1", false, true);    
	AddPropForce("castle_arched01_1", 0, 0, 121, "world");
	CompleteQuest("notetwo", "PickUpNoteQUEST");
	PlaySoundAtEntity("", "explosion_rock_large.snt", "Player", 0, false);
	SetEntityActive("block_box_12", true);
	SetEntityActive("EXITXD", true);
	AddPropForce("stone_small01_1", 0, 1000, -5000, "world");
	AddPropForce("stone_small01_2", 0, 1000, -5000, "world");
	AddPropForce("stone_small01_3", 0, 1000, -5000, "world");
	AddPropForce("stone_small01_4", 0, 1000, -5000, "world");
	SetEntityActive("stone_small01_1", true);
	SetEntityActive("stone_small01_2", true);
	SetEntityActive("stone_small01_3", true);
	SetEntityActive("stone_small01_4", true);
	AddTimer("fewww", 4, "fewww");
	StopMusic(0, 1);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "LastBoomEffect", false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "LastBoomEffect_1", false);
	CreateParticleSystemAtEntity("", "ps_break_pot_plant", "LastBoomEffect_2", false);
	SetEntityActive("fallen", true);
	SetEntityActive("castle_arched01_1", false);
}

void fewww(string &in asTimer)
{
    GiveSanityBoost();
	SetMessage("ScreenText", "fewww", 0);
	SetupLoadScreen("LoadingText", "textstart2", 1, "insertnamehere.jpg");
}

void DeathSettings4(string &in asName, int alCount)
{
	PlayMusic("29_amb.ogg", true, 0.7, 0.1, 16, false);
	SetEntityActive("CisCloseBoom", true);
	SetEntityActive("torch_static01_10", true);
	SetEntityActive("cave_in_3", false);
	SetEntityActive("cave_in_4", false);
	SetEntityActive("cave_in_8", false);
	SetEntityActive("cave_in_2", false);
	SetEntityActive("cave_in_1", false);
	SetEntityActive("wood_box02_10", true);
	SetEntityActive("wood_box02_8", true);
	SetPlayerRunSpeedMul(0.8f);
	FadeIn(1);
}

void INTENSE(string &in asTimer)
{
    PlaySoundAtEntity("", "explosion_rock_large.snt", "Player", 0, false);
	PlaySoundAtEntity("","react_pant.snt","Player", 0, false);
	GivePlayerDamage(200, "BloodSplat", false, true);
	FadeOut(0);
}

void RockFall(string &in asTimer)
{
	StartScreenShake(0.14f,0.14f, 0.14f,4.2f);
	SetEntityActive("stone_small01_brown_17", true);
	SetEntityActive("stone_small01_brown_18", true);
	SetEntityActive("stone_small01_brown_15", true);
	SetEntityActive("stone_small01_brown_14", true);
	SetEntityActive("stone_small01_brown_16", true);
	SetEntityActive("stone_small01_brown_7", true);
	SetEntityActive("stone_med01_brown_9", true);
	SetEntityActive("stone_med01_brown_10", true);
	SetEntityActive("stone_med01_brown_11", true);
	PlaySoundAtEntity("","03_rock_move.snt","Player", 0, false);
}

void BarXD(string &in asEntity)
{
    SetMessage("ScreenText", "thefuckingbar", 5);
}

void BoardsXD(string &in asEntity)
{
    SetMessage("ScreenText", "thefuckingboards", 5);
}

void NoNeedBack(string &in asEntity)
{
    SetMessage("ScreenText", "noneedback", 5);
}

void NeedNoteFirst(string &in asItem, string &in asEntity)
{
    SetMessage("ScreenText", "notefirst", 5);
}

void OnEnter()
{
	AutoSave();
if(GetGlobalVarInt("Leaves")==1)
	{
        SetEntityActive("CisDoorOPEN2", true);
        SetEntityActive("CisDoorOPEN", false);
	}
}


////////////////////////////
// Run when leaving map
void OnLeave()
{

}