void OnStart()
{
AddUseItemCallback("", "keybasement", "castle_10", "UsedKeyOnDoor", true);
AddUseItemCallback("", "keyoffice", "mansion_1", "UsedKeyOnDoor3", true);
AddUseItemCallback("", "keylab", "level_hub_1", "UsedKeyOnDoor4", true);
AddUseItemCallback("", "knife", "slime", "RemoveSlime", true);
AddUseItemCallback("", "knife", "slime2", "RemoveSlime2", true);
AddUseItemCallback("", "knife", "slime3", "RemoveSlime3", true);
AddUseItemCallback("", "waxwaldon", "nowax", "UseWaxroll", true);
AddUseItemCallback("", "waxharry", "nowax", "UseWaxroll2", true);
AddUseItemCallback("", "waxmichael", "nowax", "UseWaxroll3", true);
AddUseItemCallback("CrowbarOnDoor", "Crowbar", "closet2", "CrowbarOnDoor", true);
AddEntityCollideCallback("Player", "AreaGround", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround2", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround3", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround4", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround5", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround6", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround7", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround8", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround9", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround10", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround11", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround12", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround13", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaTower", "AreaTower", false, 1);
AddEntityCollideCallback("Player", "AreaHidden", "AreaHidden", true, 1);
AddEntityCollideCallback("Player", "AreaBreakStairs", "BreakStairs", true, 1);
AddEntityCollideCallback("Player", "AreaDoor", "BreakDoor", true, 1);
AddEntityCollideCallback("brute", "Areacloset", "Closetscare", true, 1);
AddEntityCollideCallback("brute", "Weapon", "CollideWeapon", false, 1);
AddEntityCollideCallback("brute", "Weapon2", "CollideWeapon", false, 1);
AddEntityCollideCallback("brute", "Weapon3", "CollideWeapon", false, 1);
AddEntityCollideCallback("Player", "rat_1", "rat1", true, 1);
AddEntityCollideCallback("Player", "rat_2", "rat2", true, 1);
AddEntityCollideCallback("Player", "rat_3", "rat3", true, 1);
AddEntityCollideCallback("Player", "rat_4", "rat4", true, 1);
AddTimer("screams", 45, "screams");
AddTimer("ChapterStart", 3, "ChapterStart");
AddQuest("Ch3emma", "Ch3emma");
SetMapDisplayNameEntry("JeffersonMansion");
AutoSave();
}

void ChapterStart(string &in asTimer)
{
SetMessage("Messages", "jeffersonstart", 4);
AddTimer("chapterstart2", 5, "chapterstart2");
AddEffectVoice("ch3intro.ogg", "", "Voice", "00_Ch3intro", false, "", 0, 0 );
AddGlobalVarInt("Village", 1);
AddGlobalVarInt("Guard", 1);
}

void chapterstart2(string &in asTimer)
{
SetMessage("Messages", "chapter3", 4);
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
SetSwingDoorLocked("castle_10",false, true);
PlaySoundAtEntity("","unlock_door","castle_10", 0,false);
SetEntityPlayerInteractCallback("castle_10", "", false);
RemoveItem(asItem);
}

void UsedKeyOnDoor3(string &in asItem, string &in asEntity)
{
SetSwingDoorLocked("mansion_1",false, true);
PlaySoundAtEntity("","unlock_door","mansion_1", 0,false);
SetEntityPlayerInteractCallback("mansion_1", "", false);
RemoveItem(asItem);
}

void UsedKeyOnDoor4(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","unlock_door","level_hub_1", 0,false);
SetLevelDoorLocked("level_hub_1", false);
SetEntityPlayerInteractCallback("level_hub_1", "", false);
RemoveItem("keylab");
}

void flash(string &in asEntity)
{
SetEntityActive("flash", true);
}

void Func_shelf(string &in asEntity, int alState)
{
     if (alState == -1)
     {
	SetMoveObjectState("shelf_secret_door_1", 1);
        SetLeverStuckState("lever_nice01_1", -1, true);
        CompleteQuest("Ch3shelf", "Ch3shelf");
	GiveSanityBoostSmall();
          return;
     }
}

void keysounds(string &in asEntity)
{
AddTimer("sound", 2, "sound");
AddTimer("sound2", 5, "sound2");
AddTimer("sound2", 6, "sound3");
AddTimer("scared", 3, "scared");
SetSwingDoorLocked("castle_2",true, true);
}

void sound(string &in asTimer)
{
PlaySoundAtEntity("", "Hastobedone.snt", "SoundArea", 0.0f, false);
SetPlayerRunSpeedMul(0.1f);
SetPlayerMoveSpeedMul(0.2f);
}

void sound2(string &in asTimer)
{
PlaySoundAtEntity("", "door_mansion_close.snt", "SoundArea", 0.0f, false);
SetPlayerRunSpeedMul(1.0f);
SetPlayerMoveSpeedMul(1.0f);
SetMessage("Messages", "notalone", 9);
}

void sound3(string &in asTimer)
{
PlaySoundAtEntity("", "lock_door.snt", "SoundArea", 0.0f, false);
}

void scared(string &in asTimer)
{
PlaySoundAtEntity("", "react_breath.snt", "Player", 0.0f, false);
}

void Func_button(string &in asEntity)
{
AddQuest("Ch3find", "Ch3find");
SetEntityActive("picture2", true);
SetEntityActive("picture", false);
SetEntityActive("LadderArea_1", true);
PlaySoundAtEntity("","17_pipe_attach.snt","button", 0,false);
}

//---- Tower events ----//

void AreaHidden(string &in asParent, string &in asChild, int alState)
{
CompleteQuest("Ch3find", "Ch3find");
}

void AreaTower(string &in asParent, string &in asChild, int alState)
{
PlayMusic("Upthetower.ogg", true, 1.0, 3, 0, true);
CheckPoint ("Checkpoint", "PlayerStartArea_2", "DeathSettings", "DeathHints", "Fall");
}

void SpawnBrute(string &in asEntity)
{
SetEntityActive("brute", true);
AddEnemyPatrolNode("brute","node_1",0,"");
AddEnemyPatrolNode("brute","node_2",0,"");
AddEnemyPatrolNode("brute","node_3",3,"");
AddEnemyPatrolNode("brute","node_4",0,"");
CheckPoint ("Checkpoint2", "PlayerStartArea_3", "DeathSettings", "DeathHints", "Fall");
SetEntityActive("AreaBreakStairs", true);
}

void Closetscare(string &in asParent, string &in asChild, int alState)
{
AddPropImpulse("closet", 20, 5, 5, "world");
AddPropImpulse("closet", 20, 5, 5, "world");
PlaySoundAtEntity("Player", "24_iron_maiden.snt", "brute", 0, false);
ShowEnemyPlayerPosition("brute");
GiveSanityDamage(4.0f, true);
}

void BreakStairs(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","break_stairs.snt", "Player", 0, true);
PlaySoundAtEntity("","19_creak.snt", "Player", 0, false);
StartScreenShake(0.11f,0.35f, 0.05f,4.5f);
AddTimer("stairs2", 2, "stairs2");
SetPlayerActive(false);
}

void stairs2(string &in asTimer)
{
FadeOut(0);
FadeIn(3);
SetEntityActive("stairs2", true);
SetEntityActive("stairs", false);
CreateParticleSystemAtEntity("", "ps_dust_break_stairs", "stairs2", false);
FadePlayerRollTo(-60, 10, 25);
MovePlayerHeadPos(0.0f, -1.25f, 0.0f, 1.0f, 0.5f);
AddTimer("stairs3", 6, "stairs3");	
}

void stairs3(string &in asTimer)
{
SetPlayerActive(true);
FadePlayerRollTo(0.0f, 1.0f, 33.0f);
MovePlayerHeadPos(0.0, 0, 0, 1.0f, 0.5f);	
}

//---- Lab ----//

void Func_elevator(string &in asEntity, int alState)
{
     if (alState == -1)
     {
          SetPlayerActive(false);
          PlaySoundAtEntity("","14_elevator_activate.snt","Player", 0,false);
          FadeOut(2);
          AddTimer("elevatorend", 3, "elevatorend");
          CheckPoint("Checkpoint2", "PlayerStartArea_2", "DeathSettings", "DeathHints", "Fall");
          return;
     }
}

void elevatorend(string &in asTimer)
{
SetPlayerActive(true);
FadeIn(2);
TeleportPlayer("PlayerStartArea_5");
PlayMusic("02_amb_strange", true, 1.0f, 2.0f, 0, true);	
}

void RemoveSlime(string &in asItem, string &in asEntity)
{
SetEntityActive("slime", false);
PlaySoundAtEntity("","slime_create.snt","slime", 0,false);
CreateParticleSystemAtEntity("", "ps_slime_attack_normal", "slime", false);
}

void RemoveSlime2(string &in asItem, string &in asEntity)
{
SetEntityActive("slime2", false);
PlaySoundAtEntity("","slime_create.snt","slime2", 0,false);
CreateParticleSystemAtEntity("", "ps_slime_attack_normal", "slime2", false);
}

void RemoveSlime3(string &in asItem, string &in asEntity)
{
SetEntityActive("slime3", false);
PlaySoundAtEntity("","slime_create.snt","slime3", 0,false);
CreateParticleSystemAtEntity("", "ps_slime_attack_normal", "slime3", false);
}

void CrowbarOnDoor (string &in asItem, string &in asEntity) 
{
	RemoveItem(asItem);
	PlaySoundAtEntity("","puzzle_place_jar", "Player", 0, false);
	SetEntityActive("crowbar_joint_1", true);
	AddEntityCollideCallback("crowbar_joint_1", "AreaCrowbarCollide", "BreakCrowbarDoor", true, 1);
	SetPlayerActive(false);
	StartPlayerLookAt("crowbar_joint_1", 1.3f, 1.3f, "");
	AddTimer ("", 1, "EnablePlayer");
}

void EnablePlayer (string &in asTimer)
{
	SetPlayerActive(true);
	StopPlayerLookAt();
}

void BreakCrowbarDoor (string &in asParent, string &in asChild, int alState)
{
	GiveSanityBoostSmall();
	SetSwingDoorLocked("closet2", false, false);
	SetSwingDoorDisableAutoClose("closet2", true);
	SetSwingDoorClosed("closet2", false,false);
	PlaySoundAtEntity("break","break_wood_metal", "AreaCrowbar", 0, false);
	AddPropImpulse("closet2", 0, 0, -5, "world");
	SetEntityActive("crowbar_joint_1", false);
	SetEntityActive("crowbar_dyn_1", true);
	AddTimer("timerpushdoor", 0.1, "TimerPushDoor");	
	GiveSanityBoostSmall();
	SetEntityPlayerInteractCallback("closet2", "", false);
        CompleteQuest("Ch3closet", "Ch3closet");
        CompleteQuest("Ch3orb", "Ch3orb");
        CompleteQuest("Ch3emma", "Ch3emma");
        SetEntityActive("doll", true);
        StopMusic(1, 0);
}

void TimerPushDoor(string &in asTimer)
{
	AddPropImpulse("closet2", 2, 0, -2, "world");
	AddTimer("doorclose", 1.1, "TimerDoorClose");
        GiveSanityDamage(10, true);
        PlaySoundAtEntity("","enemy_hallucination_disappear.snt", "Player", 0, false);
        StartPlayerLookAt("LookDoll", 1.0f, 1.0f, "");
        SetPlayerActive(false);
}

void TimerDoorClose(string &in asTimer)
{
	SetSwingDoorDisableAutoClose("closet2", false);
        SetMessage("Messages", "trap", 4);
        AddTimer("injected", 3, "injected");
        AddTimer("heart", 5, "heart");
}

void injected(string &in asTimer)
{
PlaySoundAtEntity("","19_inject.snt", "Player", 0, false);
PlaySoundAtEntity("","react_scare.snt", "Player", 0, false);
FadeRadialBlurTo(0.10, 2);
FadeImageTrailTo(1, 2);
FadeSepiaColorTo(4, 4);
AddTimer("injected2", 3, "injected2");
}

void injected2(string &in asTimer)
{
PlaySoundAtEntity("","react_breath.snt", "Player", 0, false);
AddTimer("injected3", 2, "injected3");
SetEntityActive("syringe", true);
StartPlayerLookAt("LookSyringe", 1.0f, 1.0f, "");
}

void injected3(string &in asTimer)
{
AddTimer("injected4", 3, "injected4");
AddEffectVoice("ch3hastobedone.ogg", "", "Voice", "00_Ch3hastobedone", false, "", 0, 0 );
FadePlayerFOVMulTo(2, 2);
}

void injected4(string &in asTimer)
{
AddTimer("injected5", 4, "injected5");
StartPlayerLookAt("LookBrute", 1.0f, 1.0f, "");
SetEntityActive("brute3", true);
AddEnemyPatrolNode("brute3","node_5",0,"");
}

void injected5(string &in asTimer)
{
MovePlayerHeadPos(0.0f, -1.25f, 0.0f, 1.0f, 0.5f);
FadePlayerRollTo(-60, 10, 25);
SetLanternDisabled(true);
FadeOut(2.0f);
RemoveTimer("heart");
PlaySoundAtEntity("","react_sigh.snt", "Player", 0, false);
PlaySoundAtEntity("","player_bodyfall.snt", "Player", 0, false);
AddTimer("injected6", 2, "injected6");
}

void injected6(string &in asTimer)
{
ChangeMap("JeffersonOutside.map", "PlayerStartArea_1", "","");
}

void heart(string &in asTimer)
{
PlaySoundAtEntity("","L02_heartbeat.snt", "Player", 0, false);
AddTimer("heart", 5, "heart");
}

void BreakDoor(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("howl","12_warn.snt","Player", 0, false);
StartScreenShake(0.1, 2.0, 0.05, 0.5);
AddTimer("breakdoor2", 2, "breakdoor2");
}

void breakdoor2(string &in asTimer)
{
CreateParticleSystemAtEntity("breakps", "ps_break_wood", "AreaBreak", false);
PlaySoundAtEntity("","break_wood_metal","AreaBreak", 0,false);
SetEntityActive("castle_14", false);
}

void DoorBrute(string &in asEntity)
{
AddTimer("doorbrute2", 2, "doorbrute2");
SetEntityActive("brute4", true);
PlaySoundAtEntity("","Whispers.snt","Player", 0,false);
}

void doorbrute2(string &in asTimer)
{
FadeEnemyToSmoke("brute4", true);
}

//---- Orb piece ----//
//Events when picking up the orb

void corridor(string &in asEntity)
{
SetPlayerActive(false);
AddTimer("corridor2", 3, "corridor2");
PlaySoundAtEntity("","guardian_distant3.snt","Player", 0, false);
StartScreenShake(0.1, 4.7, 0.05, 0.5);
}

void corridor2(string &in asTimer)
{
TeleportPlayer("PlayerStartArea_6");
AddTimer("corridor3", 2, "corridor3");
SetEntityActive("brute2", true);
SetEntityActive("slime_pile_large_1", true);
SetEntityActive("slime_pile_large_2", true);
ShowEnemyPlayerPosition("brute2");
}

void corridor3(string &in asTimer)
{
TeleportPlayer("PlayerStartArea_7");
SetEntityActive("brute2", false);
SetEntityActive("AreaDoor", true);
StartPlayerLookAt("orb2", 5, 50, "");
AddTimer("corridor4", 3, "corridor4");
} 

void corridor4(string &in asTimer)
{
SetPlayerActive(true);
StopPlayerLookAt();
SetMessage("Messages", "orb", 7);
AddQuest("Ch3orb", "Ch3orb");
} 

//---- Etc ----//

void rat1(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_1", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_1", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_1", false);	
}

void rat2(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_2", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_2", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_2", false);	
}

void rat3(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_3", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_3", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_3", false);	
}

void rat4(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_4", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_4", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_4", false);	
}

void phono(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("elizabethphono.ogg", "", "Voice", "00_Elizabethphono", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("done2", 15, "done2");
          return;
     }
}

void done2(string &in asTimer)
{
StopPlayerLookAt();
SetPlayerActive(true);
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);	
} 

void notemusic(string &in asEntity)
{
AddTimer("notemusic2", 28, "notemusic2");
PlayMusic("23_paper_alexander", false, 1.0f, 2.0f, 0, true);
}

void notemusic2(string &in asTimer)
{
PlayMusic("02_amb_strange", true, 1.0f, 2.0f, 0, true);
}

void phonojefferson(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("jeffersonphono.ogg", "", "Voice", "00_Jeffersonphono", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("done", 20, "done");
          return;
     }
}

void phonoharry(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("harryphono.ogg", "", "Voice", "00_Harryphono", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("done", 20, "done");
AddTimer("phonoharry2", 20, "phonoharry2");
          return;
     }
}

void phonoharry2(string &in asTimer)
{
AddDiary("DiaryHarry", "");
SetMessage("Messages", "diaryharry", 8);
}

void phonomichael(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("michaelphono.ogg", "", "Voice", "00_Michaelphono", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("done", 22, "done");
          return;
     }
}

void UseWaxroll(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phonojefferson");
}

void UseWaxroll2(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phonoharry");
}

void UseWaxroll3(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phonomichael");
}

void done(string &in asTimer)
{
StopPlayerLookAt();
SetPlayerActive(true);
} 

//---- Weapons used on Brute ----//
//In case player tries to use weapons against the brute, a little metal sound and effect will play

void CollideWeapon(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","15_hammer.snt", "brute", 0, true);
CreateParticleSystemAtEntity("", "ps_hit_metal", "brute", false);
}

//---- Death by fall ----//
//If player falls down at the tower

void CollideAreaGround(string &in asParent, string &in asChild, int alState)
{
	AddDebugMessage("Speed is: "+GetPlayerYSpeed(), false);
	
	if(GetPlayerYSpeed() > -15) return; 
	
	GivePlayerDamage(200, "BloodSplat", true, true);
	PlayGuiSound("player_falldamage_max.snt", 1.0f);
        PlayGuiSound("L03_meat_snapsnt", 1.0f);
	StartScreenShake(0.3f, 0.5f, 0.1f, 0.4f);
}

//---- Quests ----//

void Quest(string &in asEntity)
{
AddQuest("Ch3shelf", "Ch3shelf");
}

//---- Death settings ----//
//Settings if player dies

void DeathSettings(string &in asName, int alCount)
{
PlayMusic("Upthetower.ogg", true, 1.0, 3, 0, true);
SetPlayerHealth(50);
SetPlayerSanity(50);
}

void DeathSettings2(string &in asName, int alCount)
{
PlayMusic("02_amb_strange", true, 1.0f, 2.0f, 0, true);
SetPlayerHealth(50);
SetPlayerSanity(50);
}

//---- Random sounds ----//
// Random sounds playing once in a while

void screams(string &in asTimer)
{
AddTimer("screams", 60, "screams");
AddTimer("screams2", 40, "screams2");
AddTimer("screams3", 55, "screams3");
AddTimer("screams4", 30, "screams4");
PlaySoundAtEntity("","general_wind_whirl.snt", "SoundArea5", 0, false);
}

void screams2(string &in asTimer)
{
PlaySoundAtEntity("","general_wind_whirl.snt", "SoundArea5", 0, false);
}

void screams3(string &in asTimer)
{
PlaySoundAtEntity("","general_wind_whirl.snt", "SoundArea5", 0, false);
}

void screams4(string &in asTimer)
{
PlaySoundAtEntity("","general_wind_whirl.snt", "SoundArea5", 0, false);
}

//----- Insight ----//

void Insight(string &in asEntity)
{
SetPlayerActive(false);
PlaySoundAtEntity("","Insight.snt", "Player", 0, true);
SetMessage("Messages", "insight", 5);
AddTimer("insight2", 5, "insight2");
}

void insight2(string &in asTimer)
{
StartEffectEmotionFlash("Flash", "InsightWaldon", "");
SetPropActiveAndFade("orb_6_of_7", false, 1);
DestroyParticleSystem("ParticleSystem_25");
SetPlayerActive(true);
AddGlobalVarInt("Insight", 1);
}

//---- Messages ----//

void locked(string &in asEntity)
{
SetMessage("Messages", "locked", 4);
}

void locked2(string &in asEntity)
{
SetMessage("Messages", "locked2", 4);
}

void lockedbroken(string &in asEntity)
{
SetMessage("Messages", "lockedbroken", 4);
AddQuest("Ch3closet", "Ch3closet");
}

void slime(string &in asEntity)
{
SetMessage("Messages", "slime", 6);
PlaySoundAtEntity("","impact_organic_low.snt", "Player", 0, true);
GivePlayerDamage(1, "BloodSplat", true, true);
}

void slime2(string &in asEntity)
{
GivePlayerDamage(1, "BloodSplat", true, true);
PlaySoundAtEntity("","impact_organic_low.snt", "Player", 0, true);
}

void explorefirst(string &in asEntity)
{
SetMessage("Messages", "explorefirst2", 4);
}

void nowax(string &in asEntity)
{
SetMessage("Messages", "nowax", 4);
}

void OnEnter()
{	
PlayMusic("Jefferson.ogg", true, 1.0, 0, 0, false);
SetPlayerJumpDisabled(false);
SetPlayerRunSpeedMul(1.0f);
SetPlayerActive(true);
}

void OnLeave()
{
StopMusic(10, 0);
SetupLoadScreen("loadscreentext", "...", 1, "load_ch3mansion.png");
}