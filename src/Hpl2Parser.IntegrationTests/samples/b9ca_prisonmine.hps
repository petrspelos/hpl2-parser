void OnStart()
{		
		CreateParticleSystemAtEntity("", "ps_dust_push_15.ps", "ParticleArea_10", false);
		
		AddEntityCollideCallback("Player", "AmbientArea_1", "amb01", false, 0);
		
		AddEntityCollideCallback("Player", "ScriptArea_multipleWind_1", "Air_1", false, 1);
		AddEntityCollideCallback("Player", "ScriptArea_multipleWind_2", "Air_2", false, 1);
		AddEntityCollideCallback("Player", "ScriptArea_multipleWind_3", "Air_3", false, 1);
		AddEntityCollideCallback("Player", "ScriptArea_multipleWind_4", "Air_4", false, 1);
		AddEntityCollideCallback("Player", "AmbienceArea_3", "prisonerAmbience", false, 0);
		AddEntityCollideCallback("Player", "ScriptArea_4", "hallLightEvent1", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_24", "hallLightEvent2", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_25", "messageDigging", true, 1);
		SetPlayerMoveSpeedMul(0.8f);
		AddEntityCollideCallback("Player", "ScriptArea_5", "entrancecave", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_1", "lighthouse_wind", false, 1);
		AddEntityCollideCallback("Player", "ScriptArea_2", "herbertmusic", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_6", "fallsand", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_8", "enterChoir", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_24", "enterChoir", true, 1);
		AddEntityCollideCallback("Player", "FogArea_1", "fog_1", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_9", "entranceblow", true, 1);
		AddEntityCollideCallback("Player", "Quest01_finish", "bridgebuild", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_16", "blowwind", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_17", "suitorbefore01", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_21", "prisonwind01", true, 1);
		//AddEntityCollideCallback("Player", "ScriptArea_23", "upperArchMusic", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_3", "enterCellarGround", false, 1);
		AddEntityCollideCallback("Player", "AmbienceArea04", "ambienceBay", false, 0);
	//	AddEntityCollideCallback("enemy_suitor_1", "ScriptArea_27", "enemyActivationDisable", true, 1);
		for(int i=0; i<=10; i++)	AddEntityCollideCallback("Player", "SoundArea03_"+i, "bushes", false, 0);
		SetEntityActive("dirt_stain_large_51", false);
		AddUseItemCallback("UseKeyOnDoor", "key_chamber", "sewer_arched_1", "UseKeyOnDoor", true);
		AddUseItemCallback("UseKeyOnRedDoor", "key_chamber", "level_wood_1", "UseKeyOnRedDoor", false);
		AddUseItemCallback("UseKeyOnPrisonGate", "key_chamber", "prison_section_3", "UseKeyOnPrisonGate", false);
		AddUseItemCallback("UseKeyOnDoor2", "key_chamber", "sewer_arched_2", "UseKeyOnDoor2", false);
		AddUseItemCallback("UseKeyOnPrison", "key_chamber", "prison_2", "UseKeyOnPrison", false);
		AddUseItemCallback("UseNeedleOnDoor2", "hollow_needle_2", "sewer_arched_*", "UseNeedleOnDoor2", false);
		AddUseItemCallback("UseNeedleOnPrison", "hollow_needle_2", "prison_1", "UseNeedleOnPrison", false);
		AddUseItemCallback("UseNeedleOnRedDoor", "hollow_needle_2", "level_wood_1", "UseNeedleOnRedDoor", false);
		AddUseItemCallback("UseLongNeedleOnDoor2", "copper_tube_and_needle", "sewer_arched_1", "UseLongNeedleOnDoor2", false);
		AddUseItemCallback("UseLongNeedleOnDoor2", "copper_tube_and_needle", "sewer_arched_2", "UseLongNeedleOnDoor2", false);
		AddUseItemCallback("UseLongNeedleOnRedDoor", "copper_tube_and_needle", "level_wood_1", "UseLongNeedleOnRedDoor", true);
		SetEntityPlayerInteractCallback("note_letter_2", "alexander", true);
		SetEntityPlayerInteractCallback("sewer_arched_1", "storagesound", true);
		SetEntityPlayerInteractCallback("bag01_1", "prisonwind03", true);
		SetEntityPlayerInteractCallback("key_chamber", "alternate_suitor", true);
		SetEntityPlayerInteractCallback("note_letter_1", "AddQuestKey", true);
		SetEntityPlayerInteractCallback("interactCandle_*", "flashbackRemover", true);
		PlaySoundAtEntity("help", "18_prisoner1", "ScriptArea_20", 0.0f, false);
		SetPlayerJumpDisabled(false);
		SetInDarknessEffectsActive(false);	
		//SetGlobalVarInt("introPrisonMine", 1);
		CheckPoint("checkpoint3","PlayerStartArea_2","doom", "Hints", "DeathDarkCave");
		PlaySoundAtEntity("", "15_acid", "acid_container_1", 0, true);
		
		for(int i=0; i<=14; i++)	PlaySoundAtEntity("flame", "29_fire.snt", "stairwelder_torch_"+i, 0, true);
}

void TimerList(string &in asTimer){
	if(asTimer == "slimeStructure"){
		for(int i=0; i<=90; i++) 	AddTimer("egg"+i, RandFloat(0, 3)+i*0.1f, "TimerList");
		for(int i=0; i<=27; i++)	AddTimer("slime"+i, RandFloat(5, 8)+i*0.15f, "TimerList");
		for(int i=0; i<=54; i++)	AddTimer("aniSlime"+i, RandFloat(8, 10), "TimerList");
		for(int i=0; i<=2; i++)		SetLampLit("torch_static01_"+i, false, true);
		
		FadeLightTo("PointLight_67", 1, 0.3f, 0.1f, 0, -1, 50);			//red 0.51f
		FadeLightTo("PointLight_68", 1, 0.3f, 0.1f, 0, -1, 50);			//red 0.51f
		FadeLightTo("PointLight_69", 1, 0.3f, 0.1f, 0, -1, 80);			//red 0.51f
		FadeLightTo("PointLight_70", 1, 0.3f, 0.1f, 0, -1, 80);			//red 0.51f
		FadeLightTo("PointLight_77", 1, 0.8f, 0.7f, 0, -1, 80);				//red 1
	}
	for(int i=0; i<=90; i++) {
		if(asTimer == "egg"+i){
			SetPropActiveAndFade("egg_"+i, true, 0.7f);
			PlaySoundAtEntity("", "hallslime_create", "egg_"+i, 0.5f, true);
			}
		}
	for(int i=0; i<=27; i++){
		if(asTimer == "slime"+i){
			SetPropActiveAndFade("slime_"+i, true, 0.9f);
			PlaySoundAtEntity("", "hallslime_create", "slime_"+i, 0.5f, true);
		}
		}
	for(int i=0; i<=54; i++){
		if(asTimer == "aniSlime"+i){
			SetPropActiveAndFade("slime_anim_wall_"+i, true, 0.4f);
			PlaySoundAtEntity("", "hallslime_create", "slime_anim_wall_"+i, 0.5f, true);
		}
	}
	if(asTimer == "GuardianEcho"){
		StartScreenShake(0.018f, RandFloat(0.5f, 1.5f), 1.8f, 4);
		FadeRadialBlurTo(0.008f, 0.01f);
		PlaySoundAtEntity("", "guardian_ontop", "Player", RandFloat(0, 3), true);
		
		AddTimer("BlurOff", 6, "TimerList");
		AddTimer("GuardianEcho", 12, "TimerList");
	}
	if(asTimer == "BlurOff"){
		FadeRadialBlurTo(0, 0.01f);
		PlaySoundAtEntity("", "29_amb_guard", "Player", RandFloat(0, 3), true);
	}
	if(asTimer == "ReactPant")		PlayGuiSound("react_pant", 1);
	if(asTimer == "ReactBreath")	PlayGuiSound("react_breath", 1);
	if(asTimer == "ReactCough")		PlayGuiSound("player_cough", 1);
	for(int i=0; i<=8; i++)	{	if(asTimer == "candleL"+i)	{	SetLampLit("feralcandle_"+i, false, true);	PlaySoundAtEntity("", "", "feralcandle_"+i, RandFloat(0, 0.4f), true);	}	
	}
	if(asTimer == "nextDis")	AddEntityCollideCallback("Player", "ScriptArea_23", "upperArchMusic", true, 1);
	if(asTimer == "fullGlobalSound")	FadeGlobalSoundVolume(1, 5);
}

void ambienceBay(string &in asParent, string &in asChild, int alState)
{	if(alState == 1){
		PlaySoundAtEntity("ambBay", "24_amb_out", "Player", 800, false);
		PlaySoundAtEntity("ambBay", "22_amb_thunder", "Player", 200, false);
		PlaySoundAtEntity("ambBay", "13_amb", "Player", 10, false);
	}
	else
	{
		StopSound("ambBay", 8);
	}
}

void prisonerAmbience(string &in asParent, string &in asChild, int alState)
{	if(alState == 1){
		AddTimer("Pamb1", 0, "prisonerAmbienceTimer");
	}
	else
	{
		RemoveTimer("Pamb1");
	}
}

void prisonerAmbienceTimer(string &in asTimer)
{	if(asTimer == "Pamb1"){
		float iRam = RandFloat(1, 4);
		float tRam = RandFloat(3, 8);
		
		PlaySoundAtEntity("", "15_man_whimp_loop.snt", "SoundArea02_"+iRam, 1.0f, true);
		AddTimer("Pamb1", tRam, "prisonerAmbienceTimer");
	}
}

void messageDigging(string &in asParent, string &in asChild, int alState)
{	AddTimer("Message", 4, "DiggingTimer");
	AddTimer("candleUnlit", 8, "DiggingTimer");
}
void DiggingTimer(string &in asTimer)
{	if(asTimer == "Message"){	SetMessage("Messager", "digging", 5.0f);	}
	if(asTimer == "candleUnlit")	{	SetLampLit("candle_floor_small_1", false, true);	}
}
void hallLightEvent1(string &in asParent, string &in asChild, int alState)
{	FadeLightTo("HallLight_3", 0.27f, 0.24f, 0.21f, 0, -1, 3);
}
void hallLightEvent2(string &in asParent, string &in asChild, int alState)
{	FadeLightTo("HallLight_4", 0.27f, 0.24f, 0.21f, 0, -1, 3);
}
void enterCellarGround(string &in asParent, string &in asChild, int alState)
{	AddTimer("scene1", 0, "EnterCellarSequence");
	AddTimer("scene2", 2, "EnterCellarSequence");
}

void EnterCellarSequence(string &in asTimer)
{	if(asTimer == "scene1"){
		FadeOut(2);
	}
	if(asTimer == "scene2"){
		ChangeMap("cellar.map", "PlayerStartArea_4", "", "");
		SetupLoadScreen("LoadingText", "none", 1, "game_loading_well.jpg");
	}
}

void upperArchMusic(string &in asParent, string &in asChild, int alState)
{	AddTimer("melodie1", 10, "melodieTimer");
	AddTimer("melodie2", 60, "melodieTimer");
}

void melodieTimer(string &in asTimer)
{	if(asTimer == "melodie1")
	{	PlayMusic("12_amb.ogg", false, 1.0f, 0, 1, true);
		StopMusic(2.0f, 0);
		AddTimer("melodie1end", 31, "melodieTimer");
	}
	if(asTimer == "melodie1end")
	{	StopMusic(2.0f, 1);
	}
	if(asTimer == "melodie2")
	{	PlayMusic("15_paper_daniel01.ogg", false, 1.0f, 0, 0, true);
	}
}

void interactingNote(string &in asEntity)
{	SetPropActiveAndFade("note_manual_1", true, 2.0f);
}

void pickChisel(string &in asItem){
	AddGlobalVarInt("GetChipper", 1);
	//SetMessage("Messager", "fine", 5);
}

void amb01(string &in asParent, string &in asChild, int alState)
{	if(alState == 1)
		{	PlaySoundAtEntity("AmbHaunting", "ambience_haunting", "Player", 10.0f, false);
		}
	else
		{	StopSound("AmbHaunting", 10.0f);
		}
}

void introAmb(string &in asParent, string &in asChild, int alState)
{	if(alState == 1)
		{	//PlaySoundAtEntity("ambBlackAir", "BlackAir.snt", "Player", 5.0f, true);
			PlayMusic("downinto.ogg", true, 1, 3, 2, true);
		}
	else
		{	//StopSound("ambBlackAir", 5.0f);
			StopMusic(5, 2);
		}
}

void entrancecave(string &in asParent, string &in asChild, int alState)
{		SetPlayerMoveSpeedMul(0.5f);
		AddTimer("", 25, "run90");
		PlayGuiSound("24_rock3.ogg", 20);
		SetRadialBlurStartDist(0.25f);	
		FadeRadialBlurTo(0.09, 0.15f);
		StartScreenShake(0.03, 1, 1.0f,4.0f);	
		
		SetSanityDrainDisabled(false);
		SetInDarknessEffectsActive(true);	
		
		StopMusic(5, 2);
		
		PlayMusic("waydown.ogg", false, 1.0f, 0, 0, true);
		AddEntityCollideCallback("AmbienceArea_2", "Player", "introAmb", false, 0);
}
void run90(string &in asTimer)
{		SetPlayerMoveSpeedMul(0.9f);
		FadeRadialBlurTo(0.0, 0.03f); 
}

void enterChoir(string &in asParent, string &in asChild, int alState)
{		PlaySoundAtEntity("AreaAmb", "24_amb2.snt", "AreaAmb", 4.0f, true);
		AddEntityCollideCallback("Player", "ScriptArea_9", "exitChoir", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_13", "exitChoir", true, 1);
}
void exitChoir(string &in asParent, string &in asChild, int alState)
{		StopSound("AreaAmb", 4.0f);
		AddEntityCollideCallback("Player", "ScriptArea_8", "enterChoir", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_15", "enterChoir", true, 1);
		//RemoveTimer("soundsystem");  Der Timer wird sich nicht erfolgreich entfernen
}
void fallsand(string &in asParent, string &in asChild, int alState)
{		CreateParticleSystemAtEntity("", "ps_debris_tunnel.ps", "ScriptArea_7", false);
		PlayGuiSound("15_sand_debris1.ogg", 5);
}
void fog_1(string &in asParent, string &in asChild, int alState)
{		CreateParticleSystemAtEntity("", "ps_dust_push.ps", "ParticleArea_3", false);
		AddTimer("", 15, "resetFogArea_1");
}
void resetFogArea_1(string &in asTimer)
{		AddEntityCollideCallback("Player", "FogArea_1", "fog_1", true, 1);
}

void bridgebuild(string &in asParent, string &in asChild, int alState)
{		CompleteQuest("bridge","bridge");
		//PlayMusic("penumbraBP1_extended.ogg", false, 20, 0, 0, true);
		PlayMusic("penumbraBP1_extended.ogg", false, 1.0f, 0, 0, true);
		AddTimer("nextDis", 120, "TimerList");
}
void alternate_suitor(string &in item)
{		SetSwingDoorClosed("prison_2", true, true);
		SetSwingDoorLocked("prison_2",true,false);
		SetEntityPlayerInteractCallback("prison_2", "alternate_suitor02", true);
		StopMusic(16, 1);
		CompleteQuest("StoreKey", "StoreKey");}
void alternate_suitor02(string &in asTimer)	
{		AddTimer("", 5, "suitor");}	
void suitor(string &in asTimer)		////Rechange "string &in asTimer" to use Alternate_Suitor
{		AddEntityCollideCallback("basement_monster", "disaberMonster", "safe", true, 1);
		AddEntityCollideCallback("basement_monster", "ScriptArea_14", "insanity", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_18", "badwind", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_16", "badwing", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_11", "badwing02", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_19", "badwing03", true, 1);
		AddEntityCollideCallback("Player", "ParticleArea_11", "nodoor", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_5", "nodoor", false, 1);
		SetSwingDoorClosed("prison_2", true, true);
		SetSwingDoorLocked("prison_2",true,false);
		SetEntityActive("basement_monster", true);
		CreateParticleSystemAtEntity("", "ps_dust_push.ps", "ScriptArea_14", false);
		CreateParticleSystemAtEntity("", "ps_dust_break_stair.ps", "ScriptArea_28", false);
		//SetLampLit("candlestick_wall_18", false, true);
		//SetLampLit("candlestick_wall_19", false, true);
		//SetLampLit("candlestick_wall_20", false, true);
		//SetLampLit("candlestick_wall_21", false, true);
		//SetLampLit("candlestick_wall_13", false, true);
		CheckPoint("check04","PlayerStartArea_3", "CheckPoint01", "Hints", "DeathGuardian_25_CellTunnels");
		SetPlayerLookSpeedMul(0.5f);
		GiveSanityDamage(35, true);
		
		AddTimer("evnt1", 0,"suitorEvent");
		AddTimer("evnt2", 5,"suitorEvent");
		AddTimer("evnt3", 12,"suitorEvent");
		AddTimer("evnt4", 14,"suitorEvent");
		
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_1", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_2", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_3", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_4", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_5", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_6", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_7", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_8", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_9", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_10", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_11", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_10", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_9", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_12", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_13", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_14", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_15", 0, "");
		AddEnemyPatrolNode("basement_monster", "PathNodeArea_16", 0, "");
}
void suitorEvent(string &in asTimer)
{
	if(asTimer == "evnt1")	{	
		StopMusic(1, 1);	
		PlaySoundAtEntity("", "break_stairs", "basement_monster", 4, true);	
		StartScreenShake(0.01, 0, 4, 3);	
		}
	if(asTimer == "evnt2"){
		PlaySoundAtEntity("", "suitor/enabled", "basement_monster", 4, true);	
		PlaySoundAtEntity("terror", "ui_terror_shadow", "Player", 30, true);
		}
	if(asTimer == "evnt3"){
		StopSound("terror", 10);
		}
	if(asTimer == "evnt4"){
		PlayMusic("shadowmaker.ogg", true, 0.8f, 10, 0, true);
		}
	if(asTimer == "evnt5"){
		PlayMusic("scareIntro.ogg", false, 2, 2, 0, false);
	}
}

void safe(string &in asParent, string &in asChild, int alState)
{		SetEntityActive("basement_monster", false);
		FadePlayerFOVMulTo(1.0, 1.0f/50.0f);
		FadePlayerAspectMulTo(1.0, 1.0f/16.0f);
		StopMusic(10, 0);
		AddTimer("evnt5", 15, "suitorEvent");
}
void insanity(string &in asParent, string &in asChild, int alState)
{		PlayGuiSound("scare_whine_loop1.ogg", 35);
		//PlaySoundAtEntity("ScareAmb", "scare_whine_loop3.ogg", "ScareAmb", 4.0f, true);
		AddTimer("", 140, "insanityclear");
		FadePlayerFOVMulTo(1.2, 1.0f/50.0f);
		FadePlayerAspectMulTo(1.25, 0.5f/20.0f);
}
void insanityclear(string &in asTimer)
{		//StopSound("ScareAmb", 4.0f);
		SetPlayerLookSpeedMul(1.0f);
}
void suitorbefore01(string &in asParent, string &in asChild, int alState)
{		AddTimer("", 2.5, "suitorbefore02");
		AddTimer("", 4.5, "suitorbefore021");
		SetEntityActive("trail_floor01_1", true);
		SetEntityActive("trail_floor02_1", true);
		for(int i=0; i<3; i++){		RemoveTimer("melodie"+i);	}
}
void suitorbefore02(string &in asTimer)
{		PlayGuiSound("holemonster_amb.ogg", 20);
		AddTimer("", 2, "suitorbefore03");
		StartScreenShake(0.1, 2, 0.98f,0.8f);	
		SetRadialBlurStartDist(0.25f);	
		FadeRadialBlurTo(0.09, 0.15f);
}
void suitorbefore021(string &in asTimer){
		FadeRadialBlurTo(0, 0.15f);
		}
void suitorbefore03(string &in asTimer)
{		//PlayGuiSound("sfx_metalldoor_scene.ogg", 20);
		AddTimer("", 10, "suitorbefore04");
		GiveSanityDamage(20, true);
}
void suitorbefore04(string &in asTimer)
{		AddEntityCollideCallback("Player", "ScriptArea_23", "suitorbefore05", true, 1);
		FadeRadialBlurTo(0.0, 0.03f); 	}
void suitorbefore05(string &in asParent, string &in asChild, int alState)
{		SetLampLit("hanging_lantern_wall_1", false, true);
		SetLampLit("hanging_lantern_wall_2", false, true);
		AddEntityCollideCallback("Player", "ScriptArea_12", "PrisonQuest", true, 1); 
		StopMusic(0, 0);
		PlayMusic("23_amb.ogg", true, 1.0f, 5, 1, true);
		PlaySoundAtEntity("help", "15_ripp_door", "ParticleArea_5", 0.0f, false);
		SetEntityActive("prison_1", false);
		GiveSanityDamage(10, true);
		AddEntityCollideCallback("Player", "ScriptArea_17", "windgate", false, 1);
		StartScreenShake(0.1, 0.8, 0.25f,0.8f);
		AddTimer("", 4, "suitorbefore06");
		SetEntityActive("rock_debris_brown01_*", true);
		SetEntityActive("rock_debris02_*", true);
		SetEntityActive("barrel01_broken_*", true);
		SetEntityActive("chair_wood02_broken_1", true);
		SetEntityActive("barrel02_1", false);
		SetEntityActive("barrel02_2", false);
		SetEntityActive("barrel02_3", false);
		SetEntityActive("barrel02_4", false);
		SetEntityActive("barrel02_5", false);
		SetEntityActive("barrel02_6", false);
		SetEntityActive("barrel02_7", false);
		SetEntityActive("barrel02_8", false);
		SetEntityActive("barrel02_9", false);
		SetEntityActive("barrel02_10", false);
		SetEntityActive("barrel02_11", false);
		SetEntityActive("chair_wood02_2", false);
		SetEntityActive("chain_pipe0*", true);
		SetEntityActive("chain_beam_1", true);
}
void suitorbefore06(string &in asTimer)
{		PlaySoundAtEntity("help", "break_wood2.ogg", "ParticleArea_5", 0.0f, false);
		AddQuest("PrisonQuest", "PrisonQuest");
		AddTimer("", 3, "suitorbefore07");}
void suitorbefore07(string &in asTimer)
{		PlaySoundAtEntity("help", "break_wood_metal3.ogg", "ParticleArea_5", 0.0f, false);}
void alexander(string &in item)
{		AddTimer("", 30, "playMusicAlexander");}
void playMusicAlexander(string &in asTimer)
{		//PlayMusic("alexander_ending.ogg", false, 20, 0, 0, true);
		PlayMusic("alexander_ending.ogg", false, 1.0f, 0, 0, true);
}
void storagesound(string &in entity)
{		PlaySoundAtEntity("help", "05_event_bottles.ogg", "ScriptArea_2", 0.0f, false); 	}
void AddQuestKey(string &in item)
{		AddQuest("StoreKey", "StoreKey");	
		//AddQuest("fillingSource", "fillingSource");
}
void PrisonQuest(string &in asParent, string &in asChild, int alState)
{		CompleteQuest("PrisonQuest", "PrisonQuest");
		AddTimer("", 20, "ChaosPrisonerSequence");
}
void ChaosPrisonerSequence(string &in asTimer)
{
	if(asTimer == "list")
		{	AddTimer("scene1", 18, "ChaosPrisonerSequence");
			AddTimer("scene1", 23, "ChaosPrisonerSequence");
			AddTimer("scene2", 27, "ChaosPrisonerSequence");
			AddTimer("scene2", 31, "ChaosPrisonerSequence");
			AddTimer("scene3", 38, "ChaosPrisonerSequence");
			AddTimer("scene4", 42, "ChaosPrisonerSequence");
			AddTimer("scene4", 48, "ChaosPrisonerSequence");
			AddTimer("scene5", 53, "ChaosPrisonerSequence");
			AddTimer("scene5", 59, "ChaosPrisonerSequence");
			AddTimer("scene6", 64, "ChaosPrisonerSequence");
			AddTimer("scene6", 71, "ChaosPrisonerSequence");
			AddTimer("bang", 20, "ChaosPrisonerSequence");
			AddTimer("bang2", 50, "ChaosPrisonerSequence");
		}
	if(asTimer == "bang")
		{	PlaySoundAtEntity("scareBang", "fb_sfx_21_prisoner_wait_room.snt", "Player", 0, false);			}
	if(asTimer == "bang2")
		{	PlaySoundAtEntity("scareBang", "fb_sfx_15_journey.snt", "Player", 0, false);		}
	if(asTimer == "scene1")
		{	PlaySoundAtEntity("", "suitor/amb_idle.snt", "SoundArea1_1", 0, false);		}
	if(asTimer == "scene2")
		{	PlaySoundAtEntity("", "suitor/amb_idle.snt", "SoundArea1_2", 0, false);		}
	if(asTimer == "scene3")
		{	PlaySoundAtEntity("", "suitor/amb_idle_whimp.snt", "SoundArea1_1", 0, false);		}
	if(asTimer == "scene4")
		{	PlaySoundAtEntity("", "suitor/amb_hunt.snt", "SoundArea1_1", 0, false);		}
	if(asTimer == "scene5")
		{	PlaySoundAtEntity("", "suitor/amb_hunt.snt", "SoundArea1_2", 0, false);		}
	if(asTimer == "scene6")
		{	PlaySoundAtEntity("", "suitor/amb_idle_scratch.snt", "SoundArea1_2", 0, false);		}
}

void flashbackRemover(string &in asEntity)
{
	for(int i=0; i<7; i++)	{	RemoveTimer("scene"+i);	}
	StopSound("scareBang", 1.0f);
}

////////EFFECTING WIND/////////
void Air_1(string &in asParent, string &in asChild, int alState)
{		AddTimer("", 10, "sWindArea_9");
		AddTimer("", 5, "sWindArea_3");
		AddTimer("", 2, "sWindArea_6");
		AddTimer("", 10, "sWindArea_7");
		AddTimer("", 7, "sWindArea_5");
		AddTimer("", 12, "sWindArea_1");
		AddTimer("", 30, "sWindArea_4");
}
void Air_2(string &in asParent, string &in asChild, int alState)
{		AddTimer("", 45, "sWindArea_1");
		AddTimer("", 16, "sWindArea_4");
		AddTimer("", 5, "sWindArea_5");
		AddTimer("", 2, "sWindArea_6");//ps_dust_whirl.ps
		AddTimer("", 30, "sWindArea_7"); //ps_green_wind_breeze.ps
}
void Air_3(string &in asParent, string &in asChild, int alState)
{		AddTimer("", 13, "sWindArea_8");
		AddTimer("", 10, "sParticleArea_3");
}
void Air_4(string &in asParent, string &in asChild, int alState)
{		AddTimer("", 3, "sWindArea_9");
		AddTimer("", 8, "sWindArea_3");
}
void sWindArea_1(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_1", false);
PlaySoundAtEntity("help", "general_wind_whirl", "WindArea_1", 0.0f, false);}
void sWindArea_2(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_push_09.ps", "WindArea_2", false);}
void sWindArea_3(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_push_09.ps", "WindArea_3", false);}
void sWindArea_4(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_4", false);
PlaySoundAtEntity("help", "general_wind_whirl", "WindArea_4", 0.0f, false);}
void sWindArea_5(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_push_09.ps", "WindArea_5", false);}
void sWindArea_6(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_push_09.ps", "WindArea_6", false);}
void sWindArea_7(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_7", false);
PlaySoundAtEntity("help", "general_wind_whirl", "WindArea_7", 0.0f, false);}
void sWindArea_8(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_8", false);
PlaySoundAtEntity("help", "general_wind_whirl", "WindArea_8", 0.0f, false);}
void sWindArea_9(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_push_09.ps", "WindArea_9", false);}
void sParticleArea_3(string &in asTimer)
{CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "ParticleArea_3", false);
PlaySoundAtEntity("help", "general_wind_whirl", "WindArea_3", 0.0f, false);}

void blowwind(string &in asParent, string &in asChild, int alState)
{		CreateParticleSystemAtEntity("", "ps_dust_push_15.ps", "ParticleArea_5", false);
		AddTimer("", 1, "GeneralWind");
}
void GeneralWind(string &in asTimer)
{		PlayGuiSound("general_wind_whirl1.ogg", 15);}
void windgate(string &in asParent, string &in asChild, int alState)
{		CreateParticleSystemAtEntity("", "ps_dust_push_09.ps", "ParticleArea_6", false);
		AddTimer("", 1, "GeneralWind");}
void entranceblow(string &in asParent, string &in asChild, int alState)
{		CreateParticleSystemAtEntity("", "ps_dust_push_15.ps", "ScriptArea_10", false);
		//PlayGuiSound("general_wind_whirl2.ogg", 5);
		AddTimer("", 1, "GeneralWind");}
void badwind(string &in asParent, string &in asChild, int alState)
{		PlayGuiSound("24_pipe2.ogg", 5);
		SetEntityActive("enemy_suitor_1", true);
		SetEnemySanityDecreaseActive("enemy_suitor_1", false);
		AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_293", 8, "");
		AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_206", 0, "");
		AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_244", 0, "");
		AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_338", 0, "");
		AddEntityCollideCallback("enemy_suitor_1", "SoundArea03_9", "suitorEnter", true, 1);
}
void suitorEnter(string &in asParent, string &in asChild, int alState)
{	FadeEnemyToSmoke("enemy_suitor_1", false);
}
void badwing(string &in asParent, string &in asChild, int alState)
{		PlayGuiSound("24_wing6.ogg", 10);}
void badwing02(string &in asParent, string &in asChild, int alState)
{		PlayGuiSound("24_wing1.ogg", 10);}
void badwing03(string &in asParent, string &in asChild, int alState)
{		PlayGuiSound("24_wing4.ogg", 10);}
void prisonwind01(string &in asParent, string &in asChild, int alState)
{		SetLampLit("hanging_lantern_ceiling_chain_2", true, true);}
void prisonwind03(string &in entity)
{		AddTimer("", 4, "prisonwind04");
		AddTimer("", 5.5, "prisonwind05");}
void prisonwind04(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_push_15.ps", "ScriptArea_20", false);
		StartScreenShake(0.03, 0.3, 0.99f,0.99f);
		PlayGuiSound("general_wind_whirl4.ogg", 5);
		PlaySoundAtEntity("help", "18_prisoner3", "ScriptArea_20", 0.0f, true);}
void prisonwind05(string &in asTimer){
	SetLampLit("interactCandle_2", false, true);
}
void nodoor(string &in asParent, string &in asChild, int alState)
{		SetEntityActive("prison_2", false);
		FadePlayerFOVMulTo(1.0, 1.0f/1.0f);
		FadePlayerAspectMulTo(1.0, 1.0f/1.0f);	}
void batfly(string &in asParent, string &in asChild, int alState)
{		PlayGuiSound("general_bat1.ogg", 5);	}
void lighthouse_wind(string &in asParent, string &in asChild, int alState)
{		PlayGuiSound("27_wind4.ogg", 5);
		CreateParticleSystemAtEntity("", "ps_dust_push_09.ps", "ParticleArea_7", false);
		CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "ParticleArea_8", false);
		CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "ParticleArea_9", false);}
///////////USING ITEMS///////////
void UseKeyOnDoor(string &in asItem, string &in asEntity)
{	PlaySoundAtEntity("unlocked", "door_sewer_unlock", asEntity, 0.0f, false);
	RemoveItem(asItem);
	StopMusic(5, 1);
	PlayMusic("12_puzzle_epoxy.ogg", false, 20, 0, 2, true); //17_paper_herbert02.ogg, 15_puzzle_hole, 12_puzzle_epoxy, 17_puzzle.ogg, 11_paper_howl
	SetSwingDoorLocked("sewer_arched_1", false, true);		}
void UseKeyOnRedDoor(string &in asItem, string &in asEntity)		//Key+RedDoor
{		SetMessage("Level04", "UseKeyOnRedDoor", 0);	
		PlayGuiSound("joint_wood_move.ogg", 0.7f);		}
void UseNeedleOnRedDoor(string &in asItem, string &in asEntity)		//Needle+RedDoor
{		SetMessage("Level04", "UseNeedleOnRedDoor", 0);	
		PlayGuiSound("step_sneak_female_wood1.ogg", 0.7f);	}
void UseLongNeedleOnRedDoor(string &in asItem, string &in asEntity)		//Syringe+RedDoor
{		SetMessage("Level04", "UnlockedRedDoor", 0);	
		PlayGuiSound("07_pick_lock.ogg", 0.7f);
		SetLevelDoorLocked(asEntity, false);			}
void UseKeyOnDoor2(string &in asItem, string &in asEntity)			//Key+UselessDoor
{		SetMessage("Level04", "UseKeyOnDoor2", 0);	
		PlayGuiSound("crank_old_stuck.ogg", 0.7f);		}
void UseNeedleOnDoor2(string &in asItem, string &in asEntity)		//Needle+UselessDoor
{		SetMessage("Level04", "UseNeedleOnDoor2", 0);	
		PlayGuiSound("19_attach_needle.ogg", 0.7f);	}
void UseLongNeedleOnDoor2(string &in asItem, string &in asEntity)
{		SetMessage("Level04", "UseLongNeedleOnDoor2", 0);	
		PlayGuiSound("step_sneak_female_wood1.ogg", 0.7f);	}
void UseNeedleOnPrison(string &in asItem, string &in asEntity)
{		SetMessage("Level04", "UseNeedleOnPrison", 0);	
		PlayGuiSound("19_attach_needle.ogg", 0.7f);	}
void UseKeyOnPrison(string &in asItem, string &in asEntity)
{		SetMessage("Level04", "UseKeyOnPrison", 0);	
		PlayGuiSound("crank_old_stuck.ogg", 0.7f);	}
void loadingBuffer(string &in asEntity)
	{	SetupLoadScreen("LoadingText", "EnterMausoleum", 1, "08_loadingScreen.jpg");
		CompleteQuest("StoreKey", "StoreKey");
		CompleteQuest("fillingSource", "fillingSource");
	}
void introTimer(string &in asTimer)
{
	if(asTimer == "scene1")
	{	
		for(int i=0; i<3; i++)	{FadeLightTo("HallLight_"+i, 0.27f, 0.24f, 0.21f, 0, -1, 3);	}
		FadeIn(5);
		StopSound("intro", 2.5f);
		
		PlayMusic("downinto.ogg", true, 1, 3, 2, true);
	}
	for(int i=0; i<=263; i++){
		if(asTimer == "guardianEvent"+i){
			SetPropActiveAndFade("slime_pile_large_"+i, true, 3);
			PlaySoundAtEntity("", "hallslime_create", "slime_pile_large_"+i, 0.5f, true);
			SetLocalVarInt("lightDisgree", i);
			LightDistore();
		}
	}
	if(asTimer == "backgShadow"){
		PlaySoundAtEntity("", "29_amb_guard", "Player", 4, true);
		StartScreenShake(0.003f, 4, 4, 7);
		FadePlayerRollTo(RandFloat(-12, 12), 0.3f, 0.3f);
		AddTimer("backgShadow", 14, "introTimer");
	}
	if(asTimer == "guardianAmbition")	PlayMusic("att_guardian.ogg", true, 0.5f, 8, 5, false);
	if(asTimer == "guardianCall"){
		PlaySoundAtEntity("", "guardian_activated", "Player", 4, true);
		StartScreenShake(RandFloat(0.03f, 0.06f), 0.4f, 3, 8);
		FadeRadialBlurTo(0.07f, 0.01f);
		AddTimer("guardianCall2", 9, "introTimer");
		FadePlayerAspectMulTo(1.3f, 0.08f);
		FadePlayerFOVMulTo(1.3f, 0.08f);
			AddTimer("guardianCall", 23, "introTimer");
	}
	if(asTimer == "guardianCall2"){
		FadeRadialBlurTo(0, 0.007f);
		PlaySoundAtEntity("", "guardian_distant", "Player", 4, true);
		StartScreenShake(0.02f, 1, 3, 3);
		FadePlayerAspectMulTo(1, 0.08f);
		FadePlayerFOVMulTo(1, 0.08f);
	}
	if(asTimer == "guardianIdle"){
		int i = RandInt(1, 90);
		PlaySoundAtEntity("", "guardian_idle", "slime_egg_"+i, RandFloat(1, 6), true);
		PlaySoundAtEntity("", "guardian_idle", "slime_anim_wall_"+i, RandFloat(1, 6), true);
		PlaySoundAtEntity("", "guardian_idle", "slime_"+i, RandFloat(1, 6), true);
		AddTimer("guardianIdle", 5, "introTimer");
	}
	if(asTimer == "ShadowBreak")	{	GiveSanityDamage(100, true);		}
	if(asTimer == "ShadowBreak2")	GiveSanityDamage(10, true);
	if(asTimer == "slowness1")	{	SetPlayerMoveSpeedMul(0.45f);	SetPlayerRunSpeedMul(0.8f);	}
	if(asTimer == "slowness2")	{	SetPlayerMoveSpeedMul(0.4f);	SetPlayerRunSpeedMul(0.65f);	}
	if(asTimer == "slowness3")	{	SetPlayerMoveSpeedMul(0.35f);	SetPlayerRunSpeedMul(0.5f);	}
}

void LightDistore(){
	if(GetLocalVarInt("lightDisgree") == 107){
		SetLampLit("bonfire_2", false, true);
	}
	if(GetLocalVarInt("lightDisgree") == 259){
		SetEntityActive("block_box_nonchar_1", true);
		SetLampLit("torch_static01_8", false, true);
	}
	if(GetLocalVarInt("lightDisgree") == 260){
		SetEntityActive("block_box_nonchar_2", true);
		SetLampLit("torch_static01_3", false, true);
	}
}

void darktestment(string &in asParent, string &in asChild, int alState){
	//SetEntityActive("servant_grunt_1", true);
	//AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_207", 0, "");
	for(int i=0; i<=263; i++)	AddTimer("guardianEvent"+i, RandFloat(20, 22)+i*0.25f, "introTimer");
	AddTimer("slimeStructure", 45, "TimerList");
	AddTimer("guardianCall", 8, "introTimer");
	AddTimer("guardianAmbition", 13, "introTimer");
	AddTimer("ShadowBreak", 10, "introTimer");
	AddTimer("ShadowBreak2", 24, "introTimer");
	AddTimer("guardianIdle", 50, "introTimer");
	
	AddTimer("ReactBreath", 9, "TimerList");
	AddTimer("ReactCough", 13, "TimerList");
	AddTimer("ReactPant", 24+RandFloat(0.5f, 1.5f), "TimerList");
	AddTimer("ReactBreath", 30, "TimerList");
	AddTimer("ReactBreath", 37, "TimerList");
	
	AddTimer("slowness1", 15, "introTimer");
	AddTimer("slowness2", 25, "introTimer");
	AddTimer("slowness3", 35, "introTimer");
}

void CuttingEndLock(string &in asItem, string &in asEntity){
	//SetEntityActive("padlock_1", false);
	SetSwingDoorLocked("prison_section_3", false, false);
	SetEntityActive("stone_hammer_1", true);
	PlayGuiSound("player_crouch", 1);
	AddTimer("c1", 0.7f, "HammerGateEvent");
	AddTimer("c2", 1, "HammerGateEvent");
	
	AddTimer("c3", 0.4f, "HammerGateEvent");
	AddTimer("c4", 0.7f, "HammerGateEvent");
	AddTimer("c5d", 2.8f, "HammerGateEvent");
	AddTimer("c5", 3, "HammerGateEvent");
	AddTimer("c6", 4, "HammerGateEvent");
	AddTimer("ReactCough", 4.3f, "TimerList");
}

void HammerGateEvent(string &in asTimer){
	if(asTimer == "c1")	{	SetEntityActive("stone_hammer_1", false);	
							SetEntityActive("stone_hammer_2", true);	
							SetEntityActive("padlock_1", false);
							SetEntityActive("padlock_2", true);
							PlaySoundAtEntity("break", "impact_metal_high", "stone_hammer_move_1", 0.0f, false);
							CreateParticleSystemAtEntity("", "ps_hit_metal.ps", "padlock_2", true);
							}
	if(asTimer == "c2")	{	SetEntityActive("stone_hammer_2", false);	}
	if(asTimer == "c3")	{	StartScreenShake(0.01, 0, 2.6f, 0);
							PlaySoundAtEntity("ru", "21_alex_low_freq_rumble", "Player", 0,  true);		}
	if(asTimer == "c4")	{	StartPlayerLookAt("ScriptArea_30", 2.7f, 0.7f, "");	}
	if(asTimer == "c5d"){	PlaySoundAtEntity("", "explosion_rock_large", "Player", 0.7f, true);	StopSound("ru", 4);		CreateParticleSystemAtEntity("", "ps_dust_break_stair.ps", "prison_section_3", true);
							for(int i=0; i<=11; i++)	SetEntityActive("mrock_"+i, true);	AddPlayerBodyForce(-1500, 0, 0, true);	StartPlayerLookAt("bonfire_2", 2.7f, 2.7f, "");	}
	if(asTimer == "c5")	{	SetPlayerActive(false);		FadeOut(0.5f);	StopPlayerLookAt();	}
	if(asTimer == "c6")	{	SetPlayerActive(true);		FadeIn(2.5f);	PlaySoundAtEntity("", "25_break_rock", "Player", 0.7f, true);	
							SetEntityActive("guardian_1", true);	SetEnemySanityDecreaseActive("guardian_1", false);	AddEnemyPatrolNode("guardian_1", "PathNodeArea_298", 0, "");	
							StopMusic(3, 5);	PlayMusic("guardianHunt01.ogg", true, 1, 8, 5, true);
							}
	
}


void enterDownRest(string &in asParent, string &in asChild, int alState){
	ChangeMap("laststand.map", "PlayerStartArea_1", "", "");
}

void bushes(string &in asParent, string &in asChild, int alState){
	PlaySoundAtEntity("", "24_bush", "Player", RandFloat(0, 1.5f), true);
}

void EnemyDisabled(string &in asEnemy, string &in asType){
	if(GetEntitiesCollide(asEnemy, "ScriptArea_27")){
	SetEntityActive("enemy_suitor_1", false);}
}

void feral(string &in asEntity, string &in asType){
	AddLocalVarInt("candle", 1);
	if(GetLocalVarInt("candle") == 8){
	
		SetGlobalVarInt("FeralMode", 1);
	
		StartScreenShake(0.03, 4, 8, 4);
		for(int i=0; i<=8; i++)	AddTimer("candleL"+i, 8 + RandFloat(0, 7), "TimerList");
		PlayGuiSound("eerieWell.ogg", 1);
		FadeGlobalSoundVolume(0.5, 5);	AddTimer("fullGlobalSound", 8, "TimerList");
	}
}

void doom(string &in asName, int alCount)
{	AddGlobalVarInt("LimitedLife", 1);
	ChangeMap("cranny.map", "PlayerStartArea_2", "", "");
}

	
void OnEnter()
{		SetMapDisplayNameEntry("mine");
	if(GetGlobalVarInt("introPrisonMine")==0)
	{	PlaySoundAtEntity("intro", "insanityArea02.snt", "Player", 3.0f, false);
		AddGlobalVarInt("introPrisonMine", 1);
		FadeOut(0);
		AddTimer("scene1", 6, "introTimer");
		//AddTimer("scene2", 15, "introTimer");
	}
	
		if(GetGlobalVarInt ("GlobalTemple") == 3){	AddEntityCollideCallback("Player", "ScriptArea_27", "darktestment", true, 1);	
													//SetSwingDoorClosed("prison_section_3", false, false, 1);		
													AddUseItemCallback("CuttingEndLock", "stone_hammer_chipper", "padlock_1", "CuttingEndLock", false);
													AddEntityCollideCallback("Player", "ParticleArea_6", "enterDownRest", false, 1);
													AddTimer("backgShadow", 1, "introTimer");
													
													SetFogActive(true);
													SetFogColor(0, 0, 0, 1);	
													SetFogProperties(0, 150, 0.45f, true);
													
													SetPlayerMoveSpeedMul(0.4f);
													}
		AutoSave();	
}

void OnLeave()
{	
		for(int i=0; i<3; i++)	{	StopMusic(5, i);	}
		SetInDarknessEffectsActive(true);	
}