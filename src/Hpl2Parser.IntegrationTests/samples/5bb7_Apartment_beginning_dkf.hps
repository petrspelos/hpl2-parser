void OnStart()
{
	SetLocalVarInt("NewsCount", 0);
	AddUseItemCallback("", "Key", "BedroomDoor", "OpenDoor", true);
	SetPlayerLampOil(0.0f);
	
	if(!ScriptDebugOn()) Intro();
}

void OnEnter()
{
	SetMapDisplayNameEntry("Home");
	SetInDarknessEffectsActive(false);
	//SetPlayerSanity(60.0f);

	SetUpInsanity();
	
	//SetLightVisible("Light", false); //idk why this was here, leaving as a comment just in case
	//StartInsanityEvent("Error");

}

void OnLeave()
{
	CompleteQuest("LeaveHint", "LeaveHint");
}

void OpenDoor(string &in asItem, string &in asEntity)
{
	SetSwingDoorLocked(asEntity, false, true);
	RemoveItem(asItem);
	PlaySoundAtEntity("", "unlock_modern.snt", asEntity, 0.0f, false);
}

//--------------------------------------------------------------------------------//

void Intro()
{
	ToggleCutscene(true);
	//player starts at a black plane
	FadeGlobalSoundVolume(0.0, 0.0);
	AddTimer("", 1.0, "StartMonologue");
}

void ToggleCutscene(bool abX)
{
	if(!abX) 
	{
		FadeOut(0.0);
		TeleportPlayer("Begin");
		FadeIn(2.0);
		FadeGlobalSoundVolume(1.0, 2.0);
	}
	
	//negated
	SetPlayerActive(!abX);
	ShowPlayerCrossHairIcons(!abX);
	SetInsanitySetEnabled("Ch03", !abX);
	
	//non-negated
	SetInventoryDisabled(abX);
}

void StartMonologue(string &in asTimer)
{
	PlayMusic("MOURNFUL_SKANK_Deeper", false, 0.4, 3.0, 1, true);
	
	AddEffectVoice("EC_Intro_1", "", "Dialogues", "EC_Intro_1", false, "", 0.0f, 15.0f);
	SetEffectVoiceOverCallback("Stage2");
}

void Stage2()
{
	StartInsanityEvent("Intro_1");
	for(int i = 2; i<=4 ; i++) AddEffectVoice("EC_Intro_"+i, "", "Dialogues", "EC_Intro_"+i, false, "", 0.0f, 15.0f);
	SetEffectVoiceOverCallback("Stage3");
}

void Stage3()
{
	StartInsanityEvent("Intro_2");
	for(int i = 5; i<=7 ; i++) AddEffectVoice("EC_Intro_"+i, "", "Dialogues", "EC_Intro_"+i, false, "", 0.0f, 15.0f);
	SetEffectVoiceOverCallback("FinishIntro");
}

void FinishIntro()
{
	ToggleCutscene(false);
	
	SetMapDisplayNameEntry("Home");
	AutoSave();
}

void SecondMonologue()
{
	for(int i = 1; i<=9 ; i++) AddEffectVoice("EC_Cont_"+i, "", "Dialogues", "EC_Cont_"+i, false, "", 0.0f, 15.0f);
}

//--------------------------------------------------------------------------------//


void CountClippings(string &in asEntity)
{
	if(asEntity == "paper02_4") SecondMonologue();
	
	AddLocalVarInt("NewsCount", 1);
	if (GetLocalVarInt("NewsCount") == 5)
	{
		AddTimer("", 4.0f, "StartRinging");
	}
}

void StartRinging(string &in asTimer)
{
	StartPhoneRing("Phone", "Dkf_Home", 3);
}

void PhoneCallOverCallback(string &in asTimer)
{
	AddTimer("", 3.0f, "Tix");
	PlaySoundAtEntity("", "door_knock_dkf.snt", "FrontDoor", 0.0f, false);
}

void Tix(string &in asTimer)
{
	AddPropImpulse("Tix", -3.0f, 0, 0, "world");
	SetSwingDoorLocked("FrontDoor", false, false);
	AddTimer("hint", 10.0f, "Hint");
}
void Hint(string &in asTimer)
{
	AddQuest("TixHint", "TixHint");
}
void PickUpTix(string &in asEntity)
{
	RemoveTimer("hint");
	CompleteQuest("TixHint", "TixHint");
	AddQuest("LeaveHint", "LeaveHint");
}

/*void TurnOnTV(string &in asEntity)
{
	PlaySoundAtEntity("", "button_dkf.snt", asEntity, 0.7 , false);
	SetEntityActive("TV_on", true);
	SetEntityActive("TV_off", false);  
}
*/
///////////////////////PHONE///////////////////////////////////////
///////////////////////////////////////////////////////////////////


/* Entity = the phone to be played at, if files are "File_01.ogg" and "File_02.ogg", then asFileName = File and asFileCount = 2.
 All sound files from 1 through the given number are be played.
 If count = 0, "File" (without the underscore and numbers) is assumed.
 For best effect use mono sound files.
 Lang subtitle entries should be titled same as the file and placed in "Dialogues" category. */

void StartPhoneRing(string &in asEntity, string asFileName, int asFileCount)
{
	SetLocalVarString("FileName", asFileName); // GetLocalVarString("FileName");
	SetLocalVarInt("FileCount", asFileCount); // GetLocalVarInt("FileCount");
	SetLocalVarString("Phone", asEntity);  // GetLocalVarString("Phone");
	
	PlaySoundAtEntity("phonering", "phone_ring_loop.snt", asEntity, 0.0f, false);
	SetEntityPlayerInteractCallback(asEntity, "PickUpPhone", true);
}
void PickUpPhone(string &in asEntity)
{
	StopSound("phonering", 0.5f);
	PlaySoundAtEntity("", "phone_up.snt", asEntity, 0.0f, false);
	AddTimer("", 0.5f, "StartTalking");

	SetPlayerMoveSpeedMul(0.3f);
	SetPlayerJumpDisabled(true);
	SetPlayerRunSpeedMul(0.0f);
}
void StartTalking(string &in asTimer)
{
	PlaySoundAtEntity("phonestatic", "phone_static_loop.snt", GetLocalVarString("Phone"), 0.0f, false);

	if (GetLocalVarInt("FileCount") == 0)
	{
		AddEffectVoice(GetLocalVarString("FileName"), "", "Dialogues", GetLocalVarString("FileName"), true, GetLocalVarString("Phone"), 0.0f, 15.0f);
	}
	else if (GetLocalVarInt("FileCount") > 0)
	{
		for (int i = 1; i <= GetLocalVarInt("FileCount"); i++)
		{
			if (i < 10)
			{
				SetLocalVarString("tmp", GetLocalVarString("FileName")+"_0" + i); 
			}
			else
			{
				SetLocalVarString("tmp", GetLocalVarString("FileName")+"_" + i); 
			}

			AddEffectVoice(GetLocalVarString("tmp"), "", "Dialogues", GetLocalVarString("tmp"), true, GetLocalVarString("Phone"), 0.0f, 15.0f);
		}
	}
	SetEffectVoiceOverCallback("HangUp");
}

void HangUp()
{
	PlaySoundAtEntity("", "phone_down.snt", GetLocalVarString("Phone"), 0.0f, false);
	StopSound("phonestatic", 0.3f);

	SetPlayerMoveSpeedMul(1.0f);
	SetPlayerRunSpeedMul(1.0f);
	SetPlayerJumpDisabled(false);

	AddTimer("phoneOverTimer", 2.0f, "PhoneCallOverCallback");
}

///////////////END PHONE///////////////////////////////////////////
///////////////////////////////////////////////////////////////////

//////////////////////SANITY///////////////////////////////////////
///////////////////////////////////////////////////////////////////

void SetUpInsanity() //Disables insanity events which use Daniel's voice, starts looping timer
{
	SetInsanitySetEnabled("Ch03", false);
	SetInsanitySetEnabled("Ch02", false);
	SetInsanitySetEnabled("Ch01", false);

	AddTimer("SanityTimer", 1.0f, "SanityScript");
}

void SanityScript(string &in asTimer) //looping timer, fixes being unable to use potions when fully sane
{
	if (GetPlayerSanity() == 100.0f)
		SetPlayerSanity(99.0f);

	AddTimer("SanityTimer", 1.0f, "SanityScript");
}

////////////////////END SANITY/////////////////////////////////////
///////////////////////////////////////////////////////////////////
