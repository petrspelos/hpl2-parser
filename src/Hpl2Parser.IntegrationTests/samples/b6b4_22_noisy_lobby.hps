//////////////////////////////////////
/////////////////////////////////////


// 		........LEVEL 22..........

//					~`~					 //
//				 ~ ..... ~ 					//
//--.    ~	.--"NOISY LOBBY"--.	  ~ 	.--//
//				 ~ ..... ~ 				  //
//					~`~					 //

/*

	It has a noisy machine that the player needs to disable.

*/

//////////////////////////////////////
/////////////////////////////////////

void OnStart()
{
	SetInventoryDisabled(false);
	SetMapDisplayNameEntry("LevelLightroom");
	
	//--COLLIDE CALLBACKS--//
	AddEntityCollideCallback("Player", "AreaScaryBruteSpawn", "SuperScaryOccurance", true, 1);
	AddEntityCollideCallback("Brute", "AreaBruteGone", "EndEncounter", true, 1);
	AddEntityCollideCallback("Player", "AreaMacMem", "MacQuest", true, 1);
	///
	
	//AddTimer("", 1.0f, "RegenOil");
	
	//--SOUNDS--//
	PlaySoundAtEntity("elec", "27_tunnel_elec", "SOUND1", 0.0f, true);  //First Machine's Hum
	PlaySoundAtEntity("elec2", "27_tunnel_elec", "SOUND2", 0.0f, true);	//Second Machine's Hum
	
	//--FOR USING THE RODS--//
	for(int i=1;i<=4;i++)
	AddUseItemCallback("", "Rod"+i, "pedestal_"+i, "UseRodPed", true); //For using any given rod on any given pedestal

	/*
	THINGS NO LONGER IN USE
	
	AddUseItemCallback("", "Rod2", "pedestal_2", "UseRodPed2", true);
	AddUseItemCallback("", "Rod3", "pedestal_3", "UseRodPed3", true);
	AddUseItemCallback("", "Rod4", "pedestal_4", "UseRodPed4", true);
	*/
	
	//////////////////////////////////////
	/////////////////////////////////////
	
	/* Debug
	*/
	
	
	if(ScriptDebugOn())
	{
		/*
		GiveSanityBoost();
		
		//--STOP MACHINE HUMS--//
		
		StopSound("elec*", 1.0f);
		
		SetEntityActive("BarrierOK2", true);  //Enable inactive machine
		SetEntityActive("BarrierRods", false); //Disable active machine
		
		PlayMusic("18_puzzle_valve02.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "27_orb_implode", "SoundFinish", 0.0f, false);
		StartScreenShake(0.1f, 0.5f, 0.5f, 0.5f);
		
		FadeLightTo("PointLight_6", 0, 0, 0, 0, 0, 1.5); //Fade out light from machine
		
		SetGlobalVarInt("NL", 2);
		
		//--SOME EFFECTS--//
		
		PlaySoundAtEntity("", "03_rock_move", "Rumble_*", 0.0f, false);
		
		CreateParticleSystemAtEntity("", "ps_dust_rumble.ps", "Rumble_*", false);  //Ceiling
		CreateParticleSystemAtEntity("", "ps_dust_elevator_crash.ps", "SoundFinish", false); //Machine
		
		AddTimer("TimerRoar", 6.5f, "TimerRoar"); //Timer for roar events
		*/
		
		//--LANTERN--//
		SetPlayerLampOil(10.0f); //...
		GiveItem("lantern_1", "Lantern", "Lantern", "lantern.tga", 1.0f);
	}

	//--DISPLAY--//
	CheckPoint("noisylobby1", "PlayerStartArea_1", "", "DeathHint", "Dhint1");
	
	//////////////////////////////////////////
	/////////////////////////////////////////
		
		
		SetDeathHint("DeathHint", "DHint1");
	}
	
//////////////////////////////////////////
/////////////////////////////////////////
	
//--WHAT HAPPENS UPON ENTERING THE MAP--//
void OnEnter()
{
	SetInventoryDisabled(false);
	AutoSave();
	
	StopMusic(0.0f, 0); //Stops any music upon entering
	}
	
//////////////////////////////////////////
/////////////////////////////////////////
	
//--BRUTE APPEARENCE--//	
void SuperScaryOccurance(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("Brute", true);
	AddEnemyPatrolNode("Brute", "Node_1", 0.001f, "");  //Nodes, nodes, nodes...
	AddEnemyPatrolNode("Brute", "Node_2", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_3", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_4", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_5", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_6", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_7", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_8", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_10", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_11", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_12", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_13", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_14", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_15", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_16", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_17", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_18", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_19", 0.001f, "");
	AddEnemyPatrolNode("Brute", "Node_20", 0.001f, "");

	/*
	if(GetEntityExists("Brute") == false)
	{
		AddTimer("", 5.0f, "CreatureMem"); //This didn't work :(
	}
	*/

SetDeathHint("DeathHint", "DHint1");
	}

//--END BRUTE ENCOUNTER--//
void EndEncounter(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("Brute", false);
	PlaySoundAtEntity("", "door_level_wood_close", "AreaBruteGone", 0.0f, false);
	}	
	
//////////////////////////////////////////
/////////////////////////////////////////
	
//Regen Oil
//NO LONGER IN USE
/*
void RegenOil(string &in asTimer)
{
	if(GetPlayerLampOil() < 100.0f)
	{
		SetPlayerLampOil(100.0f);
		AddTimer("", 1.0f, "RegenOil");
	}
	
	}
	*/
	
//////////////////////////////////////////
/////////////////////////////////////////	
	
	
//--LEVERS--//
	
	
///////////////////////////////////
//LEVERS DISABLE FIRST MACHINE
void Levers(string &in asEntity, int alState)
{
	AddLocalVarInt("LeversOK", 1);
	StartScreenShake(0.01f, 1.0f, 1.5f, 0.5f);
	PlaySoundAtEntity("", "24_rock", "Player", 0.0f, false);
	
	if(GetLeverState("MecLever3") == 1)
	{
		SetLeverStuckState("MecLever3", 1, true);;
		AddDebugMessage("Levers ="+GetLocalVarInt("LeversOK"), false);
	}
	
	if(GetLeverState("MecLever2") == 1)
	{
		SetLeverStuckState("MecLever2", 1, true);
		AddDebugMessage("Levers ="+GetLocalVarInt("LeversOK"), false);
	}
	
	if(GetLeverState("MecLever1") == 1)
	{
		SetLeverStuckState("MecLever1", 1, true);
		AddDebugMessage("Levers ="+GetLocalVarInt("LeversOK"), false);
	}
	
	if(GetLocalVarInt("LeversOK") > 2)
	{
		AddGlobalVarInt("NMachineOK", 1);
		AddDebugMessage("Levers ="+GetLocalVarInt("LeversOK"), false);
		
		AddTimer("", 0.1f, "TimerEndMachine");
	}
	
	/* 
	
	I FEEL LIKE THERE
	WAS A BETTER WAY TO DO THIS...
	
	*/
}

//////////////////////////////////////////
/////////////////////////////////////////	

//--MEMENTOS / LANG RELATED INFO--//

/* Gives the player a quest regarding the machine and rods
*/

void MacQuest(string &in asParent, string &in asChild, int alState)
{
	AddQuest("MachineElec", "MachineElec");
	}

//--I FORGOT WHAT THIS IS--//
void CreatureMem(string &in asTimer)
{
	AddQuest("", "Creature");
	}
	
////////////////////////////////////////////////
///////////////////////////////////////////////

//--RODS--//

void UseRodPed(string &in asItem, string &in asEntity)
{	
	/* Rods
	 */
	if(asItem == "Rod1" && asEntity == "pedestal_1")
	{
		SetEntityActive("RodIn1", true);
		RemoveItem(asItem);
		PlaySoundAtEntity("", "puzzle_place_jar", asEntity, 0.0f, false);
		AddLocalVarInt("RodsOK", 1);
		
		AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	}
	
	if(asItem == "Rod2" && asEntity == "pedestal_2")
	{
		SetEntityActive("RodIn2", true);
		RemoveItem(asItem);
		PlaySoundAtEntity("", "puzzle_place_jar", asEntity, 0.0f, false);
		AddLocalVarInt("RodsOK", 1);
		
		AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	}
	
	if(asItem == "Rod3" && asEntity == "pedestal_3")
	{
		SetEntityActive("RodIn3", true);
		RemoveItem(asItem);
		PlaySoundAtEntity("", "puzzle_place_jar", asEntity, 0.0f, false);
		AddLocalVarInt("RodsOK", 1);
		
		AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	}
	
	if(asItem == "Rod4" && asEntity == "pedestal_4")
	{
		SetEntityActive("RodIn4", true);
		RemoveItem(asItem);
		PlaySoundAtEntity("", "puzzle_place_jar", asEntity, 0.0f, false);
		AddLocalVarInt("RodsOK", 1);
		
		AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	}
	
	/* Use all Rods
	*/
	
	if(GetLocalVarInt("RodsOK") == 4)
	{
		AddGlobalVarInt("NMachineOK", 1);
		AddTimer("", 0.1f, "TimerEndMachine");
	}
}

/*
ENDING MACHINE
*/
void TimerEndMachine(string &in asEntity)
{
	if(GetGlobalVarInt("NMachineOK") == 1)
	{
		GiveSanityBoost();
		
		StopSound("elec", 1.0f);
		
		SetEntityActive("BarrierOK1", true);
		SetEntityActive("BarrierLevers", false);
		
		PlayMusic("18_puzzle_valve01.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "17_start_machine", "Player", 0.0f, false);
		
		FadeLightTo("PointLight_5", 0, 0, 0, 0, 0, 1.5);
		
		SetPlayerMoveSpeedMul(0.5);
		FadeImageTrailTo(1, 1);
		AddTimer("", 2, "Reset");
	}
	
	if(GetGlobalVarInt("NMachineOK") == 2)
	{
		GiveSanityBoost();
		
		StopSound("elec2", 1.0f);
		
		SetEntityActive("BarrierOK2", true);
		SetEntityActive("BarrierRods", false);
		
		PlayMusic("18_puzzle_valve02.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "27_orb_implode", "SoundFinish", 0.0f, false);
		StartScreenShake(0.1f, 0.5f, 0.5f, 0.5f);
		
		
		FadeLightTo("PointLight_6", 0, 0, 0, 0, 0, 1.5);
		
		SetGlobalVarInt("NL", 2);
		
		/* Some Effects
		*/
		PlaySoundAtEntity("", "03_rock_move", "Rumble_*", 0.0f, false);
		CreateParticleSystemAtEntity("", "ps_dust_rumble.ps", "Rumble_*", false);
		CreateParticleSystemAtEntity("", "ps_elevator_crash.ps", "SOUND*", false);
		
		AddTimer("TimerRoar", 5.5f, "TimerRoar");
		
		CompleteQuest("MachineElec", "MachineElec");
	}
}

/*
void UseRodPed1(string &in asItem, string &in asEntity)
{
	SetEntityActive("RodIn1", true);
	RemoveItem(asItem);
	PlaySoundAtEntity("", "puzzle_place_jar", "pedestal_1", 0.0f, false);
	AddLocalVarInt("RodsOK", 1);
	
	AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	
	if(GetLocalVarInt("RodsOK") == 4)
	{
		AddGlobalVarInt("NMachineOK", 1);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 1)
	{
		GiveSanityBoost();
		
		StopSound("elec", 1.0f);
		
		SetEntityActive("BarrierOK1", true);
		SetEntityActive("BarrierLevers", false);
		
		PlayMusic("18_puzzle_valve01.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "17_start_machine", "Player", 0.0f, false);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 2)
	{
		GiveSanityBoost();
		
		StopSound("elec2", 1.0f);
		
		SetEntityActive("BarrierOK2", true);
		SetEntityActive("BarrierRods", false);
		
		PlayMusic("18_puzzle_valve02.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "27_orb_implode", "Player", 0.0f, false);
		
		SetGlobalVarInt("NL", 2);
	}
	
	}

void UseRodPed2(string &in asItem, string &in asEntity)
{
	SetEntityActive("RodIn2", true);
	RemoveItem(asItem);
	PlaySoundAtEntity("", "puzzle_place_jar", "pedestal_1", 0.0f, false);
	AddLocalVarInt("RodsOK", 1);
	AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	
		if(GetLocalVarInt("RodsOK") == 4)
	{
		AddGlobalVarInt("NMachineOK", 1);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 1)
	{
		GiveSanityBoost();
		
		StopSound("elec", 1.0f);
		
		SetEntityActive("BarrierOK1", true);
		SetEntityActive("BarrierLevers", false);
		
		PlayMusic("18_puzzle_valve01.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "17_start_machine", "Player", 0.0f, false);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 2)
	{
		GiveSanityBoost();
		
		StopSound("elec2", 1.0f);
		SetEntityActive("BarrierOK2", true);
		SetEntityActive("BarrierRods", false);
		
		PlayMusic("18_puzzle_valve02.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "27_orb_implode", "Player", 0.0f, false);

		
		SetGlobalVarInt("NL", 2);
	}
	}
	
void UseRodPed3(string &in asItem, string &in asEntity)
{
	SetEntityActive("RodIn3", true);
	RemoveItem(asItem);
	PlaySoundAtEntity("", "puzzle_place_jar", "pedestal_1", 0.0f, false);
	AddLocalVarInt("RodsOK", 1);
	AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	
		if(GetLocalVarInt("RodsOK") == 4)
	{
		AddGlobalVarInt("NMachineOK", 1);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 1)
	{
		GiveSanityBoost();
		StopSound("elec", 1.0f);
		SetEntityActive("BarrierOK1", true);
		SetEntityActive("BarrierLevers", false);
		PlayMusic("18_puzzle_valve01.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "17_start_machine", "Player", 0.0f, false);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 2)
	{
		GiveSanityBoost();
		
		StopSound("elec2", 1.0f);
		
		SetEntityActive("BarrierOK2", true);
		SetEntityActive("BarrierRods", false);
		
		PlayMusic("18_puzzle_valve02.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "27_orb_implode", "Player", 0.0f, false);
		
		SetGlobalVarInt("NL", 2);
	}
	}

void UseRodPed4(string &in asItem, string &in asEntity)
{
	SetEntityActive("RodIn4", true);
	RemoveItem(asItem);
	PlaySoundAtEntity("", "puzzle_place_jar", "pedestal_1", 0.0f, false);
	AddLocalVarInt("RodsOK", 1);
	AddDebugMessage("RodsOK ="+GetLocalVarInt("RodsOK"), false);
	
	if(GetLocalVarInt("RodsOK") == 4)
	{
		AddGlobalVarInt("NMachineOK", 1);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 1)
	{
		GiveSanityBoost();
		
		StopSound("elec", 1.0f);
		
		SetEntityActive("BarrierOK1", true);
		SetEntityActive("BarrierLevers", false);
		
		PlayMusic("18_puzzle_valve01.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "17_start_machine", "Player", 0.0f, false);
	}
	
	if(GetGlobalVarInt("NMachineOK") == 2)
	{
		GiveSanityBoost();
		
		StopSound("elec2", 1.0f);
		
		SetEntityActive("BarrierOK2", true);
		SetEntityActive("BarrierRods", false);
		
		PlayMusic("18_puzzle_valve02.ogg", false, 0.6f, 0.01f, 10, true);
		PlaySoundAtEntity("", "27_orb_implode", "Player", 0.0f, false);
		
		SetGlobalVarInt("NL", 2);
	}
}
*/

//		*--*		~`~		    *--*	  //

//--.      	 ~	.--MISC--.   ~     	   .--//

//		.--.		~`~		    .--.	 //


//--TEXT FOR INTERACT LOCKED DOOR--//
void LockText(string &in asEntity)
{
	SetMessage("TextOne", "LockDoor", 2);
}

//--RESET SCREEN EFFECTS--//
void Reset(string &in asTimer)
{
	SetPlayerMoveSpeedMul(1);
	SetPlayerRunSpeedMul(1);
	FadeImageTrailTo(0, 1);
}

//--EXIT EVENTS BASED ON 13_machine_room--//
void TimerRoar(string &in asTimer)
{
	int iMaxEventStep = 8;
	float fEventSpeed = 0.5f;
	string sEvent = asTimer;

	AddLocalVarInt(sEvent, 1);

	switch(GetLocalVarInt(sEvent)){
		case 1:
			StartScreenShake(0.05f, 5.0f, 1.0f,2.5f);
			PlayGuiSound("roar_custom", 0.5f);
		break;
		case 2:
			FadePlayerFOVMulTo(2, 0.08f);
			SetPlayerMoveSpeedMul(0.7f);
			SetPlayerRunSpeedMul(0.5f);
			GiveSanityDamage(20, false);
		break;
		case 3:
			SetPlayerMoveSpeedMul(0.6f);
			SetPlayerRunSpeedMul(0.25f);
			PlaySoundAtEntity("aah", "react_scare.snt", "Player", 0.3f, false);
			PlaySoundAtEntity("", "24_rock", "Player", 0.0f, false);
			PlayGuiSound("insanity_monster_roar01.ogg", 0.8f);
			fEventSpeed = 2.5f;
		break;
		case 4:
			PlaySoundAtEntity("s"+asTimer, "react_breath.snt", "Player", 0.0f, false);
			FadePlayerFOVMulTo(1, 0.5f);
			fEventSpeed = 1.0f;
		break;
		case 5:
			PlaySoundAtEntity("s"+asTimer, "react_breath.snt", "Player", 0.1f, false);
			PlayGuiSound("insanity_monster_roar02.ogg", 0.8f);
			fEventSpeed = 1.5f;
		break;
		case 6:
			PlaySoundAtEntity("s"+asTimer, "react_breath.snt", "Player", 0.3f, false);
			PlaySoundAtEntity("", "24_rock", "Player", 0.0f, false);
			SetPlayerMoveSpeedMul(0.7f);
			SetPlayerRunSpeedMul(0.5f);	
			fEventSpeed = 1.5f;
		break;
		case 7:
			SetPlayerMoveSpeedMul(0.85f);
			SetPlayerRunSpeedMul(0.75f);	
		break;
		case 8:
			PlaySoundAtEntity("s"+asTimer, "react_breath.snt", "Player", 0.6f, false);
			PlaySoundAtEntity("", "24_rock", "Player", 0.0f, false);
			SetPlayerMoveSpeedMul(1.0f);
			SetPlayerRunSpeedMul(1.0f);
			FadeImageTrailTo(0,2);
		break;
	}

	if(GetLocalVarInt(sEvent) <= iMaxEventStep) AddTimer(sEvent, fEventSpeed, sEvent);
}

//--INTERRACT PEDESTAL MESSAGE--//
void IntPedestalTouch(string &in asEntity)
{
	PlayGuiSound("impact_rock_med2.ogg", 0.8f);
	SetMessage("TextOne", "22Pedestal", 2);
}

//--INTERRACT MACHINE--//
void TouchStrange(string &in asEntity)
{
	SetMessage("TextOne", "22Strange", 2);
}

/////////////////////////////////
/////////////////////////////////

//--.   	 ~	.--END--.   ~     	.--//
