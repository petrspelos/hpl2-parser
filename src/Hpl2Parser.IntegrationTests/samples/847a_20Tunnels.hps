void OnStart()
{  
	AutoSave();
	AddUseItemCallback("", "Crowbar", "door", "UseCrowbarOnBoards", true);
	AddEntityCollideCallback("Joint", "AreaBreak", "ForceOpenDoor", true, 1);
	AddEntityCollideCallback("Player", "TheEnd", "Ending4", true, 1);
	AddEntityCollideCallback("Player", "TheEnd5", "END5", true, 1);
	

}





void OnEnter()
{ 
	AddTimer("GroundShake", 30, "TimerShadow");
	PlayMusic("Tunnels", true, 1, 0.1, 10, false);
}




void OnLeave()
{ 

}


////////////////////Crowbar Door///////////////////////////////////////

void UseCrowbarOnBoards(string &in asItem, string &in asEntity)
{
	RemoveItem(asItem);
	PlaySoundAtEntity("", "player_crouch.snt", "Player", 0.05, false);
	AddTimer(asEntity, 0.2, "TimerPlaceCrowbar");
	StartPlayerLookAt("joint", 2, 2, "crowbarlooklook");
}

void crowbarlooklook()
{
	StopPlayerLookAt();
}

void TimerPlaceCrowbar(string &in asTimer)
{
		SetEntityActive("Joint", true);
		PlaySoundAtEntity("", "puzzle_place_jar.snt", asTimer, 0.05, false);
}

void ForceOpenDoor(string &in asParent, string &in asChild, int alState) 
{
			SetEntityActive("Joint", false);
			SetEntityActive("Broken", true);
			SetSwingDoorLocked("door", false, true);
			SetSwingDoorClosed("door", false, false);
			SetSwingDoorDisableAutoClose("door", true);
			AddPropImpulse("door", 2, 0, 0, "world");
			
			PlaySoundAtEntity("", "break_wood_metal.snt", "AreaEffect", 0.05, false);
			
			CreateParticleSystemAtEntity("", "ps_hit_wood.ps", "AreaEffect", false);
			
			CompleteQuest("WallBroken", "DiningWall");
			
		
}

//////////////////////////////////Shadow////////////////////////////////

void TimerShadow(string &in asTimer)
{
		if(asTimer == "GroundShake") {
	
		SetLocalVarInt("RandomInt", RandInt(1,4));
		
		GetLocalVarInt("RandomInt");
		
		}
		
		
		if(GetLocalVarInt("RandomInt") == 1) {
			StartScreenShake(0.7, 0.7, 0.6, 0.5);
			PlaySoundAtEntity("", "guardian_activated", "Player", 0, false);
			AddTimer("GroundShake", 16, "TimerShadow");
		}
		
		else if(GetLocalVarInt("RandomInt") == 2) {
			StartScreenShake(0.6, 0.3, 0.9, 0.7);
			PlaySoundAtEntity("", "guardian_activated", "Player", 0, false);
			AddTimer("GroundShake", 35, "TimerShadow");
		}
		
		
		else if(GetLocalVarInt("RandomInt") == 3) {
			StartScreenShake(0.4, 0.7, 0.5, 0.6);
			PlaySoundAtEntity("", "guardian_activated", "Player", 0, false);
			AddTimer("GroundShake", 23, "TimerShadow");
		}
		
		else if(GetLocalVarInt("RandomInt") == 4) {
			StartScreenShake(0.6, 0.7, 0.8, 0.6);
			PlaySoundAtEntity("", "guardian_activated", "Player", 0, false);
			AddTimer("GroundShake", 25, "TimerShadow");
		}
		

		
}

//////////////////////////////Brute//////////////////////////////////////
void Brute(string &in asEntity)
{
	SetEntityActive("servant_brute_1", true);
	
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_1", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_2", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_3", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_4", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_5", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_6", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_7", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_8", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_9", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_10", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_11", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_12", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_13", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_14", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_15", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_16", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_17", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_18", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_19", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_20", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_21", 0.001, "");
	AddEnemyPatrolNode("servant_brute_1", "PathNodeArea_22", 0.001, "");
	
	CheckPoint("Brute", "PlayerStartArea_3", "BruteRespawn", "", "");
}

void BruteRespawn(string &in asName, int alCount)
{
	SetEntityActive("servant_brute_1", true);
}  

//////////////////////////////Ending5////////////////////////////////////

void END5(string &in asParent, string &in asChild, int alState)
{
	
	if(GetGlobalVarInt("Ending4") == 1) return;
	RemoveTimer("GroundShake");
	StopMusic(3, 10);
	
	AddTimer("PlayerCoughPass", 0.5f, "TimerPass");
	AddTimer("PlayerCoughPass2", 1.3f, "TimerPass");
	AddTimer("PlayerCoughPass3", 1.8f, "TimerPass");
	AddTimer("PlayerCrouchPass", 3, "TimerPass");
	AddTimer("PlayerLookPass", 3.3f, "TimerPass");
	AddTimer("PlayerCoughPass4", 3.5f, "TimerPass");
	AddTimer("PlayerCoughPass5", 4.6f, "TimerPass");
	AddTimer("PlayerFadeOutPass", 6, "TimerPass");
	AddTimer("PlayerStopRingPass", 11, "TimerPass");
	AddTimer("PlayerDialogue", 13, "TimerPass");
	AddTimer("PlayerOpenEyes", 54, "TimerPass");
	AddTimer("PlayerBlood", 56.5f, "TimerPass");
	AddTimer("PlayerMonster", 60, "TimerPass");
	AddTimer("End5", 79, "TimerPass");
	
	
}

void TimerPass(string &in asTimer)
{
		if(asTimer == "PlayerCoughPass") {
		
		PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		SetPlayerActive(false);
		RemoveTimer("PlayerCough");
		}
		
		else if(asTimer == "PlayerCoughPass2") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerCoughPass3") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerCrouchPass") {
		
		PlaySoundAtEntity("", "player_bodyfall.snt", "Player", 1, true);
		GiveSanityDamage(100, true);
		PlaySoundAtEntity("ring", "insanity_ear_ring.snt", "Player", 1, true);
		SetPlayerCrouching(true);
		}
		
		else if(asTimer == "PlayerCoughPass4") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerLookPass") StartPlayerLookAt("AreaPassLook", 0.5, 0.5, "");
		
		else if(asTimer == "PlayerCoughPass5") PlaySoundAtEntity("", "player_cough", "Player", 0, false);
		
		else if(asTimer == "PlayerFadeOutPass") FadeOut(2);
		
		else if(asTimer == "PlayerStopRingPass") StopSound("ring", 0.4);
		
		else if(asTimer == "PlayerDialogue") {
			AddEffectVoice("End5", "", "", "", false, "Player", 0, 15);
			StartPlayerLookAt("AreaPassLook_1", 0.5, 0.5, "");
			TeleportPlayer("PlayerStartArea_2");
		
		}
		
		else if(asTimer == "PlayerOpenEyes") FadeIn(1);
		
		else if(asTimer == "PlayerBlood") SetEntityActive("blood_spatter01_1", true);
		
		else if(asTimer == "PlayerMonster") {
		FadeOut(4);
		StartPlayerLookAt("AreaPassLook_2", 0.5, 0.5, "");
		}
		
		else if(asTimer == "End5") StartCredits("Ending 5.ogg", false, "Credits", "Ending5", 4);
}

//////////////////////////////Ending4////////////////////////////////////

void Ending4(string &in asParent, string &in asChild, int alState)
{
	FadeOut(3);
	StopMusic(3, 10);
	RemoveTimer("GroundShake");
	SetEntityActive("servant_brute_1", false);
	AddTimer("End4NewsCatser", 3, "TimerEnd4");
	AddTimer("End4", 96, "TimerEnd4");
	
	
}

void TimerEnd4(string &in asTimer)
{
	if(asTimer == "End4NewsCatser") {
		AddEffectVoice("End4", "", "", "", false, "Player", 0, 15);
		SetPlayerActive(false);
		}
		
	else if(asTimer == "End4") StartCredits("Ending 4.ogg", false, "Credits", "Ending4", 4);
}

/////////////////////////////////Messgaes///////////////////////////////

void messagelocked(string &in asEntity) {
	SetMessage("Message", "CellarLocked", 3);
}



