void OnStart()
{		
			   
		//AddEntityCollideCallback("book_bible_1", "ScriptArea_1", "freenote", false, 1);
		AddEntityCollideCallback("Player", "ScriptArea_3", "GoldRod", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_2", "TimerPeaceMusic", true, 1);
		AddEntityCollideCallback("Player", "ScriptArea_7", "EnterAlbert", false, 1);
		AddEntityCollideCallback("Player", "ScriptArea_4", "conGateQuest", true, 1);
		AddUseItemCallback("PowerLevel1", "GoldenPowerPod", "rodBox", "PowerLevel", false);
		AddTimer("", 0, "Wonderlight");
		ConnectEntities("door1", "lever_nice01_1", "safety_large_vert_1",false, 0,"");
		//AddEntityCollideCallback("Player", "AmbienceArea_2", "HallAmbience", false, 0);
		AddEntityCollideCallback("Player", "AmbienceArea_3", "WindAmbience", false, 0);
		
		SetEntityPlayerInteractCallback("note_letter_1", "ActionGlobalVarInt", true);
		for (int i=1; i<=3; i++)	AddTimer("interactDoor"+i, 0, "TimerList");
		
		//AddGlobalVarInt("BadDreamMode", 1);
		//PlaySoundAtEntity("rockM", "stoneclap02.snt", "Player", 0.1f, false);
		PlaySoundAtEntity("rod", "goldRodPodest", "guiding_rod_machine_1", 0.1f, true);
		
		AddTimer("introdutionMusic", 15, "TimerList");
		AddTimer("introdutionMusicE", 55, "TimerList");
		
		
}


//QUEST

void conGateQuest(string &in asParent, string &in asChild, int alState)
{	AddQuest("conGate", "conGate");
}
void GoldRod(string &in asParent, string &in asChild, int alState)
{	AddTimer("RodQuest", 5, "TimerList");
}

void PlayerInteractDoor1(string &in asEntity)
{	
	PlayGuiSound("17_attach_crank", 0.5f);
	
	SetMoveObjectState(asEntity, 0.05f);
	
	AddTimer(asEntity, 0.4f, "TimerCloseGate");
	AddTimer("sound", 1.0f, "TimerCloseGate");
	AddTimer("interactDoor1", 1.2f, "TimerList");
}
void PlayerInteractDoor2(string &in asEntity)
{	
	PlayGuiSound("17_attach_crank", 0.5f);
	
	SetMoveObjectState(asEntity, 0.05f);
	
	AddTimer(asEntity, 0.4f, "TimerCloseGate");
	AddTimer("sound", 1.0f, "TimerCloseGate");
	AddTimer("interactDoor2", 1.2f, "TimerList");
	
	if(GetLocalVarInt("surfaceGate") == 1){
		AddTimer("surfaceEvent01", 4, "TimerList");
		AddTimer("surfaceEvent05", 5, "TimerList");
		AddTimer("surfaceEvent06", 6, "TimerList");
		AddTimer("surfaceEvent01", 8, "TimerList");
		AddTimer("surfaceEvent01", 10, "TimerList");
		AddTimer("surfaceEvent01", 12, "TimerList");
		AddTimer("surfaceEvent02", 15, "TimerList");
		AddTimer("surfaceEvent02", 18, "TimerList");
		AddTimer("surfaceEvent02", 21, "TimerList");
		AddTimer("surfaceEvent02", 24, "TimerList");
		AddTimer("surfaceEvent03", 17, "TimerList");
		AddTimer("surfaceEvent04", 19, "TimerList");
		AddTimer("surfaceEvent07", 14, "TimerList");
		AddTimer("surfaceEvent08", 19, "TimerList");
		
		AddTimer("clip2", 26, "dreamfallTimer");
		AddTimer("clip3", 29, "dreamfallTimer");
		SetLocalVarInt("surfaceGate", 0);
	}
}
void PlayerInteractDoor3(string &in asEntity)
{	
	PlayGuiSound("17_attach_crank", 0.5f);
	
	SetMoveObjectState(asEntity, 0.05f);
	
	AddTimer(asEntity, 0.4f, "TimerCloseGate");
	AddTimer("sound", 1.0f, "TimerCloseGate");
	AddTimer("interactDoor3", 1.2f, "TimerList");
	
	if(GetLocalVarInt("surfaceGate") == 1){
		AddTimer("surfaceEvent01", 4, "TimerList");
		AddTimer("surfaceEvent05", 5, "TimerList");
		AddTimer("surfaceEvent06", 6, "TimerList");
		AddTimer("surfaceEvent01", 8, "TimerList");
		AddTimer("surfaceEvent01", 10, "TimerList");
		AddTimer("surfaceEvent01", 12, "TimerList");
		AddTimer("surfaceEvent02", 15, "TimerList");
		AddTimer("surfaceEvent02", 18, "TimerList");
		AddTimer("surfaceEvent02", 21, "TimerList");
		AddTimer("surfaceEvent02", 24, "TimerList");
		AddTimer("surfaceEvent03", 17, "TimerList");
		AddTimer("surfaceEvent04", 19, "TimerList");
		AddTimer("surfaceEvent07", 14, "TimerList");
		AddTimer("surfaceEvent08", 19, "TimerList");
		
		AddTimer("clip2", 26, "dreamfallTimer");
		AddTimer("clip3", 29, "dreamfallTimer");
		SetLocalVarInt("surfaceGate", 0);
	}
}

void TimerCloseGate(string &in asTimer)
{
	if(asTimer == "sound"){
		PlayGuiSound("close_gate.ogg", 0.5f);
	} else{
		SetMoveObjectState(asTimer, 0.00f);
		
		SetEntityPlayerInteractCallback(asTimer, "PlayerInteractDoor", true);	
	}
}

//AMBIENCE

void HallAmbience(string &in asParent, string &in asChild, int alState)
{	if(alState == 1){
	PlaySoundAtEntity("hallAmb", "28_amb_loop.snt", "Player", 5.0f, false);}
	else{
	StopSound("hallAmb", 5.0f);}
}

void WindAmbience(string &in asParent, string &in asChild, int alState)
{	if(alState == 1){
	PlaySoundAtEntity("windyAmb", "ambience_wind_eerie_no3d.snt", "Player", 3.0f, false);
	SetSanityDrainDisabled(false);
	}
	else
	{
		StopSound("windyAmb", 3.0f);
		FadeLightTo("BoxLight", 0, 0, 0, 0, -1, 8);
		SetSanityDrainDisabled(true);
	}
}


void TimerPeaceMusic(string &in asParent, string &in asChild, int alState)
{		AddTimer("peaceMusic", 3, "TimerList");	
		RemoveTimer("introdutionMusic");
		RemoveTimer("introdutionMusicE");
	}

void PowerLevel(string &in asItem, string &in asEntity)
{	RemoveItem(asItem);
	AddGlobalVarInt("GoldStage", 1);
	if(GetGlobalVarInt("GoldStage") == 1)
{	AddTimer("rightDoor1", 0, "TimerList");
	AddTimer("rightDoor2", 3, "TimerList");
	AddTimer("rightDoor3", 8, "TimerList");
	AddTimer("rightDoor4", 13, "TimerList");
//	AddTimer("rightDoor5", 17, "TimerList");
		AddTimer("Drele", 2, "TimerList");
	
	CompleteQuest("conGate", "conGate");
	RemoveEntityCollideCallback("Player", "ScriptArea_4");
	AddEntityCollideCallback("Player", "ScriptArea_4", "firstDoorOpen", true, 1);
}
	if(GetGlobalVarInt("GoldStage") == 2)
	{
	AddTimer("leftDoor1", 0, "TimerList");
	AddTimer("leftDoor2", 3, "TimerList");
	AddTimer("leftDoor3", 8, "TimerList");
	}
}

void firstDoorOpen(string &in asParent, string &in asChildreamfallTimerd, int alState){
	AddTimer("Dmech", 1, "TimerList");
	AddTimer("rightDoor5", 1.5f, "TimerList");
	RemoveTimer("Drele");
}

void TimerList(string &in asTimer)
{	if(asTimer == "RodQuest")
	{	AddQuest("GoldBox", "GoldBox");
	}
	if(asTimer == "Drele"){
		PlaySoundAtEntity("", "Drele", "safety_large_vert_1", 0, true);
		AddTimer("Drele", 2, "TimerList");
	}
	if(asTimer == "Dmech"){
		PlaySoundAtEntity("", "Dmech", "safety_large_vert_1", 0, true);
	}
	if(asTimer == "rightDoor1")
	{	SetEntityActive("guiding_rod03_1", true);
		PlayGuiSound("13_rod_in", 10);	}
	if(asTimer == "rightDoor2")
	{	for(int i=1;i<=3;i++)		FadeLightTo("Power1Light_1_"+i, 1, 1, 0.5, 1, -1, 3);
		for(int i=1;i<=3;i++)		FadeLightTo("Power1Light_2_"+i, 1, 1, 0.5, 1, -1, 3);
		FadeLightTo("PointLight_25", 0.4, 0.4, 0.2, 1, -1, 3);
		PlaySoundAtEntity("guiding_rod03_1", "13_press_done.snt", "guiding_rod03_1", 0.1f, true);
		CreateParticleSystemAtEntity("", "ps_steam.ps", "ParticleArea02_1", true);
		PlaySoundAtEntity("", "13_steam.snt", "ParticleArea02_1", 3, true);
		 
	}
	if(asTimer == "rightDoor3")
	{	FadeRadialBlurTo(0.01, 0.03f);
		StartScreenShake(0.012, 3, 3.5f, 3.5f);	
		//PlayGuiSound("specialsound.ogg", 20);	
		PlayGuiSound("24_rock2.ogg", 20);	
		}
	if(asTimer == "rightDoor4")
	{	StopMusic(5, 0);
		FadeRadialBlurTo(0.0, 0.03f);		 
	//	SetMoveObjectState("safety_large_vert_1", 1);
	}
	if(asTimer == "rightDoor5")
	{	//SetEntityActive("safety_large_vert_2", true);
		//SetEntityActive("safety_large_vert_1", false);
		SetMoveObjectState("safety_large_vert_1", 1.0f);
	}
	if(asTimer == "peaceMusic")
	{	PlayMusic("Sinclair_pt2.ogg", false, 1.0f, 0, 0, false);	}
	
	
	if(asTimer == "leftDoor1")
	{	SetEntityActive("guiding_rod03_2", true);
		PlayGuiSound("13_rod_in", 10);	}
	if(asTimer == "leftDoor2")
	{	for(int i=1;i<=3;i++)		FadeLightTo("Power2Light_1_"+i, 1, 1, 0.5, 1, -1, 3);
		for(int i=1;i<=3;i++)		FadeLightTo("Power2Light_2_"+i, 1, 1, 0.5, 1, -1, 3);
		FadeLightTo("PointLight_26", 0.4, 0.4, 0.2, 1, -1, 3);
		PlaySoundAtEntity("guiding_rod03_1", "13_press_done.snt", "guiding_rod03_1", 0.1f, true);
		//FadeRadialBlurTo(0.01, 0.03f);	
	}
	if(asTimer == "leftDoor3")
	{	FadeRadialBlurTo(0.01, 0.03f);
		StartScreenShake(0.05, 2, 1.5f, 2.5f);	
		//PlayGuiSound("specialsound.ogg", 20);	
		PlayGuiSound("24_rock2.ogg", 20);
		//SetEntityPlayerInteractCallback("safety_normal_vert_2", "transitionDreamFallSequence", false);
		SetLocalVarInt("surfaceGate", 1);
		}
	if(asTimer == "albertClip1"){
		SetSwingDoorDisableAutoClose("castle_1", true);		for(int i=1; i<=50; i++)	AddTimer("castle_1", i * 0.05f, "force");	
		FadeOut(5);
		SetPlayerMoveSpeedMul(0);
		MovePlayerHeadPos(0, 0, 2, 20.0f, 20.0f);	FadePlayerFOVMulTo(1.2f, 1);
		}
	
	if(asTimer == "albertClip2")
	{	FadePlayerFOVMulTo(1, 1);		
		MovePlayerHeadPos(0, 0, 0, 1, 1);	FadePlayerFOVMulTo(1, 1);	ChangeMap("lair.map", "PlayerStartArea_1", "", "");
	}
	if(asTimer == "introdutionMusic")	PlayMusic("thedoom.ogg", false, 1, 20, 0, false);
	if(asTimer == "introdutionMusicE")	StopMusic(15, 0);
	if(asTimer == "interactDoor1")	SetEntityPlayerInteractCallback("safety_large_vert_1", "PlayerInteractDoor1", true);
	if(asTimer == "interactDoor2")	SetEntityPlayerInteractCallback("safety_large_vert_2", "PlayerInteractDoor2", true);
	if(asTimer == "interactDoor3")	SetEntityPlayerInteractCallback("safety_large_vert_3", "PlayerInteractDoor3", true);
	if(asTimer == "surfaceEvent01")	PlaySoundAtEntity("", "close_gate_low", "Player", 0, true);
	if(asTimer == "surfaceEvent02")	{	PlaySoundAtEntity("", "close_gate", "Player", 0, true);	StartScreenShake(0.002f, 0, 0, 4);	}
	if(asTimer == "surfaceEvent03")	FadePlayerFOVMulTo(1.2, 1.0f/20.0f);
	if(asTimer == "surfaceEvent04")	FadePlayerAspectMulTo(1.25, 0.5f/20.0f);
	if(asTimer == "surfaceEvent05")	FadeRadialBlurTo(0.09, 0.003f);
	if(asTimer == "surfaceEvent06")	FadePlayerRollTo(10, 1.1f, 1);
	if(asTimer == "surfaceEvent07")	MovePlayerHeadPos(0, -0.2f, 0, 10, 1);
	if(asTimer == "surfaceEvent08"){	MovePlayerHeadPos(0, -1.5f, 0, 50, 7);		FadePlayerRollTo(-85, 40, 80);	PlayGuiSound("player_bodyfall", 10);	SetPlayerMoveSpeedMul(0);	}
}

void force(string &in door_name)	{	AddPropForce(door_name, 0, 0, -100, "world");		}

void transitionDreamFallSequence(string &in asParent, string &in asChild, int alState){
	AddTimer("clip1", 0, "dreamfallTimer");
	AddTimer("clip2", 3, "dreamfallTimer");
	AddTimer("clip3", 8, "dreamfallTimer");
}

void dreamfallTimer(string &in asTimer){
	if(asTimer == "clip1"){
		PlaySoundAtEntity("", ".snt", "SoundArea01", 0, true);
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0);
	}
	if(asTimer == "clip2"){		FadeOut(0.4f);	SetPlayerActive(false);	}
	if(asTimer == "clip3"){		ChangeMap("freefall.map", "PlayerStartArea_1", "", "");	}
}

void ActionGlobalVarInt(string &in entity)
{		//SetGlobalVarInt("PassNotePuzzle", 1);	
		AddGlobalVarInt("MausoleumObjectives",1);	
}
void freenote(string &in asParent, string &in asChild, int alState)
{		SetEntityActive("note_letter_1", false);
		SetEntityActive("note_letter_2", true);
}
void Wonderlight(string &in asTimer)
{		AddTimer("", 20, "WonderlightEnd");
		FadeLightTo("WonderLight", 0.9f, 0.7f, 0.2f, 1.0f, -1, 15);
		FadeLightTo("PointLight_5", 0.0f, 0.0f, 0.0f, 0.0f, -1, 15);}
void WonderlightEnd(string &in asTimer)
{		AddTimer("", 20, "Wonderlight");
		FadeLightTo("WonderLight", 0.0f, 0.0f, 0.0f, 0.0f, -1, 15);
		FadeLightTo("PointLight_5", 0.1f, 0.1f, 0.4f, 0.5f, -1, 15);}

		
		
//PUZZLE - CRYSTAL UNIT
void AttachBOX1(string &in asArea, string &in asBody)
{	AddTimer("Area1", 1, "AttachBOXTimer");
	AddTimer("westStage1", 1, "crystalStagesTimer");
	AddTimer("westStage2", 6, "crystalStagesTimer");
	AddTimer("stage", 9, "crystalStagesTimer");
	SetEntityActive("block_box_4", true);	
	PlaySoundAtEntity("rockM", "stoneclap02", "Player", 0, true);
	//StageAnimate();
}
void AttachBOX2(string &in asArea, string &in asBody)
{	AddTimer("Area2", 1, "AttachBOXTimer");
	AddTimer("SouthStage1", 1, "crystalStagesTimer");
	AddTimer("SouthStage2", 6, "crystalStagesTimer");
	AddTimer("stage", 9, "crystalStagesTimer");
	SetEntityActive("block_box_1", true);	
	PlaySoundAtEntity("rockM", "stoneclap02", "Player", 0, true);
	//StageAnimate();
}
void AttachBOX3(string &in asArea, string &in asBody)
{	AddTimer("Area3", 1, "AttachBOXTimer");
	AddTimer("northStage1", 1, "crystalStagesTimer");
	AddTimer("northStage2", 6, "crystalStagesTimer");
	AddTimer("stage", 9, "crystalStagesTimer");
	SetEntityActive("block_box_2", true);
	PlaySoundAtEntity("rockM", "stoneclap02", "Player", 0, true);
	//StageAnimate();
}
void AttachBOX4(string &in asArea, string &in asBody)
{	AddTimer("Area4", 1, "AttachBOXTimer");
	AddTimer("eastStage1", 1, "crystalStagesTimer");
	AddTimer("eastStage2", 6, "crystalStagesTimer");
	AddTimer("stage", 9, "crystalStagesTimer");
	SetEntityActive("block_box_3", true);
	PlaySoundAtEntity("rockM", "stoneclap02", "Player", 0, true);
	//StageAnimate();
}
	
void crystalStagesTimer(string &in asTimer)
{		
if(asTimer == "SouthStage1"){	
	FadeLightTo("BoxLight_4", 1, 1, 2, 2, -1, 0.5f);
	FadeLightTo("Blue_4", 1, 1, 2, 2, -1, 0.5f);	}
if(asTimer == "SouthStage2"){	
	FadeLightTo("PointLight_76", 0.1f, 0.4f, 0.7f, 0, -1, 5);
	FadeLightTo("barrLight_1", 2, 2, 4, 4, -1, 5);
	}		
if(asTimer == "westStage1"){	
	FadeLightTo("BoxLight_3", 1, 1, 2, 2, -1, 0.5f);
	FadeLightTo("Blue_3", 1, 1, 2, 2, -1, 0.5f);	}
if(asTimer == "westStage2"){	
	FadeLightTo("PointLight_77", 0.1f, 0.4f, 0.7f, 0, -1, 5);
	FadeLightTo("barrLight_4", 2, 2, 4, 4, -1, 5);
	}		
if(asTimer == "northStage1"){	
	FadeLightTo("BoxLight_5", 1, 1, 2, 2, -1, 0.5f);
	FadeLightTo("Blue_5", 1, 1, 2, 2, -1, 0.5f);	}
if(asTimer == "northStage2"){	
	FadeLightTo("PointLight_78", 0.1f, 0.4f, 0.7f, 0, -1, 5);
	FadeLightTo("barrLight_2", 2, 2, 4, 4, -1, 5);
	}		
if(asTimer == "eastStage1"){	
	FadeLightTo("BoxLight_2", 1, 1, 2, 2, -1, 0.5f);
	FadeLightTo("Blue_2", 1, 1, 2, 2, -1, 0.5f);	}
if(asTimer == "eastStage2"){	
	FadeLightTo("PointLight_79", 0.1f, 0.4f, 0.7f, 0, -1, 5);
	FadeLightTo("barrLight_3", 2, 2, 4, 4, -1, 5);
	}
if(asTimer == "stage")	{
	GiveSanityDamage(0, true);
	StopSound("rumble", 1);
	PlayGuiSound("28_done.snt", 2.0f);
	AddGlobalVarInt("crystalStages", 1);
	
	if(GetGlobalVarInt("crystalStages") == 1){
	for(int i = 0; i < 13; i++) {	FadeLightTo("SpotLight02_"+i, 1.4, 1.6, 2, 2, -1, 2.0f);}	
	for(int i = 0; i < 5; i++)	{	FadeLightTo("pointlight02_"+i, 0.3, 0.4, 0.5, 1, -1, 2.0f);}
	PlaySoundAtEntity("lightWallAmb", "03_orb_loop.snt", "ParticleArea01_5", 20.0f, true);
		PlayMusic("29_amb.ogg", true, 1.0f, 120.0f, 1, true);
	}
	if(GetGlobalVarInt("crystalStages") == 2)
	{	for (int i = 0; i < 13; i++)	{	FadeLightTo("CrossLight_"+i, 2, 2, 2, 2, -1, 2.0f);	}
		for (int i = 0; i < 5; i++)		{	FadeLightTo("CrossPointLight_"+i, 0.3, 0.6, 0.6, 1, -1, 2.0f);}
		FadeLightTo("StageBoxLight_1", 0.8, 0.9, 1, 1, -1, 2.0f);
		
		//PlayMusic("stage1.ogg", false, 1.0f, 1.0f, 1, true);
		//AddTimer("ambMusic1", 19, "crytalUnitTimer");
		
	}
	if(GetGlobalVarInt("crystalStages") == 3)
	{	FadeLightTo("StageBoxLight_2", 2, 2, 2, 2, -1, 4.0f);
		FadeLightTo("StageBoxLight_3", 0.5, 0.5, 0.5, 0.5, -1, 4.0f);
		FadeLightTo("StageBoxLight_4", 1, 1, 1, 1, -1, 4.0f);
		FadeLightTo("PointLight_57", 4, 4, 4, 4, -1, 2.0f);
		for (int i = 0; i < 6; i++){	FadeLightTo("BeamSpotLight_"+i, 4, 4, 4, 4, -1, 4.0f);}
		AddEntityCollideCallback("Player", "AmbienceArea_1", "LightAmb", false, 0);
		
		//PlayMusic("stage2.ogg", false, 1.0f, 1.0f, 3, true);
		//AddTimer("ambMusic2", 20, "crytalUnitTimer");
		PlayMusic("29_amb02.ogg", true, 1.0f, 25.0f, 1, true);
	}
	if(GetGlobalVarInt("crystalStages") == 4)
	{	AddTimer("scene1", 3, "crytalUnitTimer");
		AddTimer("scene2", 9, "crytalUnitTimer");
		AddTimer("scene3", 13, "crytalUnitTimer");
		AddTimer("scene4", 16, "crytalUnitTimer");
		AddTimer("scene5", 20, "crytalUnitTimer");
		RemoveEntityCollideCallback("Player", "AmbienceArea_1");
		RemoveTimer("ScreenShake");
		
		//PlayMusic("stage3.ogg", false, 1.0f, 1.0f, 5, true);
		PlayMusic("04_puzzle_acid.ogg", false, 2, 3.0f, 1, false);
		AddTimer("ambMusic3", 20, "crytalUnitTimer");
		//AddTimer("stopMusic", 125, "crytalUnitTimer");
	}
}

}
void LightAmb(string &in asParent, string &in asChild, int alState)
{	if(alState == 1){
		AddTimer("ScreenShake", 0, "ScreenShake");
		PlaySoundAtEntity("windAmb", "29_wind", "Player", 10.0f, true);
}
	else
{		RemoveTimer("ScreenShake");
		FadeImageTrailTo(0.0, 1);
		StopSound("windAmb", 10.0f);
}
	
}

void ScreenShake(string &in asTimer)
{	StartScreenShake(0.005, 1, 1, 1);
	FadeImageTrailTo(1.1, 2);
	AddTimer("ScreenShake", 2, "ScreenShake");
}
void StageAnimate()
{	StartScreenShake(0.04, 0, 3, 0);
	PlaySoundAtEntity("rumble", "general_rock_rumble.snt", "Player", 3, false);
}
void crytalUnitTimer(string &in asTimer)
{	if(asTimer == "scene1")
	{	StartScreenShake(0.04, 5, 5, 5);
		FadeRadialBlurTo(0.02, 10);
		FadeLightTo("StageBoxLight_3", 2, 2, 2, 2, -1, 10.0f);
		SetPlayerMoveSpeedMul(0.5f);
	}
	if(asTimer == "scene2")
	{	StartEffectFlash(3, 2, 3);
		FadeLightTo("PointLight_80", 0.2f, 0.6f, 1.8f, 3, -1, 1);	
	}
	if(asTimer == "ambMusic1")
	{	PlayMusic("stage1amb.ogg", true, 1.0f, 1.0f, 2, true);
	}
	if(asTimer == "scene3")
	{	for(int i = 0; i < 5; i++)	{	FadeLightTo("StageBoxLight_"+i, 0, 0, 0, 0, -1, 0);}
		for(int i = 0; i < 6; i++)	{	FadeLightTo("BeamSpotLight_"+i, 0, 0, 0, 0, -1, 0);}
		for(int i = 0; i < 5; i++)	{	FadeLightTo("CrossPointLight_"+i, 0, 0, 0, 0, -1, 0);}
		for(int i = 0; i < 13; i++)	{	FadeLightTo("CrossLight_"+i, 0, 0, 0, 0, -1, 0);}
		for(int i = 0; i < 13; i++)	{	FadeLightTo("SpotLight02_"+i, 0, 0, 0, 0, -1, 0);}
		for(int i = 0; i < 5; i++)	{	FadeLightTo("pointlight02_"+i, 0, 0, 0, 0, -1, 0);}
		for(int i = 0; i < 5; i++){	CreateParticleSystemAtEntity("", "ps_dust_push_15.ps", "ParticleArea01_"+i, true);}
		//CreateParticleSystemAtEntity("", "ps_dust_whirl_large.ps", "ParticleArea01_5", true);
		CreateParticleSystemAtEntityExt("", "ps_dust_whirl_large.ps", "ParticleArea01_5", true,	0.2f, 0.6f, 1.3f, 2.4f, false, 5, 1, 1, 6);
		FadeLightTo("PointLight_80", 0, 0, 0, 0, -1, 45);
		FadeRadialBlurTo(0, 1);
		FadeLightTo("PointLight_57", 0, 0, 0, 0, -1, 0);
		FadeLightTo("PointLight_59", 0.2, 0.2, 0.4, 1, -1, 0);
		FadeLightTo("PointLight_61", 0.8, 0.8, 1, 1, -1, 0);
		FadeLightTo("PointLight_62", 0.5, 0.6, 1, 1, -1, 0);
		FadeLightTo("PointLight_63", 1, 1, 1, 1, -1, 0);
		FadeLightTo("StageBoxLight_4", 0, 0, 0, 0, -1, 0);
		FadeLightTo("StageBoxLight_5", 3, 3, 3, 3, -1, 0);
		FadeLightTo("StageBoxLight_6", 1, 1, 1, 1, -1, 0);
		FadeLightTo("StageBoxLight_7", 0.6, 0.9, 1, 1, -1, 0);
		FadeLightTo("StageBoxLight_8", 1, 1, 1, 1, -1, 0);
		SetEntityActive("crystalUnit", true);
		StopSound("lightWallAmb", 5);
		StopSound("windAmb", 10.0f);
		SetPlayerMoveSpeedMul(1.0f);
	}
	if(asTimer == "ambMusic2")
	{	PlayMusic("stage2amb.ogg", true, 1.0f, 1.0f, 4, true);
	}
	if(asTimer == "ambMusic3")
	{	PlayMusic("amb_extra01.ogg", true, 0.8f, 10.0f, 0, true);
	}
	if(asTimer == "scene4"){
		FadeLightTo("StageBoxLight_6", 0, 0, 0, 0, -1, 5.0f);
		}
	if(asTimer == "scene5"){
		FadeLightTo("StageBoxLight_7", 0, 0, 0, 0, -1, 10.0f);
		}
	if(asTimer == "stopMusic"){
		StopMusic(2, 0);
		StopMusic(2, 1);
		StopMusic(2, 2);
		StopMusic(2, 3);
		StopMusic(2, 4);
		StopMusic(2, 5);
		}
}	

void pickupUnit(string &in asItem)
{	FadeLightTo("PointLight_62", 0, 0, 0, 0, -1, 3.0f);
}

void AttachBOXTimer(string &in asTimer)
{	
		PlayGuiSound("18_touch_rock", 1);
		StopSound("rockM", 0);
	if(asTimer == "Area1"){	
	SetEntityActive("block_box_4", true);	
	SetEntityActive("PressureArea_3", false);
	SetEntityActive("PressureArea_5", false);
	SetEntityActive("PressureArea_9", false);
	SetEntityActive("PressureArea_13", false);}
	if(asTimer == "Area2"){	
	SetEntityActive("block_box_1", true);	
	SetEntityActive("PressureArea_2", false);
	SetEntityActive("PressureArea_6", false);
	SetEntityActive("PressureArea_10", false);
	SetEntityActive("PressureArea_14", false);}
	if(asTimer == "Area3"){	
	SetEntityActive("block_box_2", true);
	SetEntityActive("PressureArea_1", false);
	SetEntityActive("PressureArea_7", false);
	SetEntityActive("PressureArea_11", false);
	SetEntityActive("PressureArea_15", false);}
	if(asTimer == "Area4"){	
	SetEntityActive("block_box_3", true);
	SetEntityActive("PressureArea_4", false);
	SetEntityActive("PressureArea_8", false);
	SetEntityActive("PressureArea_12", false);
	SetEntityActive("PressureArea_16", false);}
}	

void FinalGateSequence(string &in asTimer){
	if(asTimer == "clip1"){
		FadeIn(1.8f);	CreateParticleSystemAtEntity("", "ps_rose_petals_wind.ps", "LookArea01_1", false);	StopPlayerLookAt();		SetPlayerLookSpeedMul(0.4f);
	}
	if(asTimer == "clip2"){			MovePlayerHeadPos(0, 0, 0, 2.0f, 0.1f);		StartPlayerLookAt("LookArea01_2", 1, 1, "");	PlayGuiSound("player_stand", 1);	PlayGuiSound("react_sigh", 1);
									SetPlayerLookSpeedMul(0.7f);		SetPlayerMoveSpeedMul(0.8f);	SetPlayerRunSpeedMul(0.3f);		FadeGlobalSoundVolume(0.5f, 20);	FadePlayerRollTo(0, 10, 10); 
									
	}
	if(asTimer == "clip3"){			StopPlayerLookAt();	}
	if(asTimer == "clip4"){			SetPlayerJumpDisabled(false);	SetPlayerCrouchDisabled(false);	}
	if(asTimer == "clip5"){			FadeLightTo("SpotLight_46", 1, 0.7f, 0.4f, 1, -1, 0.5f);	SetLampLit("hanging_lantern_ceiling_1", true, false);	SetMoveObjectState("safety_large_vert_2", 1.0f);	}
}

void EnterAlbert(string &in asParent, string &in asChild, int alState){
	AddTimer("albertClip1", 0, "TimerList");
	AddTimer("albertClip2", 5, "TimerList");
}

void dialogEnding(string &in asParent, string &in asChild, int alState){
	PlayGuiSound("lvl_conTemple_x.ogg", 1);
	FadeGlobalSoundVolume(0.5f, 5);
}

void shineO(string &in asParent, string &in asChild, int alState){	
	FadeLightTo("BoxLight_6", 0, 0, 0, 0, -1, 3);
	AddTimer("clip5", 6, "FinalGateSequence");
	}

void OnEnter()
{		//if(GetGlobalVarInt("GlobalTemple") == 0){		PlayMusic("22_amb.ogg", true, 1.0f, 0, 0, true);	}
		if(GetGlobalVarInt("GlobalTemple")  == 1)	{		SetEntityActive("castlebase_secret_door_1", false);		FadeOut(0);		SetPlayerMoveSpeedMul(0);		MovePlayerHeadPos(0, -1.4, 0, 2.0f, 0.1f);	StartPlayerLookAt("LookArea01_1", 50, 50, "");		AddEntityCollideCallback("Player", "ScriptArea_6", "movingStone", true, 1);
															SetPlayerJumpDisabled(true);	SetPlayerCrouchDisabled(true);		PlayMusic("dreamfallLeaveOut.ogg", false, 1.0f, 0, 0, false);	FadeGlobalSoundVolume(0, 0);	FadePlayerRollTo(90, 1, 1); 
															AddEntityCollideCallback("Player", "ScriptArea_8", "shineO", true, 1);		FadeLightTo("BoxLight_6", 1, 1, 1, 1, -1, 1);
			AddTimer("clip1", 4, "FinalGateSequence");
			AddTimer("clip2", 8, "FinalGateSequence");
			AddTimer("clip3", 9, "FinalGateSequence");
			AddTimer("clip4", 30, "FinalGateSequence");
			}
		if(GetGlobalVarInt("GlobalTemple") == 2){		
			//AddEntityCollideCallback("Player", "ScriptArea_6", "dialogEnding", true, 1);
			for(int i =2; i<=3; i++) RemoveEntityCollideCallback("Player", "AmbienceArea_"+i);
			
			SetEntityActive("castlebase_secret_door_1", false);
			//SetPlayerMoveSpeedMul(0.9f);
			//SetPlayerRunSpeedMul(0.4f);
		}
		if(GetGlobalVarInt("Insanity")==6){
			SetLampLit("candlestick_floor_7", false, false);
			SetLampLit("candlestick_floor_8", false, false);
			SetLampLit("torch_static01_1", false, false);
			SetLampLit("torch_static01_2", false, false);
		}
		SetMapDisplayNameEntry("sanctum");
		
		
		AutoSave();	
}
void OnLeave()
{	
	StopMusic(5, 0);
}