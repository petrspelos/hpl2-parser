void OnGameStart()
{
	//Random stuff
	AddCombineCallback("", "hand_main", "hand_off", "Clap", false);
	
	//Remove nothing
	AddCombineCallback("", "hand_main", "hand_remove", "NoEquipment", false);
	AddCombineCallback("", "hand_off", "hand_remove", "NoEquipment", false);
	
	//Main hand
	AddCombineCallback("", "hand_main", "crowbar", "AddWeapon_Crowbar", false);
	AddCombineCallback("", "hand_remove", "hand_main_crowbar", "RemoveWeapon_Crowbar", false);
	
	AddCombineCallback("", "hand_main", "copper_tube_and_needle", "AddWeapon_Spear", false);
	AddCombineCallback("", "hand_remove", "hand_main_spear", "RemoveWeapon_Spear", false);
	
	AddCombineCallback("", "hand_main", "ceremony_knife", "AddWeapon_Knife", false);
	AddCombineCallback("", "hand_remove", "hand_main_knife", "RemoveWeapon_Knife", false);
	
	//Off hand
	AddCombineCallback("", "hand_off", "stone_chipper", "AddWeapon_Chipper", false);
	AddCombineCallback("", "hand_remove", "hand_off_chipper", "RemoveWeapon_Chipper", false);
	
	AddCombineCallback("", "hand_off", "orbpiece_indigo", "AddWeapon_Shield", false);
	AddCombineCallback("", "hand_remove", "hand_off_shield", "RemoveWeapon_Shield", false);
	
	AddCombineCallback("", "hand_off", "chemical_container_full", "AddWeapon_Acid", false);
	AddCombineCallback("", "hand_remove", "hand_off_acid", "RemoveWeapon_Acid", false);
	
	//Wrong hand
	AddCombineCallback("", "hand_main", "stone_chipper", "WrongHand", false);
	AddCombineCallback("", "hand_main", "orbpiece_indigo", "WrongHand", false);
	AddCombineCallback("", "hand_main", "chemical_container_full", "WrongHand", false);
	
	AddCombineCallback("", "hand_off", "crowbar", "WrongHand", false);
	AddCombineCallback("", "hand_off", "copper_tube_and_needle", "WrongHand", false);
	AddCombineCallback("", "hand_off", "ceremony_knife", "WrongHand", false);
	
	//Puzzle
	AddCombineCallback("", "chemical_container", "flask01_aqua_regia", "AcidInContainer", false);
	AddCombineCallback("", "chemical_container_half", "chemical_container_epoxy", "AcidCombination", false);
	AddCombineCallback("", "copper_tube", "hollow_needle", "CreateSpear", false);
}

//Puzzle
void AcidInContainer(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("chemical_container_half", "chemical_container_half", "chemical_container_half", "chemical_container_half.tga", 1);
	PlayGuiSound("16_fill_oil", 1.0f);
}

void AcidCombination(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("chemical_container_full", "chemical_container_full", "chemical_container_full", "chemical_container_full.tga", 1);
	PlayGuiSound("16_fill_oil", 1.0f);
}

void CreateSpear(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("copper_tube_and_needle", "copper_tube_and_needle", "copper_tube_and_needle", "copper_tube_and_needle.tga", 1);
	PlayGuiSound("puzzle_place_jar", 1.0f);
}

//Crowbar
void AddWeapon_Crowbar(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("hand_main_crowbar", "hand_main_crowbar", "crowbar", "hand_main_crowbar.tga", 1);
	PlayGuiSound("pick_pipe", 1.0f);
}

void RemoveWeapon_Crowbar(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemB);
	GiveMainHand();
	GiveItem("crowbar", "crowbar", "crowbar", "crowbar.tga", 1);
	PlayGuiSound("pick_orb_piece", 1.0f);
}

//Spear
void AddWeapon_Spear(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("hand_main_spear", "hand_main_spear", "copper_tube_and_needle", "hand_main_spear.tga", 1);
	PlayGuiSound("pick_knife", 1.0f);
}

void RemoveWeapon_Spear(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemB);
	GiveMainHand();
	GiveItem("copper_tube_and_needle", "copper_tube_and_needle", "copper_tube_and_needle", "copper_tube_and_needle.tga", 1);
	PlayGuiSound("pick_orb_piece", 1.0f);
}

//Knife
void AddWeapon_Knife(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("hand_main_knife", "hand_main_knife", "ceremony_knife", "hand_main_knife.tga", 1);
	PlayGuiSound("pick_knife", 1.0f);
}

void RemoveWeapon_Knife(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemB);
	GiveMainHand();
	GiveItem("ceremony_knife", "ceremony_knife", "ceremony_knife", "ceremony_knife.tga", 1);
	PlayGuiSound("pick_orb_piece", 1.0f);
}

//Chipper
void AddWeapon_Chipper(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("hand_off_chipper", "hand_off_chipper", "stone_chipper", "hand_off_chipper.tga", 1);
	PlayGuiSound("pick_pipe", 1.0f);
}

void RemoveWeapon_Chipper(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemB);
	GiveOffHand();
	GiveItem("stone_chipper", "stone_chipper", "stone_chipper", "stone_chipper.tga", 1);
	PlayGuiSound("pick_orb_piece", 1.0f);
}

//Shield
void AddWeapon_Shield(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("hand_off_shield", "hand_off_shield", "orbpiece_indigo", "hand_off_shield.tga", 1);
	PlayGuiSound("pick_pipe", 1.0f);
}

void RemoveWeapon_Shield(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemB);
	GiveOffHand();
	GiveItem("orbpiece_indigo", "orbpiece_indigo", "orbpiece_indigo", "orbpiece_indigo.tga", 1);
	PlayGuiSound("pick_orb_piece", 1.0f);
}

//Acid
void AddWeapon_Acid(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemA);
	RemoveItem(asItemB);
	GiveItem("hand_off_acid", "hand_off_acid", "chemical_container_full", "hand_off_acid.tga", 1);
	PlayGuiSound("ui_use_oil", 1.0f);
}

void RemoveWeapon_Acid(string &in asItemA, string &in asItemB)
{
	RemoveItem(asItemB);
	GiveOffHand();
	GiveItem("chemical_container_full", "chemical_container_full", "chemical_container_full", "chemical_container_full.tga", 1);
	PlayGuiSound("pick_orb_piece", 1.0f);
}


//MISC
void Clap(string &in asItemA, string &in asItemB)
{
	PlayGuiSound("clap.ogg", 1.0f);
}

void NoEquipment(string &in asItemA, string &in asItemB)
{
	SetInventoryMessage("Messages", "NoEquipment", 0);
}

void WrongHand(string &in asItemA, string &in asItemB)
{
	if(asItemA == "hand_main") SetInventoryMessage("Messages", "WrongHandOff", 0);
	else if(asItemA == "hand_off") SetInventoryMessage("Messages", "WrongHandMain", 0);
}

void GiveOffHand()
{
	GiveItem("hand_off", "hand_off", "hand_off", "hand_off.tga", 1);
}

void GiveMainHand()
{
	GiveItem("hand_main", "hand_main", "hand_main", "hand_main.tga", 1);
}
