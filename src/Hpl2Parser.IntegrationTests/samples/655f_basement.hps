//////////////////////////////////////////////////////////////////////////////////////	
//OnStart
//////////////////////////////////////////////////////////////////////////////////////
void OnStart()
{
	AddEntityCollideCallback("Player", "Opening", "Line", true, 1);
	AddEntityCollideCallback("Player", "GetOut", "GoToFinal", true, 1);
	AddEntityCollideCallback("Player", "AreaFallDeath", "CollideFallDeath", true, 1);
	AddEntityCollideCallback("Player", "AreaPushPlayer", "PushToDoor", true, 1);
	AddEntityCollideCallback("Player", "StartTorture", "Torture", true, 1);
	AddEntityCollideCallback("Player", "CheckpointFall", "WaterCheck", false, 1);
	AddEntityCollideCallback("Player", "Check_p2", "CheckOne", false, 1);
	AddEntityCollideCallback("Player", "Check_p3", "CheckTwo", false, 1);
	for(int i = 1; i <= 100; i++) AddEntityCollideCallback("RockFall_"+i, "RocksNonLethal", "NonLethalization", false, 1);
	SetEntityPlayerInteractCallback("Piece_1", "Memento", true);
	SetEntityPlayerInteractCallback("Piece_3", "OrbLightOff", true);
	SetEntityPlayerInteractCallback("Piece_5", "OrbLightOff2", true);
	SetEntityPlayerInteractCallback("Knife", "MoreTalk", true);
	SetLightVisible("KnifeLight", false);
	AddTimer("", 1, "Circle");	
	}
	
//////////////////////////////////////////////////////////////////////////////////////	
//Checkpoint
//////////////////////////////////////////////////////////////////////////////////////

void WaterCheck(string &in asParent, string &in asChild, int alState)
{
	CheckPoint("", "BeforeRocksPosition", "", "DeathHint", "Entry1");
}

//////////////////////////////////////////////////////////////////////////////////////	
//Player Effects
//////////////////////////////////////////////////////////////////////////////////////

void Stop(string &in asTimer)
{
	SetPlayerMoveSpeedMul(0);
	SetPlayerRunSpeedMul(0);
	AddTimer("", 0.1f, "Start");
}

void Start(string &in asTimer)
{
	SetPlayerMoveSpeedMul(0.9);
	SetPlayerRunSpeedMul(1);
	if(GetPlayerYSpeed() <= 0.9)
	{
		AddTimer("", 0.5f, "Stop");
	}
	
	if(GetPlayerYSpeed() == 1)
	{
		AddTimer("", 0.3f, "Stop");
	}
}

//////////////////////////////////////////////////////////////////////////////////////	
//Opening Line
//////////////////////////////////////////////////////////////////////////////////////

void Line(string &in aParent, string &in asChild, int alState)
{
	SetPlayerMoveSpeedMul(0);
	SetPlayerRunSpeedMul(0);
	SetPlayerJumpForceMul(0);
	AddEffectVoice("basement_start.ogg" ,"", "Dialogue", "StartBoss", false, "", 0, 0);
	SetEffectVoiceOverCallback("Move");
}

void Move()
{
	PlayMusic("Track19.ogg", true, 2, 1, 1, true);
	SetPlayerMoveSpeedMul(1);
	SetPlayerRunSpeedMul(1);
	SetPlayerJumpForceMul(1);	
}

//////////////////////////////////////////////////////////////////////////////////////	
//Check
//////////////////////////////////////////////////////////////////////////////////////

void CheckOne(string &in aParent, string &in asChild, int alState)
{
	SetSwingDoorLocked("Part3", false, true);
	if(HasItem("Piece_2") == true)
	{
		PlayMusic("Track23.ogg", true, 2, 1, 1, true);
		SetLevelDoorLocked("p2", true);
	}
}

void OnEnter()
{
		if(HasItem("Piece_4") == true)
	{
		PlayMusic("Track23.ogg", false, 2, 1, 1, true);
		SetLevelDoorLocked("p3", true);
		SetSwingDoorLocked("Part4", false, true);
		SetPlayerMoveSpeedMul(0.9);
		SetPlayerRunSpeedMul(1);
		if(GetPlayerYSpeed() <= 0.9)
		{
			AddTimer("", 0.5f, "Stop");
		}
		if(GetPlayerYSpeed() == 1)
		{
			AddTimer("", 0.3f, "Stop");
		}
}

if(HasItem("Piece_6") == true)
	{
		CheckPoint ("", "PlayerStartArea_4", "Reset", "DeathHint", "Run");
		PlayMusic("Track23.ogg", true, 2, 1, 1, true);
		SetLevelDoorLocked("p4", true);
		SetSwingDoorLocked("DoorUp", false, true);
		AddEntityCollideCallback("Player", "HideSE", "GetChasedSon", true, 1);
		AddEntityCollideCallback("SEFinalSight", "CaveInAndHitSE", "DestroyBuildDestroy", true, 1);
		AddEntityCollideCallback("Player", "IntenseCaveIn", "CaveInThing", true, 1);
		AddTimer("", 3, "StartRockFall");
		SetPlayerMoveSpeedMul(0.9);
		SetPlayerRunSpeedMul(1);
		if(GetPlayerYSpeed() <= 0.9)
		{
			AddTimer("", 0.5f, "Stop");
		}
		if(GetPlayerYSpeed() == 1)
		{
			AddTimer("", 0.3f, "Stop");
		}
	}
	AutoSave();
}
//////////////////////////////////////////////////////////////////////////////////////	
//Music
//////////////////////////////////////////////////////////////////////////////////////

void BringBackMusic(string &in asTimer)
{
	PlayMusic("Track19.ogg", true, 2, 1, 1, true);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Circle Monster
//////////////////////////////////////////////////////////////////////////////////////

void Circle(string &in asTimer)
{
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_1", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_2", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_3", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_4", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_5", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_6", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_7", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_8", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_9", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_10", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_11", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_12", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_13", 0.001f, "");
	AddEnemyPatrolNode("WalkAround", "PathNodeArea_14", 0.001f, "");
}

//////////////////////////////////////////////////////////////////////////////////////	
//Torture
//////////////////////////////////////////////////////////////////////////////////////

void Torture(string &in asParent, string &in asChild, int alState)
{
	StopMusic(0,1);
	SetEntityActive("TortureRoom", true);
	AddEffectVoice("kill_1.ogg" ,"", "Dialogue", "Torture1", false, "", 0, 0);
	AddEffectVoice("tv_1.ogg" ,"", "Dialogue", "Torture2", true, "VictimVoice", 0, 5);
	AddEffectVoice("influence_1.ogg" ,"", "Dialogue", "Torture3", false, "", 0, 0);
	AddEffectVoice("kill_3.ogg" ,"", "Dialogue", "Torture4", false, "", 0, 0);
	SetEffectVoiceOverCallback("DoIt");
}

void DoIt()
{
	PlayMusic("torture_doit.ogg", false, 10, 1, 1, false);
	SetMessage("Messages", "Doit", 10);
	AddEffectVoice("kill_5.ogg" ,"", "", "", false, "", 0, 0);
	SetLightVisible("KnifeLight", true);
	SetEntityActive("Knife", true);
}

void MoreTalk(string &in item)
{
	SetLightVisible("KnifeLight", false);
	AddEffectVoice("tv_2.ogg" ,"", "Dialogue", "Torture5", true, "VictimVoice", 0, 5);
	AddEffectVoice("kill_7.ogg" ,"", "Dialogue", "Torture6", false, "", 0, 0);
	SetEffectVoiceOverCallback("Kill");
}

void Kill()
{
	SetEntityActive("InteractVictimKill", true);
	AddUseItemCallback("", "Knife", "InteractVictimKill", "KillVictim", false);
}

void KillVictim(string &in asItem, string &in asEntity)
{
	FadeOut(1);
	RemoveItem(asItem);
	AddEffectVoice("tv_3.ogg" ,"", "", "", true, "VictimVoice", 0, 5);
	SetEffectVoiceOverCallback("Finished");
}

void Finished()
{
	SetEntityActive("Piece_1", true);
	SetEntityActive("Prisoner", false);
	SetEntityActive("Torso", true);
	SetEntityActive("Blood_1", true);
	SetEntityActive("Blood_2", true);
	SetEntityActive("Blood_3", true);
	SetEntityActive("Leg_1", true);
	SetEntityActive("Leg_2", true);
	FadeIn(1);
	AddTimer("", 5, "BringBackMusic");
}

//////////////////////////////////////////////////////////////////////////////////////	
//Doors
//////////////////////////////////////////////////////////////////////////////////////

void UnlockRocks(string &in asEntity)
{
	AddEntityCollideCallback("Player", "BeginRockFall", "RockFall", false, 1);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Orbs
//////////////////////////////////////////////////////////////////////////////////////

void Memento(string &in item)
{
	AddQuest("Orbs", "Orb");
	SetEntityActive("TortureRoom", false);
	SetLevelDoorLocked("p2", false);
	SetEntityPlayerInteractCallback("p2", "UnlockDoor", true);
}

void OrbLightOff(string &in item)
{
	SetLightVisible("OrbLight", false);
	SetLevelDoorLocked("p3", false);
}

void OrbLightOff2(string &in item)
{
	SetLightVisible("OrbLight_2", false);
	SetLevelDoorLocked("p4", false);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Push Player
//////////////////////////////////////////////////////////////////////////////////////

void PushToDoor(string &in asParent, string &in asChild, int alState)
{
	AddPlayerBodyForce(-1000, 0, 0, false);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Death
//////////////////////////////////////////////////////////////////////////////////////

void CollideFallDeath(string &in asParent, string &in asChild, int alState)
{
	AddTimer("death1", 0.5f, "TimerFallDeath");	
	FadeOut(2);
	DisableDeathStartSound();
	AddPlayerHealth(-200);
	PlayMusic("neck_snap.ogg", false, 10, 1, 1, false);
	PlaySoundAtEntity("pain", "player_falldamage_max", "Player", 0, false);
	PlaySoundAtEntity("bump2", "player_bodyfall", "Player", 0, false);
}

void TimerFallDeath(string &in asTimer)
{	
	if(asTimer == "death1")
	{
		PlaySoundAtEntity("bump1", "player_bodyfall", "Player", 0, false);
		return;
	}	
}	

//////////////////////////////////////////////////////////////////////////////////////	
//Rocks Death
//////////////////////////////////////////////////////////////////////////////////////

void StartRockFall(string &in asTimer)
{
	PlayMusic("Track24.ogg", true, 2, 1, 1, true);
	for(int i = 1; i <= 100; i++) SetEntityActive("RockFall_"+i, true);
	StartScreenShake(0.01, 2, 0, 0);
	AddTimer("shake", 2, "Shake");
	CheckPoint ("", "PlayerStartArea_4", "Reset", "DeathHint", "RunFast");
	AddTimer("fall1", 3, "StartRockFall1");
}

void StartFall1(string &in asTimer)
{
	SetEntityActive("InvisibleBox_Part4_1", false);
	AddTimer("fall2", 3, "StartFall2");
}

void StartFall2(string &in asTimer)
{
	SetEntityActive("InvisibleBox_Part4_2", false);
	AddTimer("fall3", 3, "StartFall3");
}

void StartFall3(string &in asTimer)
{
	SetEntityActive("InvisibleBox_Part4_3", false);
	AddTimer("fall4", 5, "StartFall4");
}

void StartFall4(string &in asTimer)
{
	SetEntityActive("InvisibleBox_1", false);
	AddTimer("fall5", 3, "StartFall5");
}

void StartFall5(string &in asTimer)
{
	SetEntityActive("InvisibleBox_2", false);
	AddTimer("fall6", 2, "StartFall6");
}

void StartFall6(string &in asTimer)
{
	SetEntityActive("InvisibleBox_3", false);
	AddTimer("fall7", 2, "StartFall7");
}

void StartFall7(string &in asTimer)
{
	SetEntityActive("InvisibleBox_4", false);
	AddTimer("fall8", 2, "StartFall8");
}

void StartFall8(string &in asTimer)
{
	SetEntityActive("InvisibleBox_5", false);
	AddTimer("fall9", 2, "StartFall9");
}

void StartFall9(string &in asTimer)
{
	SetEntityActive("InvisibleBox_6", false);
	AddTimer("fall10", 2, "StartFall10");
}

void StartFall10(string &in asTimer)
{
	SetEntityActive("InvisibleBox_7", false);
	AddTimer("fall11", 2, "StartFall11");
}

void StartFall11(string &in asTimer)
{
	SetEntityActive("InvisibleBox_8", false);
	AddTimer("fall12", 2, "StartFall12");
}

void StartFall12(string &in asTimer)
{
	SetEntityActive("InvisibleBox_9", false);
	AddTimer("fall13", 2, "StartFall13");
}

void StartFall13(string &in asTimer)
{
	SetEntityActive("InvisibleBox_10", false);
	AddTimer("fall14", 2, "StartFall14");
}

void StartFall14(string &in asTimer)
{
	SetEntityActive("InvisibleBox_11", false);
	AddTimer("fall15", 2, "StartFall15");
}

void StartFall15(string &in asTimer)
{
	SetEntityActive("InvisibleBox_12", false);
	AddTimer("fall16", 2, "StartFall16");
}

void StartFall16(string &in asTimer)
{
	SetEntityActive("InvisibleBox_13", false);
}

void Shake(string &in asTimer)
{
	StartScreenShake(0.01, 2, 0, 0);
	AddTimer("shake", 2, "Shake");
}

void NonLethalization(string &in asParent, string &in asChild, int alState)
{
	RemoveEntityCollideCallback("Player", asChild);
}

//////////////////////////////////////////////////////////////////////////////////////	
//Checkpoint Death
//////////////////////////////////////////////////////////////////////////////////////

void Reset(string &in asName, int alCount)
	{
		for(int i = 1; i <= 100; i++) SetEntityActive("RockFall_"+i, false);
		for(int i = 1; i <= 13; i++) SetEntityActive("InvisibleBox_"+i, true);
		for(int i = 1; i <= 3; i++) SetEntityActive("InvisibleBox_Part4_"+i, true);
		AddTimer("", 2, "RestartFall");
	}

void RestartFall(string &in asTimer)
{
	PlayMusic("Track24.ogg", true, 2, 1, 1, true);
	for(int i = 1; i <= 100; i++) SetEntityActive("RockFall_"+i, true);
	StartScreenShake(0.01, 2, 0, 0);
	AddTimer("shake", 2, "Shake");
	AddTimer("fall1", 3, "StartRockFall1");
}	

//////////////////////////////////////////////////////////////////////////
//Intense Chase
//////////////////////////////////////////////////////////////////////////

void GetChasedSon(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("SavePlayer", true);
	RemoveTimer("fall1");
	RemoveTimer("fall2");
	RemoveTimer("fall3");
	RemoveTimer("fall4");
	RemoveTimer("fall5");
	RemoveTimer("fall6");
	RemoveTimer("fall7");
	RemoveTimer("fall8");
	RemoveTimer("fall9");
	RemoveTimer("fall10");
	RemoveTimer("fall11");
	RemoveTimer("fall12");
	RemoveTimer("fall13");
	RemoveTimer("fall14");
	RemoveTimer("fall15");
	RemoveTimer("fall16");
	SetEntityActive("SEFinalSight", true);
	ShowEnemyPlayerPosition("SEFinalSight");
}

void DestroyBuildDestroy(string &in asParent, string &in asChild, int alState)
{
	for(int i = 1; i <= 20; i++) SetEntityActive("rock_debris_brown01_"+i, true);
	PlaySoundAtEntity("explosion", "explosion_rock_large.snt", "AreaNoiseEffect", 0, false);
	SetEntityActive("SEFinalSight", false);
	CreateParticleSystemAtEntity("dust1", "ps_area_fog_sewer.ps", "AreaParticleEffect_1", true);
	CreateParticleSystemAtEntity("dust2", "ps_area_fog_sewer.ps", "AreaParticleEffect_2", true);
	CreateParticleSystemAtEntity("dust3", "ps_area_fog_sewer.ps", "AreaParticleEffect_3", true);
}

void CaveInThing(string &in asParent, string &in asChild, int alState)
{
	for(int i = 1; i <= 15; i++) SetEntityActive("rock_large01_push_"+i, true);
	PlaySoundAtEntity("explosion", "explosion_rock_large.snt", "Player", 0, false);
}

//////////////////////////////////////////////////////////////////////////
//End Map
//////////////////////////////////////////////////////////////////////////

void GoToFinal(string &in asParent, string &in asChild, int alState)
{
	FadeOut(1);
    AddTimer("", 1, "TimerTransition");
    }
     
void TimerTransition(string &in asTimer)
{  
    ChangeMap("Elevator_2", "PlayerStartArea_10", "", "");
    }

//////////////////////////////////////////////////////////////////////////
//OnLeave
//////////////////////////////////////////////////////////////////////////
void OnLeave()
{
int load = RandInt(0, 19);
if(load == 15) SetupLoadScreen("Loading", "LoadScreen1", 0,"loading_screen1.jpg");
if(load == 1) SetupLoadScreen("Loading", "LoadScreen2", 0, "loading_screen2.jpg");
if(load == 2) SetupLoadScreen("Loading", "LoadScreen3", 0, "loading_screen3.jpg");
if(load == 3) SetupLoadScreen("Loading", "LoadScreen4", 0,"loading_screen4.jpg");
if(load == 4) SetupLoadScreen("Loading", "LoadScreen5", 0,"loading_screen5.jpg");
if(load == 5) SetupLoadScreen("Loading", "LoadScreen6", 0,"loading_screen6.jpg");
if(load == 6) SetupLoadScreen("Loading", "LoadScreen7", 0,"loading_screen7.jpg");
if(load == 7) SetupLoadScreen("Loading", "LoadScreen8", 0,"loading_screen8.jpg");
if(load == 8) SetupLoadScreen("Loading", "LoadScreen9", 0,"loading_screen9.jpg");
if(load == 9) SetupLoadScreen("Loading", "LoadScreen10", 0,"loading_screen10.jpg");
if(load == 10) SetupLoadScreen("Loading", "LoadScreen11", 0,"loading_screen11.jpg");
if(load == 11) SetupLoadScreen("Loading", "LoadScreen12", 0,"loading_screen12.jpg");
if(load == 12) SetupLoadScreen("Loading", "LoadScreen13", 0,"loading_screen13.jpg");
if(load == 13) SetupLoadScreen("Loading", "LoadScreen14", 0,"loading_screen14.jpg");
if(load == 14) SetupLoadScreen("Loading", "LoadScreen15", 0,"loading_screen15.jpg");
if(load == 0) SetupLoadScreen("Loading", "LoadScreen16", 0,"loading_screen16.jpg");
if(load == 16) SetupLoadScreen("Loading", "LoadScreen17", 0,"loading_screen17.jpg");
if(load == 17) SetupLoadScreen("Loading", "LoadScreen18", 0,"loading_screen18.jpg");
if(load == 18) SetupLoadScreen("Loading", "LoadScreen19", 0,"loading_screen19.jpg");
if(load == 19) SetupLoadScreen("Loading", "LoadScreen20", 0,"loading_screen20.jpg");
CompleteQuest("Orbs", "Orb");
}