void OnStart()
{
SetEntityPlayerInteractCallback("HammerDownPipe", "PipeLoose", false);
AddUseItemCallback("", "Hammer", "HammerDownPipe", "BoomPipeIsBroken", true);
AddUseItemCallback("", "PipeItem", "BoxArea", "PutPipe", true);
AddUseItemCallback("", "Hammer", "PipeHammer", "BreakPlanks", true);
AutoSave();
}



void PlanksInWay(string &in entity)
{
SetMessage("Messages", "planksmessage", 6);
}

void PipeLoose(string &in entity)
{
SetMessage("Messages", "BrokenPipeMessage", 5);
}

void BoomPipeIsBroken(string &in asItem, string &in asEntity)
{
SetEntityActive("WallPipe", true);
SetEntityActive("BrokePipe", false);
SetEntityActive("PipeItem", true);
PlaySoundAtEntity("","20_pipe_reject.snt","Player", 0,false);
SetEntityActive("HammerDownPipe", false);
}

void PutPipe(string &in asItem, string &in asEntity)
{
SetEntityActive("Sewer", true);
RemoveItem(asItem);
PlaySoundAtEntity("","20_pipe_reject.snt","Player", 0,false);
SetEntityActive("PipeHammer", true);
SetEntityActive("BoxArea", false);
}
void BreakPlanks(string &in asItem, string &in asEntity)
{
SetEntityActive("1Plank", false);
SetEntityActive("2Plank", false);
SetEntityActive("BrokenPlank4", true);
SetEntityActive("BrokenPlank1", true);
SetEntityActive("BrokenPlank4_1", true);
SetEntityActive("BrokenPlank3", true);
SetEntityActive("Sewer", false);
PlaySoundAtEntity("","break_wood_metal.snt","Player", 0,false);
GiveSanityBoostSmall();
SetEntityActive("PipeHammer", false);
RemoveItem(asItem);
}










void OnEnter()
{
}

void OnLeave()
{
}