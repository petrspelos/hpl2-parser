

void OnStart()
{
	AddEntityCollideCallback("Player", "ScareArea_Bucket", "BucketScare", true, 1);
	SetPlayerLampOil(9.0f);
	
	if(ScriptDebugOn()) GiveItemFromFile("flashlight", "Flashlight_lantern_dkf.ent");
}

void OnEnter()
{
		 SetMapDisplayNameEntry("TunnelRoad");
		 AutoSave();
		 StartPlayerSpawnPS("null.sps");
		 
		//SetInDarknessEffectsActive(false);
		//SetPlayerSanity(60.0f);
		
		SetUpInsanity();
		PreloadSound("metal_bucket_fall.snt");
		PlayMusic("24_amb2.ogg", true, 1.0f, 1.0f, 1, true);

}

void OnLeave()
{
		StopMusic(1.0f, 1);
}
	
void TurnOffLight(string &in asEntity) //after player picks up the flashlight
{
	SetLightVisible("PointLight_2", false);
	StartPhoneRing("Phone", "Dkf_Tunnel", 7);
}

void SaveGame(string &in asEntity)
{
	AutoSave();
}


void BucketScare(string &in asParent, string &in asChild, int alState)
{
	AddDebugMessage("Collided with scare", false);
	PlaySoundAtEntity("", "metal_bucket_fall.snt", "BucketSource", 0.0f , false);
}

	
//////////////////////SANITY///////////////////////////////////////
///////////////////////////////////////////////////////////////////

void SetUpInsanity()  //Disables insanity events which use Daniel's voice, starts looping timer
{	
	SetInsanitySetEnabled("Ch03", false);
	SetInsanitySetEnabled("Ch02", false);
	SetInsanitySetEnabled("Ch01", false);
	
	AddTimer("SanityTimer", 1.0f, "SanityScript");

}

void SanityScript(string &in asTimer) //looping timer, fixes being unable to use potions when fully sane
{
	if(GetPlayerSanity() == 100.0f) SetPlayerSanity(99.0f);

	AddTimer("SanityTimer", 1.0f, "SanityScript");
}

////////////////////END SANITY/////////////////////////////////////
///////////////////////////////////////////////////////////////////
	
	
//////////////////////FLASHLIGHT//////////////////////////////////
//////////////////////////////////////////////////////////////////


void SetUpFlashlight(string &in asArea)  //Area to create the object at. Should be placed out of player's view
	{			
		AddTimer("FlickerTimer", 1.0f, "FlickerScript");
	}


void FlickerScript(string &in asTimer)  //looping timer, sets flicker to flashlight if player has one
{
	
	if(GetPlayerLampOil() >= 10.0f || GetPlayerLampOil() == 0.0f || GetLocalVarInt("FlashLightVar") == 0)
	{
		SetLightFlickerActive("flashlight_playerhands_Flashlight_Spot", false);
	}
	else if(GetLocalVarInt("FlashLightVar") == 1 && GetPlayerLampOil() < 10.0f && GetPlayerLampOil() != 0.0f)
	{
		SetLightFlickerActive("flashlight_playerhands_Flashlight_Spot", true);
	}
	
		AddTimer("FlickerTimer", 1.0f, "FlickerScript");
}

//////////////////////////////END FLASHLIGHT///////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////

///////////////////////PHONE///////////////////////////////////////
///////////////////////////////////////////////////////////////////


/* Entity = the phone to be played at, if files are "File_01.ogg" and "File_02.ogg", then asFileName = File and asFileCount = 2.
 All sound files from 1 through the given number are be played.
 If count = 0, "File" (without the underscore and numbers) is assumed.
 For best effect use mono sound files.
 Lang subtitle entries should be titled same as the file and placed in "Dialogues" category. */

void StartPhoneRing(string &in asEntity, string asFileName, int asFileCount)
{
	SetLocalVarString("FileName", asFileName); // GetLocalVarString("FileName");
	SetLocalVarInt("FileCount", asFileCount); // GetLocalVarInt("FileCount");
	SetLocalVarString("Phone", asEntity);  // GetLocalVarString("Phone");
	
	PlaySoundAtEntity("phonering", "phone_ring_loop.snt", asEntity, 0.0f, false);
	SetEntityPlayerInteractCallback(asEntity, "PickUpPhone", true);
}
void PickUpPhone(string &in asEntity)
{
	StopSound("phonering", 0.5f);
	PlaySoundAtEntity("", "phone_up.snt", asEntity, 0.0f, false);
	AddTimer("", 0.5f, "StartTalking");

	SetPlayerMoveSpeedMul(0.3f);
	SetPlayerJumpDisabled(true);
	SetPlayerRunSpeedMul(0.0f);
}
void StartTalking(string &in asTimer)
{
	PlaySoundAtEntity("phonestatic", "phone_static_loop.snt", GetLocalVarString("Phone"), 0.0f, false);

	if (GetLocalVarInt("FileCount") == 0)
	{
		AddEffectVoice(GetLocalVarString("FileName"), "", "Dialogues", GetLocalVarString("FileName"), true, GetLocalVarString("Phone"), 0.0f, 15.0f);
	}
	else if (GetLocalVarInt("FileCount") > 0)
	{
		for (int i = 1; i <= GetLocalVarInt("FileCount"); i++)
		{
			if (i < 10)
			{
				SetLocalVarString("tmp", GetLocalVarString("FileName")+"_0" + i); 
			}
			else
			{
				SetLocalVarString("tmp", GetLocalVarString("FileName")+"_" + i); 
			}

			AddEffectVoice(GetLocalVarString("tmp"), "", "Dialogues", GetLocalVarString("tmp"), true, GetLocalVarString("Phone"), 0.0f, 15.0f);
		}
	}
	SetEffectVoiceOverCallback("HangUp");
}

void HangUp()
{
	PlaySoundAtEntity("", "phone_down.snt", GetLocalVarString("Phone"), 0.0f, false);
	StopSound("phonestatic", 0.3f);

	SetPlayerMoveSpeedMul(1.0f);
	SetPlayerRunSpeedMul(1.0f);
	SetPlayerJumpDisabled(false);

	AddTimer("phoneOverTimer", 2.0f, "PhoneCallOverCallback");
}

///////////////END PHONE///////////////////////////////////////////
///////////////////////////////////////////////////////////////////


