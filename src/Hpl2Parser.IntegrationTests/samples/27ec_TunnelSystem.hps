void OnStart()
{
AddEntityCollideCallback("Player", "Start", "Start", true, 1);
AddEntityCollideCallback("Player", "BoardBreaks", "BoardBreaks", true, 1);
AddEntityCollideCallback("Player", "DebrisArea", "Debris", true, 1);
AddEntityCollideCallback("Player", "Quest", "Quest", true, 1);
AddEntityCollideCallback("Player", "MachineArea", "MachineSounds", false, 1);
AddEntityCollideCallback("Player", "AreaElevator", "ElevatorStart", true, 1);
AddEntityCollideCallback("Player", "DogArea2", "DogArea2", true, 1);
AddEntityCollideCallback("Player", "QuestDone", "QuestDone", true, 1);
AddEntityCollideCallback("dog2", "DogStop", "DogStop", true, 1);
AddEntityCollideCallback("Player", "rat_1", "rat1", true, 1);
AddEntityCollideCallback("Player", "rat_2", "rat2", true, 1);
AddEntityCollideCallback("Player", "rat_3", "rat3", true, 1);
AddEntityCollideCallback("Player", "rat_4", "rat4", true, 1);
AddEntityCollideCallback("Player", "rat_5", "rat5", true, 1);
AddEntityCollideCallback("Player", "rat_6", "rat6", true, 1);
AddEntityCollideCallback("Player", "DogArea", "DogArea", true, 1);
AddEntityCollideCallback("Player", "AreaHallway", "Hallway", true, 1);
AddEntityCollideCallback("enemiehall", "HallwayStop", "HallwayStop", true, 1);
SetEntityConnectionStateChangeCallback("lever1", "StoreCheckLeverState");
SetEntityConnectionStateChangeCallback("lever2", "StoreCheckLeverState");
SetEntityConnectionStateChangeCallback("lever3", "StoreCheckLeverState");
SetEntityConnectionStateChangeCallback("lever4", "StoreCheckLeverState");
SetEntityConnectionStateChangeCallback("lever5", "StoreCheckLeverState");
SetEntityConnectionStateChangeCallback("lever6", "StoreCheckLeverState");
InteractConnectPropWithMoveObject("wheeltodoor2", "valve", "gate2", true, false, 0);
SetEntityInteractionDisabled("rock", true);
SetEntityInteractionDisabled("rock2", true);
SetEntityInteractionDisabled("rock3", true);
SetEntityInteractionDisabled("rock4", true);
SetEntityInteractionDisabled("rock5", true);
SetEntityInteractionDisabled("rock6", true);
SetEntityInteractionDisabled("rock7", true);
SetEntityInteractionDisabled("rock8", true);
SetEntityInteractionDisabled("guiding_rod01_2", true);
SetEntityInteractionDisabled("guiding_rod02_2", true);
SetEntityInteractionDisabled("guiding_rod03_2", true);
}

void MachineSounds(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("machinesounds", "13_machine_extra", "AreaMachineSound", 2.0f, false);
PlaySoundAtEntity("machinesounds", "13_ignite", "AreaMachineSound", 0.2f, false);
CreateParticleSystemAtEntity("machineps", "ps_steam.ps", "SteamArea", false);
PlaySoundAtEntity("machinesounds", "13_steam.snt", "SteamArea", 0.0f, false);
CreateParticleSystemAtEntity("machineps", "ps_steam.ps", "SteamArea2", false);
PlaySoundAtEntity("machinesounds", "13_steam.snt", "SteamArea2", 0.0f, false);
SetEntityInteractionDisabled("guiding_rod01_2", true);
SetEntityInteractionDisabled("guiding_rod02_2", true);
SetEntityInteractionDisabled("guiding_rod03_2", true);	
}

void rat1(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_1", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_1", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_1", false);	
}

void rat2(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_2", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_2", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_2", false);	
}

void rat3(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_3", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_3", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_3", false);	
}

void rat4(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_4", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_4", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_4", false);	
}

void rat5(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_5", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_5", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_5", false);	
}

void rat6(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_6", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_6", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_6", false);	
}

void Start(string &in asParent, string &in asChild, int alState)
{	
PlayMusic("15_event_elevator.ogg", false, 1.0, 0, 0, true);
AutoSave();	
}

void Quest(string &in asParent, string &in asChild, int alState)
{	
AddQuest("Investigate", "Investigate");	
}

void Debris(string &in asParent, string &in asChild, int alState)
{	
PlaySoundAtEntity("","general_wind_whirl.snt", "WindArea", 0, true);
CreateParticleSystemAtEntity("", "ps_dust_ghost", "WindArea", false);
SetEntityActive("rock", true);	
SetEntityActive("rock2", true);
SetEntityActive("rock3", true);
}

void machine(string &in asEntity)
{
SetLevelDoorLocked("entrance", false);
SetEntityPlayerInteractCallback("entrance", "", false);
SetEntityActive("AreaRods", true);
AddQuest("Machine", "Machine");
}

void Rod1(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
PlaySoundAtEntity("", "13_rod_in.snt", "Player", 0.8, false);
SetEntityInteractionDisabled("guiding_rod03_2", true);
SetEntityActive("guiding_rod03_2", true);
AddLocalVarInt("VarIntRodsPlaced", 1);
	Machine();
}

void Rod2(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
PlaySoundAtEntity("", "13_rod_in.snt", "Player", 0, false);
SetEntityInteractionDisabled("guiding_rod02_2", true);
SetEntityActive("guiding_rod02_2", true);
AddLocalVarInt("VarIntRodsPlaced", 1);
	Machine();
}

void Rod3(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
PlaySoundAtEntity("", "13_rod_in.snt", "Player", 0, false);
SetEntityInteractionDisabled("guiding_rod01_2", true);
SetEntityActive("guiding_rod01_2", true);
AddLocalVarInt("VarIntRodsPlaced", 1);
	Machine();
}

void Barrel(string &in asItem, string &in asEntity)
{
SetPlayerActive(false);
StartPlayerLookAt("Look", 5, 50, "");
SetEntityActive("tube2", true);
AddTimer("barrel2", 1, "barrel2");
CompleteQuest("Barrel", "Barrel");
SetEntityActive("UseJarFail", false);
RemoveItem(asItem);
}

void barrel2(string &in asTimer)
{
SetEntityActive("tube2", false);
SetEntityActive("tube3", true);
AddTimer("barrel3", 1, "barrel3");
PlaySoundAtEntity("","impact_organic_med.snt", "Look", 0, true);
CreateParticleSystemAtEntity("oilps", "ps_impact_dirt_low", "Look", false);
}

void barrel3(string &in asTimer)
{
SetEntityActive("tube3", false);
SetEntityActive("tube2", true);
AddTimer("barrel4", 1, "barrel4");
}

void barrel4(string &in asTimer)
{
SetEntityActive("tube2", false);
SetEntityActive("tube3", true);
AddTimer("barrel5", 1, "barrel5");
PlaySoundAtEntity("","impact_organic_med.snt", "Look", 0, true);
CreateParticleSystemAtEntity("oilps", "ps_impact_dirt_low", "Look", false);
}

void barrel5(string &in asTimer)
{
SetEntityActive("tube3", false);
SetEntityActive("tube2", true);
AddTimer("barrel6", 1, "barrel6");
}

void barrel6(string &in asTimer)
{
SetEntityActive("tube2", false);
SetEntityActive("tube3", true);
AddTimer("barrel7", 2, "barrel7");
PlaySoundAtEntity("","impact_organic_med.snt", "Look", 0, true);
CreateParticleSystemAtEntity("oilps", "ps_oil_grease", "OilPsArea", false);
}

void barrel7(string &in asTimer)
{
SetEntityActive("tube3", false);
SetEntityActive("tube2", false);
SetPlayerActive(true);
StopPlayerLookAt();
CreateParticleSystemAtEntity("oilps", "ps_oil_stream_from_pipe", "OilStream", false);
PlaySoundAtEntity("oilsound", "16_oil_drip.snt", "Look", 0, false);
SetEntityActive("AreaBarrel", false);
SetEntityActive("UseJar", true);
}

void Filljar(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
SetEntityActive("Jar2", true);
AddTimer("filljar2", 4, "filljar2");
SetEntityInteractionDisabled("Jar2", true);
}

void filljar2(string &in asTimer)
{
SetEntityActive("Jar2", false);
SetEntityActive("Oil", true);
AddTimer("filljar3", 5, "filljar3");
SetEntityActive("UseJar", false);
}

void filljar3(string &in asTimer)
{
DestroyParticleSystem("oilps");
StopSound("oilsound", 0.9f);
}

void JarFail(string &in asItem, string &in asEntity)
{
SetMessage("Messages", "barrel", 6);
PlaySoundAtEntity("", "oil_tank_empty.snt", "OilStream", 0, false);
AddQuest("Barrel", "Barrel");
SetEntityActive("UseJarFail", false);
}

void BarrelFail(string &in asEntity)
{
SetMessage("Messages", "barrel", 6);
PlaySoundAtEntity("", "oil_tank_empty.snt", "OilStream", 0, false);
AddQuest("Barrel", "Barrel");
SetEntityActive("UseJarFail", false);
}

void Oil(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
GiveItemFromFile("glass_container_1", "glass_container.ent");
PlaySoundAtEntity("", "12_epoxy_fill.snt", "Player", 0.8, false);
AddLocalVarInt("VarIntRodsPlaced", 1);
	Machine();
}

void Cogwheel(string &in asParent, string &in asChild, int alState)
{	
PlaySoundAtEntity("", "13_attach_wheel.snt", "Player", 0, false);
SetEntityActive("cogwheel", false);
SetEntityActive("elevator_cogwheel02_mounted_1", true);
AddLocalVarInt("VarIntRodsPlaced", 1);
	Machine();	
}

void Machine(){

	if(GetLocalVarInt("VarIntRodsPlaced") == 5){
		
		AddLocalVarInt("Machinelocal", 1);
		PlayMusic("04_puzzle_acid.ogg", false, 1.0f, 0.5, 15, false);
                CompleteQuest("Machine", "Machine");
	}
}

void LeverFunc(string &in asEntity, int alState){

	
	if(alState == 1)
	if(GetLocalVarInt("Machinelocal") == 1){
		
                SetEntityConnectionStateChangeCallback("lever", "CollideBreakBrigde");
                SetLeverStuckState("lever_simple01_1", 1, true);
                SetEntityActive("MachineArea", true);
                SetEntityActive("DogArea", true);
		RotatePropToSpeed("elevator_cogwheel01_mounted_1", 1, 1, 0, 0, -1, false, "");
		RotatePropToSpeed("elevator_cogwheel02_mounted_1", 1, 1, 0, 0, 1, false, "");
		RotatePropToSpeed("elevator_cogwheel03_mounted_1", 1, 1, 0, 0, -1, false, "");
	}
	else{
		SetMessage("Messages", "machinefail", 2.5);
	}
}

void CollideBreakBrigde(string &in asEntity, int alState)
{
     if (alState == 1)
     {
	for(int i=1; i<=2; ++i)
		RemoveEntityCollideCallback("stone_small01*", "AreaBreakBridge_"+i);
	
	CreateParticleSystemAtEntity("BreakBridge", "ps_break_wood_small", "AreaBreakBridge_1", false);
	PlaySoundAtEntity("BreakBridge","break_wood_metal", "AreaBreakBridge_1", 0, false);
		
	BreakJoint("bridge_chained_1_BallJoint_1");
	
	SetEntityPlayerInteractCallback("bridge_chained_1", "", false);
	
	AddTimer("ChainForce",0.3f,"TimerChainForce");
	
	CompleteQuest("18_Bridge", "18_Bridge");
	
	SetEntityActive("bridgeblocker_1", false);
        SetLeverStuckState("lever", 1, true);
        SetEntityConnectionStateChangeCallback("lever", "");
          return;
     }
}

void TimerChainForce(string &in asTimer)
{
	AddBodyImpulse("bridge_chained_1_chain", 1,0.5,-2, "World");
	PlaySoundAtEntity("creak", "18_bridge_fall", "bridge_chained_1", 0.0f, false);
}

void InteractBridge(string &in asEntity)
{
	SetMessage("Messages", "bridge", 4);	
	
	PlayGuiSound("18_touch_bridge.snt", 1.0f);
	AddPropImpulse(asEntity, 0.0f, 4.0f, 2.0f, "World");
	
	AddQuest("18_Bridge", "18_Bridge");
	
	AddTimer(asEntity, 1.0f, "TimerInteractBridge");
}
void TimerInteractBridge(string &in asTimer)
{
	SetEntityPlayerInteractCallback(asTimer, "InteractBridge", true);
}

void CollideImpactBridge(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("impact", "18_bridge_hit", asChild, 0.0f, false);
	CreateParticleSystemAtEntity("impps", "ps_dust_impact", asChild, false);
}

void CheckLeverStates()
 {
     if (GetLocalVarInt("lever1") == 1
      && GetLocalVarInt("lever2") == -1
      && GetLocalVarInt("lever3") == 1
      && GetLocalVarInt("lever4") == -1
      && GetLocalVarInt("lever5") == 1
      && GetLocalVarInt("lever6") == 1)
     {
          PerformLeverTaskCompleted();
     }
 } 
 
void StoreCheckLeverState(string &in entity, int state)
{
    SetLocalVarInt(entity, state);
    CheckLeverStates();
} 

void PerformLeverTaskCompleted()
{
	SetMoveObjectState("gate", 1);	
	SetLeverStuckState("lever1", 1, true);
	SetLeverStuckState("lever2", -1, true);
	SetLeverStuckState("lever3", 1, true);
	SetLeverStuckState("lever4", -1, true);
	SetLeverStuckState("lever5", 1, true);
	SetLeverStuckState("lever6", 1, true);
        SetEntityActive("DogArea2", true);
}

void BoardBreaks(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("plank", false);
CreateParticleSystemAtEntity("breakps", "ps_break_wood_small", "AreaBoards", false);
PlaySoundAtEntity("","break_wood.snt","AreaBoards", 0,false);
CheckPoint("checkpoint","PlayerStartArea_2","", "DeathHints", "Fall");	
}

void Clue1(string &in asEntity)
{
SetMessage("Messages", "tunnelblood", 8);
AddLocalVarInt("VarIntClue", 1);
	CluesDone();
}

void Clue2(string &in asEntity)
{
SetMessage("Messages", "tunnelknife", 8);
AddLocalVarInt("VarIntClue", 1);
	CluesDone();
}

void Clue3(string &in asEntity)
{
PlayMusic("10_paper_daniel01.ogg", false, 1.0, 0, 0, false);
AddLocalVarInt("VarIntClue", 1);
	CluesDone();
}

void CluesDone(){

	if(GetLocalVarInt("VarIntClue") == 3){
		CompleteQuest("Investigate", "Investigate");
                SetEntityActive("Flash", true);
                SetEntityActive("Open", true);
                SetEntityActive("DogArea", true);
                SetEntityActive("block", true);
	        AddTimer("chapterend", 47, "chapterend");
	}
}

void chapterend(string &in asTimer)
{	
SetMessage("Messages", "milestone", 6);
AddTimer("chapterend2", 6, "chapterend2");
AddGlobalVarInt("Village", 1);
AddGlobalVarInt("HotelNight", 1);
AddGlobalVarInt("HotelDay", 1);	
}

void chapterend2(string &in asTimer)
{	
SetMessage("Messages", "chapterend", 6);
AddTimer("chapterend3", 10, "chapterend3");
PlayMusic("08_amb_success.ogg", false, 1.0, 0, 0, true);
}

void chapterend3(string &in asTimer)
{	
ChangeMap("BrutalMansion.map", "PlayerStartArea_1", "","");
SetEntityActive("block", false);
}

void Lever(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
SetEntityActive("lever4", true);
PlaySoundAtEntity("", "puzzle_place_jar.snt", "Player", 0.0f, false);
}

void DogArea(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("DogArea2", true);
SetEntityActive("dog", true);
AddEnemyPatrolNode("dog","node_11",0,"");
AddEnemyPatrolNode("dog","node_12",0,"");
AddEnemyPatrolNode("dog","node_6",0,"");
AddEnemyPatrolNode("dog","node_2",0,"");
AddEnemyPatrolNode("dog","node_1",4,"");
PlayMusic("05_event_steps.ogg", false, 1.0, 0, 0, true);
SetPlayerRunSpeedMul(0.1f);
SetPlayerMoveSpeedMul(0.2f);
SetInventoryDisabled(true);
StartPlayerLookAt("LookDog", 5, 50, "");
AddTimer("stoplook", 3, "stoplook");	
AddTimer("dogevent", 5, "dogevent");	
}

void stoplook(string &in asTimer)
{	
SetPlayerRunSpeedMul(1.0f);
SetPlayerMoveSpeedMul(1.0f);
SetInventoryDisabled(false);
StopPlayerLookAt();
}

void dogevent(string &in asTimer)
{	
SetEntityActive("DogArea2", false);      //Just in case player turns back and avoids the dog event
}

void ElevatorStart(string &in asParent, string &in asChild, int alState)
{	
FadeOut(0);
FadeIn(3);
PlaySoundAtEntity("elevator", "elevator_move_normal.snt", "Player", 0, true);
AddTimer("elevatorstart2", 8, "elevatorstart2");
}

void elevatorstart2(string &in asTimer)
{	
AddTimer("elevatorstart3", 2, "elevatorstart3");
PlaySoundAtEntity("", "elevator_stop.snt", "Player", 0, false);
StopSound("elevator", 0.5f);
CreateParticleSystemAtEntity("", "ps_dust_falling_big_feet", "AreaElevator2", false);
StartScreenShake(0.03f,0.35f, 0.03f,4.5f);
}

void elevatorstart3(string &in asTimer)
{	
SetMoveObjectState("gate3", 1.0f);
}

void DogArea2(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("dog2", true);
AddEnemyPatrolNode("dog2","node_38",1,"");
AddEnemyPatrolNode("dog2","node_37",2,"");
AddEnemyPatrolNode("dog2","node_54",0,"");
}

void DogStop(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("dog2", false);
}

void Hallway(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("enemiehall", true);
AddEnemyPatrolNode("enemiehall","node_55",0,"");
AddEnemyPatrolNode("enemiehall","node_56",0,"");
}

void HallwayStop(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("enemiehall", false);
}

void quest(string &in asEntity)
{
AddQuest("Valve", "Valve");
StartPlayerLookAt("AreaLook", 5, 50, "");
AddTimer("stoplook", 2, "stoplook");	
}

void QuestDone(string &in asParent, string &in asChild, int alState)
{
CompleteQuest("Valve", "Valve");
GiveSanityBoostSmall();
}

void morality(string &in asEntity)
{
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);
}

//---- Death fall ----//
//If player glitch through the brigde or fail at the board part and falls down

void CollideFallDeath(string &in asParent, string &in asChild, int alState)
{	
	PlaySoundAtEntity("fallaaaaaah", "11_fall", "Player", 0, false);
	
	FadeOut(1);
	
	AddTimer("death1", 0.1f, "TimerFallDeath");	
	AddTimer("death2", 0, "TimerFallDeath");	
}
void TimerFallDeath(string &in asTimer)
{	
	if(asTimer == "death1"){
		PlaySoundAtEntity("bump1", "player_bodyfall", "Player", 0, false);
		return;
	}	
	
	DisableDeathStartSound();
	AddPlayerHealth(-200);
	
	PlaySoundAtEntity("pain", "player_falldamage_max", "Player", 0, false);
	PlaySoundAtEntity("bump2", "player_bodyfall", "Player", 0, false);
}

//---- Messages ----//

void locked(string &in asEntity)
{
SetMessage("Messages", "locked", 4);
}

void budge(string &in asEntity)
{
SetMessage("Messages", "budge", 4);
}

void explorefirst(string &in asEntity)
{
SetMessage("Messages", "explorefirst2", 4);
}

void OnEnter()
{	
SetSanityDrainDisabled(true);
AddEntityCollideCallback("Player", "death", "CollideFallDeath", false, 1);
AddEntityCollideCallback("Player", "death2", "CollideFallDeath", false, 1);
AddEntityCollideCallback("cogwheel", "AreaCogwheel", "Cogwheel", false, 1);
AddUseItemCallback("", "guiding_rod03_1", "AreaRods", "Rod1", false);
AddUseItemCallback("", "guiding_rod02_1", "AreaRods", "Rod2", false);
AddUseItemCallback("", "guiding_rod01_1", "AreaRods", "Rod3", false);
SetEntityInteractionDisabled("guiding_rod01_2", true);
SetEntityInteractionDisabled("guiding_rod02_2", true);
SetEntityInteractionDisabled("guiding_rod03_2", true);
AddUseItemCallback("", "Oil", "AreaOil", "Oil", true);
AddUseItemCallback("", "Tube", "AreaBarrel", "Barrel", true);
AddUseItemCallback("", "Tube", "UseJarFail", "Barrel", true);
AddUseItemCallback("", "Jar", "UseJar", "Filljar", true);
AddUseItemCallback("", "Jar", "UseJarFail", "JarFail", true);
AddUseItemCallback("", "handle", "UseLever", "Lever", true);
PreloadSound("machinesounds");
PreloadParticleSystem("machineps");
SetLanternDisabled(false);
SetPlayerRunSpeedMul(1.0f);
}

void OnLeave()
{
StopMusic(10, 0);
SetupLoadScreen("loadscreentext", "...", 1, "load_tunnel.png");
}