void OnStart()
{		FadeGlobalSoundVolume(0.0, 0.0f);
		AddTimer("", 10, "LightningAnimation");
		AddTimer("", 0, "startingDream");
		AddTimer("", 0, "WindSystem");
		
		AddTimer("", 300, "endingDream");
		//AddTimer("", 10, "endingDream");
		

		SetInventoryDisabled(true);
		SetLanternDisabled(true);
		SetSanityDrainDisabled(true);
		FadeGlobalSoundSpeed(1.0f, 2.0f);
		AddEntityCollideCallback("Player", "AmbienceArea_1", "controleBillboard", false, 0);
}

void WindSystem(string &in asTimer)
{		AddTimer("", 10, "WindArea1");
		AddTimer("", 30, "WindArea2");
		AddTimer("", 55, "WindArea3");
		AddTimer("", 20, "WindArea4");
		AddTimer("", 70, "WindArea5");
		AddTimer("", 35, "WindArea6");
		AddTimer("", 70, "WindArea7");
		AddTimer("", 40, "WindArea8");
		AddTimer("", 70, "WindArea9");
		AddTimer("", 85, "WindArea10");
		AddTimer("", 110, "WindSystem");
}
void WindArea1(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_paper_blow.ps", "WindArea_1", false);
		PlaySoundAtEntity("WindArea_1", "general_wind_whirl", "WindArea_1", 0.1f, true);
}
void WindArea2(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_2", false);
		PlaySoundAtEntity("WindArea_2", "general_wind_whirl", "WindArea_2", 0.1f, true);
}
void WindArea3(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_push.ps", "WindArea_3", false);
}
void WindArea4(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_push.ps", "WindArea_4", false);
}
void WindArea5(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_5", false);
		PlaySoundAtEntity("WindArea_5", "general_wind_whirl", "WindArea_5", 0.1f, true);
}
void WindArea6(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_6", false);
		PlaySoundAtEntity("WindArea_6", "general_wind_whirl", "WindArea_6", 0.1f, true);
}
void WindArea7(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_whirl.ps", "WindArea_7", false);
		PlaySoundAtEntity("WindArea_7", "general_wind_whirl", "WindArea_7", 0.1f, true);
}
void WindArea8(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_push.ps", "WindArea_8", false);
}
void WindArea9(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_push.ps", "WindArea_9", false);
}
void WindArea10(string &in asTimer)
{		CreateParticleSystemAtEntity("", "ps_dust_push.ps", "WindArea_10", false);
}

void startingDream(string &in asTimer)
{		FadeOut(0);	SetPlayerActive(false);	FadePlayerRollTo(70, 10, 10);
		FadeRadialBlurTo(0.1f, 1.0f);
		MovePlayerHeadPos(0, -1, 0, 70.0f, 70.0f);
		AddTimer("scene1", 5, "IntroDreamScene");
		AddTimer("scene2", 8, "IntroDreamScene");
		AddTimer("scene3", 15, "IntroDreamScene");
		AddTimer("scene4", 18, "IntroDreamScene");
}
void IntroDreamScene(string &in asTimer)
{	if(asTimer == "scene1")
	{	FadeIn(0.2);
		FadeGlobalSoundVolume(1.0, 0.2f);
		StartPlayerLookAt("LookArea_1", 5, 5, "");
		FadeRadialBlurTo(0.0f, 0.03f);
		AddTimer("", 0, "r_pant");			}
	if(asTimer == "scene2")
	{	AddTimer("", 2.5, "r_cough");
		StartPlayerLookAt("LookArea_2", 1, 1, "");	}
	if(asTimer == "scene3")
	{	FadePlayerRollTo(45, 2, 2);
		MovePlayerHeadPos(0, -0.7, 0, 2.0f, 2.0f);	
		StartPlayerLookAt("LookArea_3", 1, 1, "");
		PlayGuiSound("player_stand", 20);
		SetPlayerActive(true);
		SetPlayerLookSpeedMul(0.2f);
		SetPlayerMoveSpeedMul(0.2f);
		SetPlayerRunSpeedMul(0);

		PlayMusic("oldSoul.ogg", true, 5.0f, 0, 0, true);	}
	if(asTimer == "scene4")
	{	FadePlayerRollTo(0, 45, 45);
		MovePlayerHeadPos(0, 0, 0, 45.0f, 45.0f);
		SetPlayerLookSpeedMul(1.0f);
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(0.1f);		
		PlayGuiSound("player_stand", 20);
		FadeRadialBlurTo(0.015f, 0.03f);
		FadeImageTrailTo(0.0f, 5.0f);
		SetPlayerJumpDisabled(false);	
		SetPlayerCrouchDisabled(false);
		StopPlayerLookAt();			}
}
void LightningAnimation(string &in asTimer)		
{		AddTimer("sceneS", 0, "thunder"); 
		AddTimer("scene1", 0.0, "thunder"); 
		AddTimer("scene2", 0.25, "thunder"); 
		AddTimer("scene0", 0.5, "thunder");
		AddTimer("scene1", 80.0, "thunder"); 
		AddTimer("scene2", 80.25, "thunder"); 
		AddTimer("scene1", 80.5, "thunder");
		AddTimer("scene2", 81, "thunder"); 
		AddTimer("scene0", 81.5, "thunder");
		AddTimer("", 100, "LightningAnimation");	
}
void thunder(string &in asTimer)
{		if(asTimer == "sceneS")
	{	PlayGuiSound("general_thunder", 20);	}				//sS=Sound
		if(asTimer == "scene0")
	{	FadeLightTo("Bolt_1", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_2", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_3", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_4", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_5", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_6", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_7", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_8", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_9", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_10", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_11", 0, 0, 0, 1.0f, -1, 2.0f);	
		FadeLightTo("Bolt_12", 0, 0, 0, 1.0f, -1, 2.0f);	
		FadeLightTo("Bolt_13", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_14", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_15", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_16", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_17", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_18", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_19", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_20", 0, 0, 0, 1.0f, -1, 2.0f);
		FadeLightTo("Bolt_21", 0, 0, 0, 1.0f, -1, 2.0f);			}	//s0=blue
		if(asTimer == "scene1")
	{	FadeLightTo("Bolt_1", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_2", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_3", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_4", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_5", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_6", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_7", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_8", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_9", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_10", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_11", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_12", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_13", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_14", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_15", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_16", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_17", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_18", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_19", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_20", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);
		FadeLightTo("Bolt_21", 1.0f, 1.0f, 1.0f, 1.0f, -1, 0.2f);				}	 //s1=white 
		if(asTimer == "scene2")
	{	FadeLightTo("Bolt_1", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_2", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_3", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_4", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_5", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_6", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_7", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_8", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_9", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_10", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_11", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_12", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_13", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_14", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_15", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_16", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_17", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_18", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_19", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_20", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);
		FadeLightTo("Bolt_21", 0.7f, 0.8f, 0.9f, 1.0f, -1, 0.1f);		}	//s2=shineBlue 
}
void endingDream(string &in asTimer)
{		
		//FadePlayerAspectMulTo(1.5, 1.0f/24.0f);
		//FadePlayerFOVMulTo(1.5, 30);	
		//FadeGlobalSoundVolume(0.0, 28.0f);	

		//AddTimer("scene1_1", 0, "endingDreamScenes");
		//AddTimer("scene1_0", 2, "endingDreamScenes");
		//AddTimer("scene1_2", 4, "endingDreamScenes");
		//AddTimer("scene2", 4, "endingDreamScenes");
		//AddTimer("scene3", 5, "endingDreamScenes");
		//AddTimer("scene4", 10, "endingDreamScenes");
		//AddTimer("scene5", 20, "endingDreamScenes");
		//AddTimer("endScene", 30, "endingDreamScenes");
		
		AddEntityCollideCallback("Player", "EscapeArea", "EscapeVision", true, 1);
		AddEntityCollideCallback("Player", "LeavingArea", "LeavingPosition", true, 1);
		SetGlobalVarInt("WakeUp", 1);
}

void EscapeVision(string &in asParent, string &in asChild, int alState)
{		if(alState == 1){
		FadeLightTo("ExitLight", 1, 1, 1, 1, -1, 3.0f);
		FadeLightTo("BoxLight_2", 0, 0, 0, 0, -1, 3.0f);
		FadeSepiaColorTo(0.6f, 5.0f);	}
		else	{
		FadeLightTo("ExitLight", 0, 0, 0, 0, -1, 3.0f);
		FadeLightTo("BoxLight_2", 0.7, 0.9, 1, 1, -1, 3.0f);
		FadeSepiaColorTo(1.0f, 5.0f);	
		}
}
void LeavingPosition(string &in asParent, string &in asChild, int alState)
{		SetPlayerMoveSpeedMul(0.3);
		SetPlayerRunSpeedMul(0);
		SetPlayerLookSpeedMul(0.5);
		SetEntityPlayerLookAtCallback("facingExitArea", "ExitEvent", true);
}
void ExitEvent(string &in entity, int alState)
{		SetPlayerActive(false);
		StartPlayerLookAt("facingExitArea", 1, 0.7, "");
		FadeLightTo("FacingExitLight", 2, 2, 2, 2, -1, 5.0f);
		AddTimer("scene5_2", 5, "endingDreamScenes");		//Flash In
		AddTimer("scene5_3", 6, "endingDreamScenes");		//Flash Out
		AddTimer("endScene", 9, "endingDreamScenes");
		}
void endingDreamScenes(string &in asTimer)
{		if(asTimer == "scene1_0")
	{	FadeSepiaColorTo(0.0f, 0.6f);		}

		if(asTimer == "scene1_1")
	{	FadeSepiaColorTo(0.25f, 0.5f);	}

		if(asTimer == "scene1_2")
	{	FadeSepiaColorTo(0.6f, 1.0f);		}

		if(asTimer == "scene2")
	{	SetPlayerMoveSpeedMul(0.6f);	}

		if(asTimer == "scene3")
	{	FadeRadialBlurTo(0.09, 0.01f);	}

	//	if(asTimer == "scene4")
	//{	FadePlayerAspectMulTo(1.5, 1.0f/24.0f);	}

		if(asTimer == "scene5")
	{	FadeOut(8);			}	//finding white Fade-Effect...!
	
		if(asTimer == "scene5_2")
	{	StartEffectFlash(4, 1, 0.5);
	}
		if(asTimer == "scene5_3")
	{	FadeOut(0.5);
		FadeGlobalSoundVolume(0.0, 2.0f);
	}

		if(asTimer == "endScene")
	{	SetupLoadScreen("LoadingText", "none", 1, "loading_axe.jpg");
		FadePlayerAspectMulTo(1, 1.0f/24.0f);
		ChangeMap("cave.map", "ScriptArea_17", "", "");	}
}

void controleBillboard(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		FadeLightTo("PointLight_21", 0, 0, 0, 0, -1, 3);
	}
	else
	{	
		FadeLightTo("PointLight_21", 0.3, 0.6, 0.9, 1, -1, 3);
	}
}

//REACTS
void r_breath(string &in asTimer)
{	PlayGuiSound("react_breath", 20);		}
void r_breathSlow(string &in asTimer)
{	PlayGuiSound("react_breath_slow", 20);		}
void r_pant(string &in asTimer)
{	PlayGuiSound("react_pant", 20);		}
void r_cough(string &in asTimer)
{	PlayGuiSound("player_cough", 20);		}
void r_sigh(string &in asTimer)
{	PlayGuiSound("react_sigh", 20);		}
void r_scare(string &in asTimer)
{	PlayGuiSound("react_scare", 20);		}
void s_damage10(string &in asTimer)
{	GiveSanityDamage(10.0f, false);		}
void s_whisper(string &in asTimer)
{	PlayGuiSound("insanity_whisper", 20);		}
void s_sneakstep(string &in asTimer)
{	PlayGuiSound("insanity_step_slime_sneak", 20);	}
void s_crychild(string &in asTimer)
{	PlayGuiSound("insanity_baby_cry", 20);		}
void s_heartbeat(string &in asTimer)
{	PlayGuiSound("sanity_heartbeat", 20);		}
void p_bodyfall(string &in asTimer)
{	PlayGuiSound("player_bodyfall", 20);		}
void p_stand(string &in asTimer)
{	PlayGuiSound("player_stand", 20);		}


void OnEnter()
{		SetMapDisplayNameEntry("dreams");
		//AutoSave();	
		}

void OnLeave()
{	
		StopMusic(5, 0);
		SetInventoryDisabled(false);
		SetLanternDisabled(false);
		SetSanityDrainDisabled(false);
}
