//  ___  _         _            _           _   _            ______ _ _ _       
// / _ \| |       | |          | |         | | | |           | ___ (_) | |      
/// /_\ \ |__   __| |_   _  ___| |_ ___  __| | | |__  _   _  | |_/ /_| | |_   _ 
//|  _  |  _ \ / _  | | | |/ __| __/ _ \/ _  | |  _ \| | | | | ___ \ | | | | | |
//| | | | |_) | (_| | |_| | (__| ||  __/ (_| | | |_) | |_| | | |_/ / | | | |_| |
//\_| |_/____/ \__,_|\__,_|\___|\__\___|\__,_| |____/ \__, | \____/|_|_|_|\__, |
//                                                     __/ |               __/ |
//                                                    |___/               |___/   
//													
//													By: Nick Debergue
//													
//****IF YOU'RE READING: Good luck understanding this gibberish :)
//****Contact: perceptionist420@ymail.com
//****Or message me or comment at Mod/Indie DB! I'm always looking for collaborations!
//****
//****CHEATS: Search the code for "hax" (CAUTION: YOU MUST COMMENT/UNCOMMENT THESE SEGMENTS CORRECTLY FOR THE DESIRED EFFECT!)
//
//
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////---BEGINNING---//////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void startArea(string &in asEntity, int alState){
	if(GetGlobalVarInt("progressNumb") <= 1){
		SetLightVisible("lightUp1", false);
		SetLightVisible("lightUp2", false);
		SetLightVisible("lightUp3", false);
		SetLightVisible("lightUp4", false);
		SetLightVisible("lightUp5", false);
		SetLightVisible("lightUp6", false);
		SetLightVisible("lightUp7", false);
		SetLightVisible("lightUp8", false);
		SetLightVisible("lightUp9", false);
		SetLightVisible("lightUp20", false);
		SetLightVisible("lightUp21", false);
		SetLightVisible("lightUp22", false);
		
		SetLightVisible("PointLight_4", false);
		SetLightVisible("PointLight_5", false);
		SetLightVisible("PointLight_6", false);
		SetLightVisible("PointLight_7", false);
		SetLightVisible("PointLight_8", false);
		SetLightVisible("PointLight_9", false);
		SetLightVisible("PointLight_10", false);
		
		SetLightVisible("PointLight_11", false);
		SetLightVisible("PointLight_12", false);
		SetLightVisible("PointLight_13", false);
		SetLightVisible("PointLight_14", false);
		SetLightVisible("PointLight_15", false);
		SetLightVisible("PointLight_16", false);
		SetLightVisible("PointLight_17", false);
		SetLightVisible("PointLight_18", false);
		SetLightVisible("PointLight_19", false);
		SetLightVisible("PointLight_20", false);
		SetLightVisible("PointLight_21", false);
		
		SetLightVisible("tvLight", false);
		SetMapDisplayNameEntry("LVL1");
		
		//INTRO
		SetSanityDrainDisabled(true);
		MovePlayerHeadPos(0, -0.3, 0, 100, 1);
		SetPlayerMoveSpeedMul(0);
		SetPlayerRunSpeedMul(0);
		SetPlayerJumpDisabled(true);
		SetPlayerCrouchDisabled(true);
		SetInventoryDisabled(true);
		AddTimer("static", 0.1, "randomStatic");
		PlaySoundAtEntity("static1", "static.snt", "TV1", 0, false);
		PlaySoundAtEntity("static2", "static.snt", "TV2", 0, false);
		AddLocalVarInt("staticNumb", 1);
		AddLocalVarInt("squeakOn", 1);
		AddLocalVarInt("randomNumb", 1);
		AddLocalVarInt("keyOn", 1);
		AddLocalVarInt("haveHallwayKey", 0);
		AddLocalVarInt("cutScene1", 1);
		AddLocalVarInt("room2Init", 0);
		AddLocalVarInt("shovelOn", 0);
		AddLocalVarInt("openCabinet", 1);
		
		AddGlobalVarInt("progressNumb", 1);
		AddGlobalVarInt("fromLvl2", 0);
		
		FadeOut(0);
		FadeImageTrailTo(3, 10);
		FadePlayerFOVMulTo(2, 10);
		AddTimer("fadePlayerIn", 3, "fadePlayerIn");////////////////////////////////////////////////////////////////////////////
		//AddTimer("fadePlayerIn", 0.1, "h4x");/////////////////////////////////////////////////////////////////////////////////haxe
		
		SetPlayerActive(false);/////////////////////////////////////////////////////////////////////////////////////////////////
		SetEnemySanityDecreaseActive("enemy", false);
		
		SetEntityPlayerInteractCallback("door1", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door2", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door3", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door4", "checkifLocked", false);
		SetEntityPlayerInteractCallback("cabinet_simple_1", "checkifLockedC", false);
		
		AddLocalVarInt("door2Open", 0);
		AddLocalVarInt("door3Open", 0);
		AddEntityCollideCallback("door2Open", "door2", "updateDoor2", false, 0);
		AddEntityCollideCallback("door3Open", "door3", "updateDoor3", false, 0);
		
		//SPAWN SHOVELS
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+1), "shovel.ent", "genShovel_1", false);
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+2), "shovel.ent", "genShovel_2", false);
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+3), "shovel.ent", "genShovel_3", false);
		AddTimer("shoveShovels", 0.1, "shoveShovels");
		
	}
}

void checkifLockedC(string &in asEntity){
	if(GetSwingDoorLocked(asEntity)){
		SetMessage("Messages", "lockedCabinet", 2);
	}
}

void checkifLocked(string &in asEntity){
	if(GetSwingDoorLocked(asEntity)){
		SetMessage("Messages", "lockedDoor", 2);
	}
}

void died(string &in asName, int alCount){
	SetEntityPlayerInteractCallback("door1", "checkifLocked", false);
	SetEntityPlayerInteractCallback("door2", "checkifLocked", false);
	SetEntityPlayerInteractCallback("door3", "checkifLocked", false);
	SetEntityPlayerInteractCallback("door4", "checkifLocked", false);
	SetEntityPlayerInteractCallback("cabinet_simple_1", "checkifLockedC", false);
	
	SetLocalVarInt("openCabinet", 1);
	
	if((asName == "beginning")||(asName == "beginning1")||(asName == "beginning2")){
		FadeIn(1);
		
		SetPlayerActive(true);
		SetPlayerSanity(100);
		SetPlayerHealth(100);
		SetPlayerMoveSpeedMul(0);
		SetPlayerRunSpeedMul(0);
		SetPlayerJumpDisabled(true);
		SetPlayerCrouchDisabled(true);
		
		
		if(!HasItem("keyFinal")){
			CreateEntityAtArea("key"+GetLocalVarInt("keyOn"), "key_tomb_rusty.ent", "genKey", false);
			
			AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach1", "hintAndDie1", true, 1);
			AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach2", "hintAndDie1", true, 1);
			AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach3", "hintAndDie1", true, 1);
			AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach4", "hintAndDie1", true, 1);
			
			SetEntityPlayerInteractCallback("key"+GetLocalVarInt("keyOn"), "giveFinalKey", true);
			
			SetMessage("Messages", "useShovel", 15);
			
			SetInventoryDisabled(true);
			
			AddTimer("halfMark1", 90, "halfMark1");
			AddTimer("tookTooLong", 120, "hintAndDie2"); 
			AddTimer("startStatic", 0.1, "randomStatic");
			AddTimer("startStatic2", 0.1, "randomStatic2");
		}else{
			SetInventoryDisabled(false);
			
			AddTimer("halfMark1", 20, "halfMark1");
			AddTimer("tookTooLong", 40, "hintAndDie2"); 
			AddTimer("startStatic", 0.1, "randomStatic");
			AddTimer("startStatic2", 0.1, "randomStatic2");
		}
		
		//SPAWN SHOVELS
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+1), "shovel.ent", "genShovel_1", false);
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+2), "shovel.ent", "genShovel_2", false);
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+3), "shovel.ent", "genShovel_3", false);
		AddTimer("shoveShovels", 0.1, "shoveShovels");
	}
	if(asName == "getOut1"){
		FadeIn(1);
		
		SetPlayerActive(true);
		
		AddTimer("halfMark1", 20, "halfMark1");
		AddTimer("tookTooLong", 40, "hintAndDie2"); 
		AddTimer("startStatic", 0.1, "randomStatic");
		AddTimer("startStatic2", 0.1, "randomStatic2");
		
		//SPAWN SHOVELS
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+1), "shovel.ent", "genShovel_1", false);
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+2), "shovel.ent", "genShovel_2", false);
		CreateEntityAtArea("shovel"+(GetLocalVarInt("shovelOn")+3), "shovel.ent", "genShovel_3", false);
		AddTimer("shoveShovels", 0.1, "shoveShovels");
	}
	if(asName == "room2"){
		SetPlayerActive(true);
		SetPlayerSanity(100);
		SetPlayerHealth(100);
		
		SetLocalVarInt("lvl1room2", 1);
		RemoveTimer("halfMark1");
		RemoveTimer("tookTooLong");
		RemoveTimer("tookTooLong2");
		RemoveTimer("tookTooLong3");
		RemoveTimer("hintAndDie2");
		RemoveTimer("coughSounds");
		
		AddEntityCollideCallback("Player", "room1", "room1", true, 1);
		RemoveEntityCollideCallback("Player", "room2");
		
		AddTimer("startStatic", 0.1, "randomStatic");
		AddTimer("startStatic2", 0.1, "randomStatic2");
		
		SetSwingDoorClosed("door1", true, false);
		SetSwingDoorLocked("door1", true, false);
		
		SetSwingDoorClosed("cabinet_simple_1", true, false);
		SetSwingDoorLocked("cabinet_simple_1", true, false);
		
		AddTimer("monsterInCloset", 2.7, "monsterInCloset");
		AddTimer("monsterInClosetM", 2.7, "monsterInClosetM");
		AddTimer("spawnMonster1", 15, "spawnMonster1");
		
		if(GetLocalVarInt("haveHallwayKey") == 1){
			RemoveItem("hallwayKey");
			CreateEntityAtArea("Hkey2", "key_tomb.ent", "genHkey2", false);
			SetEntityPlayerInteractCallback("Hkey2", "giveHallwayKey", true);
			SetLocalVarInt("haveHallwayKey", 0);
		}
		
		CheckPoint("room2", "room2S", "died", "deathHints", "sneaky");
	}
	if(asName == "room3"){
		FadeOut(0);
		
		SetEntityActive("door2Block1", false);
		SetEntityActive("door2Block2", false);
		SetEntityActive("door2Block3", false);
		SetEntityActive("door2Block4", false);
		SetEntityActive("door3Block1", false);
		SetEntityActive("door3Block2", false);
		SetEntityActive("door3Block3", false);
		SetEntityActive("room2Block1", false);
		SetEntityActive("room2Block2", false);
		SetEntityActive("room2Block3", false);
		SetEntityActive("room2Block4", false);
		SetEntityActive("room2Block5", false);
		SetEntityActive("room2Block6", false);
		SetEntityActive("cabinetBlock", false);
		
		SetSwingDoorClosed("door2", true, false);
		SetSwingDoorLocked("door2", true, false);
		SetSwingDoorClosed("door3", true, false);
		SetSwingDoorLocked("door3", true, false);
		SetLocalVarInt("cutScene1", 2);
		SetLocalVarInt("room2Init", 0);
		AddTimer("startCutScene", 1, "startCutScene");
		SetPlayerActive(false);
		RemoveEntityCollideCallback("servant_grunt_2", "atDoor");
		RemoveEntityCollideCallback("servant_grunt_2", "atDoor3");
		RemoveEntityCollideCallback("servant_grunt_2", "checkRoom2");
		RemoveEntityCollideCallback("servant_grunt_2", "checkRoom3");
		AddTimer("resetDoorStatus", 2, "resetDoorStatus");
	}
	if(asName == "start2"){
		SetEntityActive("head", false);
		
		SetEntityPlayerInteractCallback("door1", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door2", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door3", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door4", "checkifLocked", false);
		
		SetLocalVarInt("door2Open", 0);
		SetLocalVarInt("door3Open", 0);
		
		SetEntityActive("door2Block1", false);
		SetEntityActive("door2Block2", false);
		SetEntityActive("door2Block3", false);
		SetEntityActive("door2Block4", false);
		SetEntityActive("door3Block1", false);
		SetEntityActive("door3Block2", false);
		SetEntityActive("door3Block3", false);
		SetEntityActive("cabinetBlock", false);
		
		SetSwingDoorClosed("door2", true, false);
		SetSwingDoorLocked("door2", false, false);
		SetSwingDoorClosed("door3", true, false);
		SetSwingDoorLocked("door3", false, false);
		SetSwingDoorClosed("door4", true, false);
		SetSwingDoorLocked("door4", false, false);
		
		AddEntityCollideCallback("door2Open", "door2", "updateDoor2", false, 0);
		AddEntityCollideCallback("door3Open", "door3", "updateDoor3", false, 0);
		
		SetEntityActive("servant_grunt_2", true);
		
		AddEntityCollideCallback("servant_grunt_2", "atDoor", "instaDownDoor2", false, 0);
		AddEntityCollideCallback("servant_grunt_2", "atDoor3", "instaDownDoor3", false, 0);
		AddEntityCollideCallback("servant_grunt_2", "checkRoom2", "controlRoom2", false, 0);
		AddEntityCollideCallback("servant_grunt_2", "checkRoom3", "controlRoom3", false, 0);
		
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_43", 0.001, "walk");
	}
}

void resetDoorStatus(string &in asTimer){
	RemoveEntityCollideCallback("door2Open", "door2");
	RemoveEntityCollideCallback("door3Open", "door3");
	SetLocalVarInt("door2Open", 0);
	SetLocalVarInt("door3Open", 0);
	AddEntityCollideCallback("door2Open", "door2", "updateDoor2", false, 0);
	AddEntityCollideCallback("door3Open", "door3", "updateDoor3", false, 0);
}

void fadePlayerIn(string &in asTimer){
	FadeIn(4);
	FadePlayerFOVMulTo(1, 0.5);
	FadeImageTrailTo(0, 0.5);
	PlayGuiSound("react_pant.snt", 1);
	PlayMusic("intro_wake.ogg", false, 1, 0, 0, true);
	AddTimer("aspectMul", 2, "playerAspectMul");
}

void startAmb(string &in asTimer){
	PlayMusic("ambient1.ogg", true, 1, 2, 1, true);
}

void shoveShovels(string &in asTimer){
	AddPropImpulse("shovel"+(GetLocalVarInt("shovelOn")+1), 0, 0, -0.2, "world");
	AddPropImpulse("shovel"+(GetLocalVarInt("shovelOn")+2), 0, 0, -0.2, "world");
	AddPropImpulse("shovel"+(GetLocalVarInt("shovelOn")+3), 0, 0, -0.2, "world");
	AddTimer("shovelStatic", 0.2, "shovelStatic");
}

void shovelStatic(string &in asTimer){
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+1), true);
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+2), true);
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+3), true);
	if(GetLocalVarInt("shovelOn") > 0){
		AddTimer("releaseShovels", 0.1, "releaseShovels");
	}
}

void releaseShovels(string &in asTimer){
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+1), false);
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+2), false);
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+3), false);
}

void playerAspectMul(string &in asTimer){
	AddTimer("beginningMessage", 3, "beginningMessage");
	AddTimer("wtlf", 10, "makeSqueaks");
	SetPlayerActive(true);
}

void beginningMessage(string &in asTimer){
	SetMessage("Messages", "strappedChair", 10);
}

void h4x(string &in asTimer){
	
	FadeIn(4);
	FadePlayerFOVMulTo(1, 0.5);
	FadeImageTrailTo(0, 0.5);
	PlayGuiSound("react_pant.snt", 1);
	
	GiveItem("keyFinal", "key_tomb_rusty.ent", "key1", "key_tomb_rusty.tga", 1);
	SetLocalVarInt("haveHallwayKey", 1);
	GiveItem("hallwayKey", "key_tomb.ent", "Hkey2", "key_tomb.tga", 1);
	
	SetEntityPlayerInteractCallback("Hkey2", "giveHallwayKey", true);
	AddUseItemCallback("unlockDoor1", "hallwayKey", "door1", "unlockDoor1", true);
	AddUseItemCallback("keyFinal", "keyFinal", "strapChair", "releaseSelf", true);
	
	AddTimer("coughSounds", 2, "makeCough");
	AddTimer("halfMark1", 90, "halfMark1");
	AddTimer("tookTooLong", 120, "hintAndDie2");
	
	SetEntityPlayerInteractCallback("key"+GetLocalVarInt("keyOn"), "giveFinalKey", true);
	SetInventoryDisabled(false);
}

void randomStatic(string &in asTimer){
	if(GetLocalVarInt("staticNumb") == 1){
		SetEntityActive("static1", true);
		SetEntityActive("static2", false);
		SetEntityActive("static3", false);
		SetEntityActive("static4", false);
		SetLocalVarInt("staticNumb", GetLocalVarInt("staticNumb")+1);
		AddTimer("static"+GetLocalVarInt("staticNumb"), 0.01, "randomStatic");
		return;
	
	}else if(GetLocalVarInt("staticNumb") == 2){
		SetEntityActive("static1", false);
		SetEntityActive("static2", true);
		SetEntityActive("static3", false);
		SetEntityActive("static4", false);
		SetLocalVarInt("staticNumb", GetLocalVarInt("staticNumb")+1);
		AddTimer("static"+GetLocalVarInt("staticNumb"), 0.05, "randomStatic");
		return;
	
	}else if(GetLocalVarInt("staticNumb") == 3){
		SetEntityActive("static1", false);
		SetEntityActive("static2", false);
		SetEntityActive("static3", true);
		SetEntityActive("static4", false);
		SetLocalVarInt("staticNumb", GetLocalVarInt("staticNumb")+1);
		AddTimer("static"+GetLocalVarInt("staticNumb"), 0.05, "randomStatic");
		return;
	
	}else if(GetLocalVarInt("staticNumb") == 4){
		SetEntityActive("static1", false);
		SetEntityActive("static2", false);
		SetEntityActive("static3", false);
		SetEntityActive("static4", true);
		SetLocalVarInt("staticNumb", 1);
		AddTimer("static"+GetLocalVarInt("staticNumb"), 0.05, "randomStatic");
		return;
	
	}
}

void makeSqueaks(string &in asTimer){
	if(GetLocalVarInt("squeakOn") < 5){
		PlaySoundAtEntity("squeak", "joint_metal_squeak_move.ogg", "squeak"+GetLocalVarInt("squeakOn"), 0, false);
		SetLocalVarInt("squeakOn", GetLocalVarInt("squeakOn")+1);
		AddTimer("squeak", 2.25, "makeSqueaks");
	}else if(GetLocalVarInt("squeakOn") == 5){
		PlaySoundAtEntity("squeak", "joint_metal_squeak_move.ogg", "squeak"+GetLocalVarInt("squeakOn"), 0, false);
		SetLocalVarInt("squeakOn", GetLocalVarInt("squeakOn")+1);
		makeMove();
		AddTimer("squeak", 2.25, "makeSqueaks");
	}else if(GetLocalVarInt("squeakOn") == 6){
		PlaySoundAtEntity("squeak", "joint_metal_squeak_move.ogg", "squeak"+GetLocalVarInt("squeakOn"), 0, false);
		SetLocalVarInt("squeakOn", GetLocalVarInt("squeakOn")+1);
		AddTimer("squeak", 1, "makeSqueaks");
	}else{
		SetPlayerActive(false);
		StartPlayerLookAt("enemy", 30, 30, "");
		PlayGuiSound("react_pant.snt", 1);
		PlayGuiSound("intro_billy.ogg", 100);
		StopSound("squeak", 0.01);
		RemoveTimer(asTimer);
		
		AddTimer("leave", 24, "billyLeaves");
		AddTimer("makeKey", 25, "activateKey");
		
		AddTimer("ST1", 2, "subTitles");
		AddTimer("ST2", 4.3, "subTitles");
		AddTimer("ST3", 9.3, "subTitles");
		AddTimer("ST4", 11.5, "subTitles");
		AddTimer("ST5", 14.8, "subTitles");
		AddTimer("ST6", 19.1, "subTitles");
		AddTimer("ST7", 23.2, "subTitles");
		AddTimer("ST8", 28, "subTitles");
	}
}

void subTitles(string &in asTimer){
	SetMessage("Messages", asTimer, 5);
}

void makeMove(){
	SetEntityActive("enemy", true);
	SetEnemyDisableTriggers("enemy", false);
	AddEnemyPatrolNode("enemy", "PathNodeArea_1", 0, "");
}

void activateKey(string &in asTimer){
	CreateEntityAtArea("key"+GetLocalVarInt("keyOn"), "key_tomb_rusty.ent", "genKey", false);
}

void billyLeaves(string &in asTimer){
	AddEntityCollideCallback("enemy", "deleteEnemy1", "deleteEnemy1", true, 1);
	AddEnemyPatrolNode("enemy", "PathNodeArea_2", 0, "");
}

void deleteEnemy1(string &in asParent, string &in asChild, int alState){
	SetEntityActive("enemy", false);
	SetPlayerActive(true);
	SetSanityDrainDisabled(false);
	StopPlayerLookAt();
	
	AddTimer("coughSounds", 2, "makeCough");
	AddTimer("halfMark1", 90, "halfMark1");
	AddTimer("tookTooLong", 120, "hintAndDie2");
	
	AddUseItemCallback("keyFinal", "keyFinal", "strapChair", "releaseSelf", true);
	AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach1", "hintAndDie1", false, 1);
	AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach2", "hintAndDie1", false, 1);
	AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach3", "hintAndDie1", false, 1);
	AddEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach4", "hintAndDie1", false, 1);
	
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+1), false);
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+2), false);
	SetPropStaticPhysics("shovel"+(GetLocalVarInt("shovelOn")+3), false);
	
	SetEntityPlayerInteractCallback("key"+GetLocalVarInt("keyOn"), "giveFinalKey", true);
	
	SetMessage("Messages", "getKey", 8);
}

void makeCough(string &in asTimer){
	PlayGuiSound("player_cough.snt", 5);
	AddTimer("coughSounds", RandInt(4, 8), "makeCough");
}

void giveFinalKey(string &in asEntity){
	SetInventoryDisabled(false);
	RemoveItem("key"+GetLocalVarInt("keyOn"));
	GiveItem("keyFinal", "key_tomb_rusty.ent", "key1", "key_tomb_rusty.tga", 1);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////RELEASED FROM CHAIR//////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void releaseSelf(string &in asItem, string &in asEntity){
	CheckPoint("getOut1", "PlayerStartArea_1", "died", "deathHints", "getOut1");
	
	MovePlayerHeadPos(0, 0, 0, 3, 1);
	SetPlayerMoveSpeedMul(1);
	SetPlayerRunSpeedMul(1);
	SetPlayerJumpDisabled(false);
	SetPlayerCrouchDisabled(false);
	
	AddLocalVarInt("lightsOn", 0);
	AddLocalVarInt("lightsOn2", 0);
	AddLocalVarInt("lightsOn3", 0);
	AddLocalVarInt("lightsOn4", 0);
	SetEntityPlayerInteractCallback("light_switch_1", "switchLights", false);
	SetEntityPlayerInteractCallback("light_switch_2", "switchLights2", false);
	SetEntityPlayerInteractCallback("light_switch_3", "switchLights3", false);
	SetEntityPlayerInteractCallback("light_switch_4", "switchLights4", false);
	
	PlaySoundAtEntity("scaredDude", "scaredMale.snt", "otherRoom", 0, false);
	
	SetEntityPlayerInteractCallback("note_letter_1", "pickedUpNote", true);
	
	AddEntityCollideCallback("Player", "room2", "room2", true, 1);
	
	AddEntityCollideCallback("Player", "clockBells", "startClockNoise", true, 1);
	
	AddLocalVarInt("staticNumb2", 1);
	AddTimer("startStatic2", 0.1, "randomStatic2");
	
	RemoveItem("keyFinal");
}

void startClockNoise(string &in asParent, string &in asChild, int alState){
	PlaySoundAtEntity("clock_area", "clock_ring.snt", "clock_area", 0, false);
	StartPlayerLookAt("clock_area", 7, 7, "releaseLook");
}

void pickedUpNote(string &in asEntity){
	AddEntityCollideCallback("Player", "startTv", "startTv", true, 1);
}

void giveHallwayKey(string &in asEntity){
	RemoveItem("Hkey2");
	SetLocalVarInt("haveHallwayKey", 1);
	GiveItem("hallwayKey", "key_tomb.ent", "Hkey2", "key_tomb.tga", 1);
	AddUseItemCallback("unlockDoor1", "hallwayKey", "door1", "unlockDoor1", true);
}

void room1(string &in asParent, string &in asChild, int alState){
	if(GetLocalVarInt("seenTV") == 0){
		AddTimer("tookTooLong2", 30, "hintAndDie2");
	}else{
		AddTimer("tookTooLong3", 30, "hintAndDie2");
	}
	AddTimer("halfMark1", 15, "halfMark1");
	AddTimer("coughSounds", 2, "makeCough");
	
	AddEntityCollideCallback("Player", "room2", "room2", true, 1);
}

void room2(string &in asParent, string &in asChild, int alState){
	if(GetLocalVarInt("lvl1room2") == 0){
		PlayMusic("safe_moment.ogg", false, 1, 0, 0, true);
		AddTimer("startAmb", 6, "startAmb");
		
		CheckPoint("room2", "room2S", "died", "deathHints", "sneaky");
		AddLocalVarInt("lvl1room2", 1);
		RemoveTimer("halfMark1");
		RemoveTimer("tookTooLong");
		RemoveTimer("tookTooLong2");
		RemoveTimer("tookTooLong3");
		RemoveTimer("hintAndDie2");
		RemoveTimer("coughSounds");
		
		PlayGuiSound("react_sigh2.ogg", 5);
		
		AddEntityCollideCallback("Player", "room1", "room1", true, 1);
		AddEntityCollideCallback("Player", "blockDoor1A", "blockDoor1", false, 0);
		
		SetPlayerHealth(100);
		
		AutoSave();
	}else{
		RemoveTimer("halfMark1");
		RemoveTimer("tookTooLong");
		RemoveTimer("tookTooLong2");
		RemoveTimer("hintAndDie2");
		RemoveTimer("coughSounds");
		
		PlayGuiSound("react_sigh2.ogg", 5);
		
		AddEntityCollideCallback("Player", "room1", "room1", true, 1);
		
		SetPlayerHealth(100);
	}
}

void blockDoor1(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		SetEntityActive("door1Block", false);
	}else{
		SetEntityActive("door1Block", true);
	}
}

void switchLights(string &in asEntity){
	if(GetLocalVarInt("lightsOn") == 0){
		SetLightVisible("lightUp1", true);
		SetLightVisible("lightUp2", true);
		SetLightVisible("lightUp3", true);
		SetLightVisible("lightUp4", true);
		SetLightVisible("lightUp5", true);
		SetLightVisible("lightUp6", true);
		SetLightVisible("lightUp7", true);
		SetLocalVarInt("lightsOn", 1);
		PlayGuiSound("light_on.ogg", 10);
	}else{
		SetLightVisible("lightUp1", false);
		SetLightVisible("lightUp2", false);
		SetLightVisible("lightUp3", false);
		SetLightVisible("lightUp4", false);
		SetLightVisible("lightUp5", false);
		SetLightVisible("lightUp6", false);
		SetLightVisible("lightUp7", false);
		SetLocalVarInt("lightsOn", 0);
		PlayGuiSound("light_off.ogg", 10);
	}
}

void switchLights2(string &in asEntity){
	if(GetLocalVarInt("lightsOn2") == 0){
		SetLightVisible("lightUp8", true);
		SetLightVisible("lightUp9", true);
		SetLightVisible("lightUp20", true);
		SetLightVisible("lightUp21", true);
		SetLightVisible("lightUp22", true);
		SetLocalVarInt("lightsOn2", 1);
		PlayGuiSound("light_on.ogg", 10);
	}else{
		SetLightVisible("lightUp8", false);
		SetLightVisible("lightUp9", false);
		SetLightVisible("lightUp20", false);
		SetLightVisible("lightUp21", false);
		SetLightVisible("lightUp22", false);
		SetLocalVarInt("lightsOn2", 0);
		PlayGuiSound("light_off.ogg", 10);
	}
}

void switchLights3(string &in asEntity){
	if(GetLocalVarInt("lightsOn3") == 0){
		SetLightVisible("PointLight_11", true);
		SetLightVisible("PointLight_12", true);
		SetLightVisible("PointLight_13", true);
		SetLightVisible("PointLight_14", true);
		SetLightVisible("PointLight_15", true);
		SetLightVisible("PointLight_16", true);
		SetLightVisible("PointLight_17", true);
		SetLightVisible("PointLight_18", true);
		SetLightVisible("PointLight_19", true);
		SetLightVisible("PointLight_20", true);
		SetLightVisible("PointLight_21", true);
		SetLocalVarInt("lightsOn3", 1);
		PlayGuiSound("light_on.ogg", 10);
	}else{
		SetLightVisible("PointLight_11", false);
		SetLightVisible("PointLight_12", false);
		SetLightVisible("PointLight_13", false);
		SetLightVisible("PointLight_14", false);
		SetLightVisible("PointLight_15", false);
		SetLightVisible("PointLight_16", false);
		SetLightVisible("PointLight_17", false);
		SetLightVisible("PointLight_18", false);
		SetLightVisible("PointLight_19", false);
		SetLightVisible("PointLight_20", false);
		SetLightVisible("PointLight_21", false);
		SetLocalVarInt("lightsOn3", 0);
		PlayGuiSound("light_off.ogg", 10);
	}
}

void switchLights4(string &in asEntity){
	if(GetLocalVarInt("lightsOn4") == 0){
		SetLightVisible("PointLight_4", true);
		SetLightVisible("PointLight_5", true);
		SetLightVisible("PointLight_6", true);
		SetLightVisible("PointLight_7", true);
		SetLightVisible("PointLight_8", true);
		SetLightVisible("PointLight_9", true);
		SetLightVisible("PointLight_10", true);
		SetLocalVarInt("lightsOn4", 1);
		PlayGuiSound("light_on.ogg", 10);
	}else{
		SetLightVisible("PointLight_4", false);
		SetLightVisible("PointLight_5", false);
		SetLightVisible("PointLight_6", false);
		SetLightVisible("PointLight_7", false);
		SetLightVisible("PointLight_8", false);
		SetLightVisible("PointLight_9", false);
		SetLightVisible("PointLight_10", false);
		SetLocalVarInt("lightsOn4", 0);
		PlayGuiSound("light_off.ogg", 10);
	}
}

void randomStatic2(string &in asTimer){
	if(GetLocalVarInt("staticNumb2") == 1){
		SetEntityActive("static5", true);
		SetEntityActive("static6", false);
		SetEntityActive("static7", false);
		SetEntityActive("static8", false);
		SetLocalVarInt("staticNumb2", GetLocalVarInt("staticNumb2")+1);
		AddTimer("static2", 0.01, "randomStatic2");
		return;
	
	}else if(GetLocalVarInt("staticNumb2") == 2){
		SetEntityActive("static5", false);
		SetEntityActive("static6", true);
		SetEntityActive("static7", false);
		SetEntityActive("static8", false);
		SetLocalVarInt("staticNumb2", GetLocalVarInt("staticNumb2")+1);
		AddTimer("static2", 0.05, "randomStatic2");
		return;
	
	}else if(GetLocalVarInt("staticNumb2") == 3){
		SetEntityActive("static5", false);
		SetEntityActive("static6", false);
		SetEntityActive("static7", true);
		SetEntityActive("static8", false);
		SetLocalVarInt("staticNumb2", GetLocalVarInt("staticNumb2")+1);
		AddTimer("static2", 0.05, "randomStatic2");
		return;
	
	}else if(GetLocalVarInt("staticNumb2") == 4){
		SetEntityActive("static5", false);
		SetEntityActive("static6", false);
		SetEntityActive("static7", false);
		SetEntityActive("static8", true);
		SetLocalVarInt("staticNumb2", 1);
		AddTimer("static2", 0.05, "randomStatic2");
		return;
	
	}
}

void startTv(string &in asParent, string &in asChild, int alState){
	StopSound("static2", 0);
	PlayGuiSound("billy2.ogg", 10);
	
	//remove static
	RemoveTimer("static2");
	SetEntityActive("static5", false);
	SetEntityActive("static6", false);
	SetEntityActive("static7", false);
	SetEntityActive("static8", false);
	
	SetPlayerActive(false);
	StartPlayerLookAt("TV2", 10, 10, "releaseLook");
	
	//start blue screen
	AddLocalVarInt("blueScreen", 1);
	SetEntityActive("blueScreen1", true);
	SetLightVisible("tvLight", true);
	SetLightVisible("tvLightF", false);
	AddTimer("blueScreen", 0.5, "blueScreen");
	
	AddTimer("ST9", 6.8, "subTitles");
	AddTimer("ST10", 8.8, "subTitles");
	AddTimer("ST11", 12.2, "subTitles");
	AddTimer("ST12", 14.9, "subTitles");
	AddTimer("ST13", 19.5, "subTitles");
	AddTimer("ST14", 23.5, "subTitles");
}

void blueScreen(string &in asTimer){
	if((GetLocalVarInt("blueScreen") == 1)||(GetLocalVarInt("blueScreen") == 3)||(GetLocalVarInt("blueScreen") == 5)){
		SetEntityActive("blueScreen2", true);
		SetEntityActive("blueScreen1", false);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.5, "blueScreen");
	}else if((GetLocalVarInt("blueScreen") == 2)||(GetLocalVarInt("blueScreen") == 4)||(GetLocalVarInt("blueScreen") == 6)){
		SetEntityActive("blueScreen1", true);
		SetEntityActive("blueScreen2", false);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.5, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 7){
		SetEntityActive("blueScreen1", false);
		SetEntityActive("blueScreenPlay", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 1.2, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 8){
		SetEntityActive("blueScreenPlay", false);
		SetEntityActive("static5", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.3, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 9){
		SetEntityActive("static5", false);
		SetEntityActive("static6", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.3, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 10){
		SetEntityActive("static6", false);
		SetEntityActive("static7", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.3, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 11){
		SetEntityActive("static7", false);
		SetEntityActive("static8", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.3, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 12){
		SetEntityActive("static8", false);
		SetEntityActive("static5", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.2, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 13){
		SetEntityActive("static5", false);
		SetEntityActive("billy_tv1", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 9.2, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 14){
		StartPlayerLookAt("cabinet_simple_1", 8, 8, "releaseLook");
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddLocalVarFloat("randomMoan", 1);
		AddLocalVarFloat("randomHit", 1);
		
		AddTimer("monsterInCloset", 2.7, "monsterInCloset");
		AddTimer("monsterInClosetM", 2.7, "monsterInClosetM");
		AddTimer("spawnMonster1", 30, "spawnMonster1");
		
		AddTimer("blueScreen", 3.5, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 15){
		StartPlayerLookAt("TV2", 10, 10, "releaseLook");
		PlayGuiSound("react_pant", 5);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 5.7, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 16){
		SetEntityActive("static5", true);
		SetEntityActive("billy_tv1", false);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.1, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 17){
		SetEntityActive("static5", false);
		SetEntityActive("tvOff1", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.1, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 18){
		SetEntityActive("tvOff1", false);
		SetEntityActive("tvOff2", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.1, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 19){
		SetEntityActive("tvOff2", false);
		SetEntityActive("tvOff3", true);
		SetLocalVarInt("blueScreen", GetLocalVarInt("blueScreen")+1);
		AddTimer("blueScreen", 0.1, "blueScreen");
	}else if(GetLocalVarInt("blueScreen") == 20){
		SetEntityActive("tvOff3", false);
		SetEntityActive("tvOff4", true);
		SetLightVisible("BoxLight_2", false);
		SetLightVisible("tvLight", false);
		SetPlayerActive(true);
		
		CreateEntityAtArea("Hkey2", "key_tomb.ent", "genHkey2", false);
		SetEntityPlayerInteractCallback("Hkey2", "giveHallwayKey", true);
		
		AddLocalVarInt("seenTV", 1);
	}
}

void monsterInCloset(string &in asTimer){
	AddPropImpulse("cabinet_simple_1", 0, 0, 1, "world");
	PlaySoundAtEntity("hitCabinet", "impact_wood_heavy_high.snt", "hitCabinet_1", 0, false);
	CreateParticleSystemAtEntity("cabinetDust", "ps_hit_wood.ps", "hitCabinet_1", false);
	SetLocalVarFloat("randomHit", RandFloat(0.5, 2.5));
	AddTimer("monsterInCloset", GetLocalVarFloat("randomHit"), "monsterInCloset");
}

void monsterInClosetM(string &in asTimer){
	PlaySoundAtEntity("monsterMoan", "amb_hunt.snt", "hitCabinet_1", 0, false);
	SetLocalVarFloat("randomMoan", RandFloat(2, 3.5));
	AddTimer("monsterInClosetM", GetLocalVarFloat("randomMoan"), "monsterInClosetM");
}

void spawnMonster1(string &in asTimer){
	RemoveTimer("monsterInClosetM");
	RemoveTimer("monsterInCloset");

	CreateParticleSystemAtEntity("cabinetDust", "ps_hit_wood.ps", "hitCabinet_1", false);
	CreateParticleSystemAtEntity("cabinetDust", "ps_hit_wood.ps", "hitCabinet_2", false);
	CreateParticleSystemAtEntity("cabinetDust", "ps_hit_wood.ps", "hitCabinet_3", false);
	CreateParticleSystemAtEntity("cabinetDust", "ps_hit_wood.ps", "hitCabinet_4", false);
	CreateParticleSystemAtEntity("cabinetDust", "ps_hit_wood.ps", "hitCabinet_5", false);
	PlaySoundAtEntity("breakOpenCabinet", "break_wood_metal.snt", "hitCabinet_1", 0, false);
	SetSwingDoorLocked("cabinet_simple_1", false, false);
	SetSwingDoorClosed("cabinet_simple_1", false, false);
	AddPropImpulse("cabinet_simple_1", 0, 0, 6, "world");
	
	AddTimer("openCabinet1_"+GetLocalVarInt("openCabinet"), 0.01, "openCabinet");
}

void openCabinet(string &in asTimer){
	SetEntityActive(asTimer, true);
	
	if(GetLocalVarInt("openCabinet") < 4){
		SetLocalVarInt("openCabinet", GetLocalVarInt("openCabinet")+1);
		AddTimer("openCabinet1_"+GetLocalVarInt("openCabinet"), 0.1, "openCabinet");
	}else{
		AddTimer("spawnMonster1B", 0.1, "spawnMonster1B");
	}
}

void spawnMonster1B(string &in asTimer){
	SetEntityActive("openCabinet1_1", false);
	SetEntityActive("openCabinet1_2", false);
	SetEntityActive("openCabinet1_3", false);
	SetEntityActive("openCabinet1_4", false);
	SetEntityActive("servant_grunt_1", true);
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_3", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_4", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_5", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_6", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_7", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_8", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_9", 5, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_10", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_11", 0.01, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_12", 0.01, "");
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////UNLOCKED HALLWAY/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void unlockDoor1(string &in asItem, string &in asEntity){
	RemoveItem("hallwayKey");
	SetSwingDoorLocked("door1", false, true);
	PlayGuiSound("unlock_door.ogg", 100.0f);
	AddEntityCollideCallback("Player", "closeDoor1", "closeDoor1", true, 1);
	AddEntityCollideCallback("Player", "closeDoor2", "closeDoor2", true, 1);
	
	RemoveEntityCollideCallback("Player", "blockDoor1A");
	SetEntityActive("door1Block", false);
}

void closeDoor1(string &in asParent, string &in asChild, int alState){
	SetSwingDoorClosed("door1", true, true);
	SetSwingDoorLocked("door1", true, true);
}

void closeDoor2(string &in asParent, string &in asChild, int alState){
	SetSwingDoorClosed("door2", true, true);
	SetSwingDoorLocked("door2", true, true);
	SetEntityActive("servant_grunt_1", false);
	RemoveTimer("spawnMonster1");
	RemoveTimer("monsterInClosetM");
	RemoveTimer("monsterInCloset");
	
	AddEntityCollideCallback("head", "sacrifice", "startSacrifice", true, 1);
	AddEntityCollideCallback("drawers", "drawersOpen1", "openedDrawer1", false, 0);
	AddEntityCollideCallback("drawers", "drawersOpen2", "openedDrawer2", false, 0);
	AddEntityCollideCallback("drawers", "drawersOpen3", "openedDrawer3", false, 0);
	AddEntityCollideCallback("drawers", "drawersOpen4", "openedDrawer4", false, 0);
	CheckPoint("room3", "pulledSwitch_2", "died", "deathHints", "found");
	AutoSave();
}

void openedDrawer1(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		SetEntityActive("jumpBox1", true);
	}else if(alState == -1){
		SetEntityActive("jumpBox1", false);
	}
}

void openedDrawer2(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		SetEntityActive("jumpBox2", true);
	}else if(alState == -1){
		SetEntityActive("jumpBox2", false);
	}
}

void openedDrawer3(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		SetEntityActive("jumpBox3", true);
	}else if(alState == -1){
		SetEntityActive("jumpBox3", false);
	}
}

void openedDrawer4(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		SetEntityActive("jumpBox4", true);
	}else if(alState == -1){
		SetEntityActive("jumpBox4", false);
	}
}

void startSacrifice(string &in asParent, string &in asChild, int alState){
	SetPlayerActive(false);
	StartPlayerLookAt("sacrifice", 30, 30, "");
	StartScreenShake(0.05, 4, 2, 0);
	PlayGuiSound("general_rock_rumble.ogg", 100);
	AddTimer("finishSacrifice", 4, "finishSacrifice");
}

void finishSacrifice(string &in asTimer){
	AddPropImpulse("head", 0, 1000, 0, "world");
	PlayGuiSound("smash.ogg", 100);
	AddTimer("puzzleEnd", 1, "puzzleEnd");
	AutoSave();
}

void puzzleEnd(string &in asTimer){
	PlayGuiSound("02_puzzle.ogg", 10);
	AddTimer("startCutScene", 3, "startCutScene");
	StopPlayerLookAt();
}

void startCutScene(string &in asTimer){
	if(GetLocalVarInt("cutScene1") == 1){
		FadeOut(1);
		
		SetSanityDrainDisabled(true);
		
		SetEntityActive("door2Block1", false);
		SetEntityActive("door2Block2", false);
		SetEntityActive("door2Block3", false);
		SetEntityActive("door2Block4", false);
		
		SetLocalVarInt("cutScene1", 2);
		AddTimer("startCutScene", 1, "startCutScene");
		
	}else if(GetLocalVarInt("cutScene1") == 2){
		TeleportPlayer("pulledSwitch_1");
		StartPlayerLookAt("endOfHall", 30, 30, "releaseLook");
		MovePlayerHeadPos(0, 2, 0, 100, 1);
		
		SetLocalVarInt("cutScene1", 3);
		AddTimer("startCutScene", 1, "startCutScene");
	}else if(GetLocalVarInt("cutScene1") == 3){
		FadeIn(1);
		AddTimer("pushMe", 0.1, "pushPlayer1");
		StartPlayerLookAt("endOfHall2", 0.4, 0.4, "");
		
		SetLocalVarInt("cutScene1", 4);
		AddTimer("startCutScene", 1, "startCutScene");
	}else if(GetLocalVarInt("cutScene1") == 4){
		SetSwingDoorLocked("door1", false, false);
		SetSwingDoorClosed("door1", false, false);
		SetSwingDoorDisableAutoClose("door1", true);
		
		AddPropImpulse("door1", 3, 0, 0, "world");
		AddTimer("timerPush1", 0.1, "timerPush1");
		
		SetLocalVarInt("cutScene1", 5);
		AddTimer("startCutScene", 4, "startCutScene");
	}else if(GetLocalVarInt("cutScene1") == 5){
		SetSwingDoorLocked("door3", false, false);
		SetSwingDoorClosed("door3", false, false);
		SetSwingDoorDisableAutoClose("door3", true);
		
		AddPropImpulse("door3", -3, 0, 0, "world");
		
		AddTimer("timerPush2", 0.1, "timerPush2");
		
		SetSwingDoorLocked("door1", true, false);
		SetSwingDoorClosed("door1", true, false);
		
		SetLocalVarInt("cutScene1", 6);
		AddTimer("startCutScene", 2, "startCutScene");
	}else if(GetLocalVarInt("cutScene1") == 6){
		FadeOut(2);
		
		RemoveTimer("pushMe");
		
		SetLocalVarInt("cutScene1", 7);
		AddTimer("startCutScene", 2, "startCutScene");
	}else if(GetLocalVarInt("cutScene1") == 7){
		StopPlayerLookAt();
		
		TeleportPlayer("pulledSwitch_2");
		MovePlayerHeadPos(0, 0, 0, 100, 1);
		
		if(GetLocalVarInt("lanternActive") == 1){
			SetLanternActive(true, false);
		}else{
			//do nothing
		}
		
		FadeIn(1);
		
		SetLocalVarInt("cutScene1", 8);
		AddTimer("startCutScene", 1, "startCutScene");
	}else if(GetLocalVarInt("cutScene1") == 8){
		SetPlayerActive(true);
		
		AddEntityCollideCallback("servant_grunt_2", "atDoor", "startKnockDownDoor", true, 1);
		AddEntityCollideCallback("servant_grunt_2", "atDoor2", "openCabinetTimer", true, 1);
		
		SetEnemyDisableTriggers("servant_grunt_2", false);
		SetEnemyDisableTriggers("servant_grunt_2", true);
		
		RemoveEntityCollideCallback("drawers", "drawersOpen1");
		RemoveEntityCollideCallback("drawers", "drawersOpen2");
		RemoveEntityCollideCallback("drawers", "drawersOpen3");
		RemoveEntityCollideCallback("drawers", "drawersOpen4");
		SetEntityActive("jumpBox1", false);
		SetEntityActive("jumpBox2", false);
		SetEntityActive("jumpBox3", false);
		SetEntityActive("jumpBox4", false);
		
		SetSanityDrainDisabled(false);
		
		monster2Continue1();
	}
}

void startKnockDownDoor(string &in asParent, string &in asChild, int alState){
	AddTimer("knockDownDoor", 15, "knockDownDoor");
	//
	//TeleportPlayer("haxTele");///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////HAAAXXXX!!!!
	//SetSwingDoorLocked("door4", false, false);
	//
}

void knockDownDoor(string &in asTimer){
	//AddEntityCollideCallback("box1", "servant_grunt_2", "killBox", true, 1);
	//AddEntityCollideCallback("box1", "atDoor", "killBox", true, 1);
	
	AddPropImpulse("chest1", 0, 0, 5, "world");
	AddPropImpulse("chest2", 0, 0, 5, "world");
	AddTimer("room2BlockOn", 1, "room2BlockOn");
	
	ClearEnemyPatrolNodes("servant_grunt_2");
	SetEnemyDisableTriggers("servant_grunt_2", false);
	SetEnemyDisableTriggers("servant_grunt_2", true);
	SetSwingDoorLocked("door2", false, false);
	SetSwingDoorClosed("door2", false, false);
	SetSwingDoorDisableAutoClose("door2", true);

	AddPropImpulse("door2", -3, 0, 0, "world");

	AddTimer("timerPush3", 0.1, "timerPush3");
}

void instaDownDoor2(string &in asParent, string &in asChild, int alState){
	if(alState == -1){
		SetPropStaticPhysics("door2", false);
		SetEntityActive("door2Block1", false);
		SetEntityActive("door2Block2", false);
		SetEntityActive("door2Block3", false);
		SetEntityActive("door2Block4", false);
	}else{
		if(GetLocalVarInt("door2Open") == 0){
			PlaySoundAtEntity("knockDoorIn2", "break_wood_metal.snt", "door2", 0.001, true);
		}else{
			//
		}
		SetSwingDoorLocked("door2", false, false);
		SetSwingDoorClosed("door2", false, false);
		SetSwingDoorDisableAutoClose("door2", true);

		AddPropImpulse("door2", -3, 0, 0, "world");

		AddTimer("timerPush4", 0.1, "timerPush4");
	}
}

void instaDownDoor3(string &in asParent, string &in asChild, int alState){
	if(alState == -1){
		SetPropStaticPhysics("door3", false);
		SetEntityActive("door3Block1", false);
		SetEntityActive("door3Block2", false);
		SetEntityActive("door3Block3", false);
	}else{
		if(GetLocalVarInt("door3Open") == 0){
			PlaySoundAtEntity("knockDoorIn3", "break_wood_metal.snt", "door3", 0.001, true);
		}else{
			//
		}
		SetSwingDoorLocked("door3", false, false);
		SetSwingDoorClosed("door3", false, false);
		SetSwingDoorDisableAutoClose("door3", true);

		AddPropImpulse("door3", -3, 0, 0, "world");
		
		AddTimer("timerPush5", 0.1, "timerPush5");
	}
}

void updateDoor2(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		SetLocalVarInt("door2Open", 1);
	}else{
		SetLocalVarInt("door2Open", 0);
	}
}

void updateDoor3(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		SetLocalVarInt("door3Open", 1);
	}else{
		SetLocalVarInt("door3Open", 0);
	}
}

void openCabinetTimer(string &in asParent, string &in asChild, int alState){
	ClearEnemyPatrolNodes("servant_grunt_2");
	
	SetEntityActive("cabinetBlock", true);
	SetEntityActive("room2Block2", false);
	SetEntityActive("room2Block3", false);
	SetEntityActive("room2Block4", false);
	
	PlaySoundAtEntity("sniffing", "amb_hunt.snt", "servant_grunt_2", 0.1, true);
	//AddEntityCollideCallback("box1", "boxCheck", "killBox", true, 1);
	AddTimer("openCabinet2", 4, "openCabinet2");
}

void killBox(string &in asParent, string &in asChild, int alState){
	AddPropImpulse(asParent, 0, -1000, 0, "world");
}

void killPainting(string &in asParent, string &in asChild, int alState){
	AddPropImpulse(asParent, 0, -1000, 0, "world");
}

void openCabinet2(string &in asTimer){
	//RemoveEntityCollideCallback("box1", "boxCheck");
	
	AddPropImpulse("cabinet_nice_2", 0, 0, -3, "world");
	//RemoveEntityCollideCallback("box1", "atDoor");
	AddTimer("stopKeepOpen", 7, "stopKeepOpenC");
	AddLocalVarInt("keepOpenInt", 1);
	AddTimer("keepOpen", 0.1, "keepOpen");
}

void keepOpen(string &in asTimer){
	if(GetLocalVarInt("keepOpenInt") == 0){
		//
	}else{
		AddPropImpulse("cabinet_nice_2", 0, 0, -3, "world");
		AddTimer("keepOpen", 0.1, "keepOpen");
	}
}

void stopKeepOpenC(string &in asTimer){
	SetLocalVarInt("keepOpenInt", 0);
	SetLocalVarInt("room2Init", 0);
	SetEntityActive("door2Block1", false);
	SetEntityActive("door2Block2", false);
	SetEntityActive("door2Block3", false);
	SetEntityActive("door2Block4", false);
	AddEntityCollideCallback("servant_grunt_2", "atDoor", "instaDownDoor2", false, 0);
	AddEntityCollideCallback("servant_grunt_2", "atDoor3", "instaDownDoor3", false, 0);
	AddEntityCollideCallback("servant_grunt_2", "checkRoom2", "controlRoom2", false, 0);
	AddEntityCollideCallback("servant_grunt_2", "checkRoom3", "controlRoom3", false, 0);
	AddUseItemCallback("unlockExitDoor", "exitKey", "exitDoor", "unlockExitDoor", false);
	SetEntityPlayerInteractCallback("exitKey", "openDoor4", true);
	SetEntityActive("cabinetBlock", false);
	SetMessage("Messages", "lvl1FindKey", 16);
}

void unlockExitDoor(string &in asItem, string &in asEntity){
	SetLevelDoorLocked("exitDoor", false);
	PlayGuiSound("unlock_door.ogg", 90.0f);
}

void openDoor4(string &in asEntity){
	SetSwingDoorLocked("door4", false, false);
	SetSwingDoorClosed("door4", false, false);
	SetSwingDoorDisableAutoClose("door4", true);
	
	SetGlobalVarInt("progressNumb", 3);
	
	AddPropImpulse("door4", 0, 0, -3, "world");

	AddTimer("openingDoor4", 0.1, "timerPush6");
}

void pushPlayer1(string &in asTimer){
	AddPlayerBodyForce(0, 0, -3000, false);
	AddTimer("pushMe", 0.1, "pushPlayer1");
}

void timerPush1(string &in asTimer){
	AddPropImpulse("door1", 4, 1, 2, "world");
	AddTimer("pushinShitRound1", 1.1, "disableTimerClose1");
}

void disableTimerClose1(string &in asTimer){
	SetSwingDoorDisableAutoClose("door1", false);
	spawnMonster2();
}

void timerPush2(string &in asTimer){
	AddPropImpulse("door3", -4, 1, 2, "world");
	AddTimer("pushinShitRound2", 1.1, "disableTimerClose2");
}

void disableTimerClose2(string &in asTimer){
	SetSwingDoorDisableAutoClose("door3", false);
}

void timerPush3(string &in asTimer){
	AddPropImpulse("door2", -4, 1, 2, "world");
	PlaySoundAtEntity("knockDoorIn", "break_wood_metal.snt", "door2", 0.001, true);
	AddTimer("pushinShitRound3", 1.1, "disableTimerClose3");
}

void disableTimerClose3(string &in asTimer){
	SetSwingDoorDisableAutoClose("door2", false);
	
	SetEntityActive("door2Block1", true);
	SetEntityActive("door2Block2", true);
	SetEntityActive("door2Block3", true);
	SetEntityActive("door2Block4", true);
	
	SetEnemyDisableTriggers("servant_grunt_2", false);
	for(int i = 23; i <= 26; ++i){
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_"+i, 0.001, "walk");
	}
}

void timerPush4(string &in asTimer){
	AddPropImpulse("door2", -4, 1, 2, "world");
	AddTimer("pushinShitRound4", 1.1, "disableTimerClose4");
}

void disableTimerClose4(string &in asTimer){
	SetSwingDoorDisableAutoClose("door2", false);
	SetEntityActive("door2Block1", true);
	SetEntityActive("door2Block2", true);
	SetEntityActive("door2Block3", true);
	SetEntityActive("door2Block4", true);
}

void timerPush5(string &in asTimer){
	AddPropImpulse("door3", -4, 1, 2, "world");
	AddTimer("pushinShitRound5", 1.1, "disableTimerClose5");
}

void disableTimerClose5(string &in asTimer){
	SetSwingDoorDisableAutoClose("door3", false);
	SetEntityActive("door3Block1", true);
	SetEntityActive("door3Block2", true);
	SetEntityActive("door3Block3", true);
}

void timerPush6(string &in asTimer){
	AddPropImpulse("door4", 2, 1, -4, "world");
	AddTimer("pushinShitRoundAllDay", 1.1, "disableTimerClose6");
}

void disableTimerClose6(string &in asTimer){
	SetSwingDoorDisableAutoClose("door4", false);
}

void spawnMonster2(){
	SetGlobalVarInt("progressNumb", 2);
	SetEntityActive("servant_grunt_3", true);
	SetEnemyDisableTriggers("servant_grunt_3", true);
	ClearEnemyPatrolNodes("servant_grunt_3");
	for(int i = 13; i <= 21; ++i){
		AddEnemyPatrolNode("servant_grunt_3", "PathNodeArea_"+i, 0.001, "walk");
	}
}

void monster2Continue1(){
	SetEntityActive("servant_grunt_3", false);
	SetEntityActive("servant_grunt_2", true);
	SetEnemyDisableTriggers("servant_grunt_2", true);
	ClearEnemyPatrolNodes("servant_grunt_2");
	for(int i = 22; i <= 23; ++i){
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_"+i, 0.001, "walk");
	}
}

void controlRoom2(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		if(GetLocalVarInt("room2Init") == 0){
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_45", 0.001, "walk");
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_46", 0.001, "walk");
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_47", 0.001, "walk");
			
			AddPropImpulse("chest1", 0, 0, 5, "world");
			AddPropImpulse("chest2", 0, 0, 5, "world");
			AddTimer("room2BlockOn", 1, "room2BlockOn");
			
			SetLocalVarInt("room2Init", 1);
		}else{
			ClearEnemyPatrolNodes("servant_grunt_2");
			
			AddPropImpulse("chest1", 0, 0, 5, "world");
			AddPropImpulse("chest2", 0, 0, 5, "world");
			AddTimer("room2BlockOn", 1, "room2BlockOn");
			
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_43", 0.001, "walk");
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_44", 0.001, "walk");
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_45", 10, "idle");
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_46", 0.001, "walk");
			AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_47", 0.001, "walk");
		}
	}else{
		ClearEnemyPatrolNodes("servant_grunt_2");
		room2BlockOff();
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_31", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_32", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_33", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_34", 4, "walk");
	}
}

void controlRoom3(string &in asParent, string &in asChild, int alState){
	if(alState == 1){
		ClearEnemyPatrolNodes("servant_grunt_2");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_34", 3, "idle");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_35", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_36", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_37", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_38", 6, "idle");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_39", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_40", 0.001, "walk");
	}else{
		ClearEnemyPatrolNodes("servant_grunt_2");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_41", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_42", 0.001, "walk");
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_43", 0.001, "walk");
	}
}

void room2BlockOn(string &in asTimer){
	SetEntityActive("room2Block1", true);
	SetEntityActive("room2Block2", true);
	SetEntityActive("room2Block3", true);
	SetEntityActive("room2Block4", true);
	SetEntityActive("room2Block5", true);
	SetEntityActive("room2Block6", true);
	AddEntityCollideCallback("Player", "killYourself", "killYourself2", true, 1);
}

void room2BlockOff(){
	SetEntityActive("room2Block1", false);
	SetEntityActive("room2Block2", false);
	SetEntityActive("room2Block3", false);
	SetEntityActive("room2Block4", false);
	SetEntityActive("room2Block5", false);
	SetEntityActive("room2Block6", false);
	SetEntityActive("cabinetBlock", false);
	RemoveEntityCollideCallback("Player", "killYourself");
}

void killYourself2(string &in asParent, string &in asChild, int alState){
	SetEntityActive("room2Block3", false);
	SetEntityActive("room2Block4", false);
	SetEntityActive("room2Block5", false);
	SetEntityActive("cabinetBlock", true);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////START AREA 2/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void startArea2(string &in asEntity, int alState){
	if(GetGlobalVarInt("fromLvl2") == 1){
		if((HasItem("hallwayKey2"))||(GetGlobalVarInt("unlockedLab") == 1)){
			SetMessage("Messages", "lvl1NothingHere", 8);
		}else{
			SetMessage("Messages", "lvl1SomethingHere", 8);
		}
		
		SetEntityActive("head", false);
		SetEntityPlayerInteractCallback("door1", "checkifLocked", false); //leet skeet.
		SetEntityPlayerInteractCallback("door2", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door3", "checkifLocked", false);
		SetEntityPlayerInteractCallback("door4", "checkifLocked", false);
		
		SetLocalVarInt("door2Open", 0);
		SetLocalVarInt("door3Open", 0);
		
		SetEntityActive("door2Block1", false);
		SetEntityActive("door2Block2", false);
		SetEntityActive("door2Block3", false);
		SetEntityActive("door2Block4", false);
		SetEntityActive("door3Block1", false);
		SetEntityActive("door3Block2", false);
		SetEntityActive("door3Block3", false);
		SetEntityActive("cabinetBlock", false);
		
		//AddEntityCollideCallback("box1", "servant_grunt_2", "killBox", true, 1);
		
		AddEntityCollideCallback("door2Open", "door2", "updateDoor2", false, 0);
		AddEntityCollideCallback("door3Open", "door3", "updateDoor3", false, 0);
		
		SetGlobalVarInt("fromLvl2", 0);
		
		SetEntityActive("servant_grunt_2", true);
	
		AddEntityCollideCallback("servant_grunt_2", "atDoor", "instaDownDoor2", false, 0);
		AddEntityCollideCallback("servant_grunt_2", "atDoor3", "instaDownDoor3", false, 0);
		AddEntityCollideCallback("servant_grunt_2", "checkRoom2", "controlRoom2", false, 0);
		AddEntityCollideCallback("servant_grunt_2", "checkRoom3", "controlRoom3", false, 0);
		
		AddEnemyPatrolNode("servant_grunt_2", "PathNodeArea_30", 0.001, "walk");
		
		SetMapDisplayNameEntry("LVL1");
		
		CheckPoint("start2", "backDoor", "died", "deathHints", "sneaky");
		AutoSave();
	}
	SetSwingDoorLocked("door4", false, false);
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////HINT AND DIE/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void hintAndDie1(string &in asParent, string &in asChild, int alState){
	RemoveTimer("halfMark1");
	RemoveTimer("tookTooLong");
	RemoveTimer("tookTooLong2");
	
	CheckPoint("beginning", "PlayerStartArea_1", "died", "deathHints", "beginning");
	SetMessage("Messages", "pushedTooFar", 3);
	FadeOut(3);
	AddTimer("die", 4, "killYourself");
}

void halfMark1(string &in asTimer){
	PlayGuiSound("player_cough.snt", 10);
	SetPlayerHealth(20);
	SetMessage("Messages", "halfMark1", 3);
}

void hintAndDie2(string &in asTimer){
	RemoveTimer("halfMark1");
	RemoveTimer("tookTooLong");
	RemoveTimer("tookTooLong2");
	
	if(asTimer == "tookTooLong2"){
		CheckPoint("beginning2", "PlayerStartArea_1", "died", "deathHints", "tookTooLong2");
	}if(asTimer == "tookTooLong3"){
		CheckPoint("room2", "room2S", "died", "deathHints", "tookTooLong2");
	}else if(asTimer == "tookTooLong"){
		CheckPoint("beginning1", "PlayerStartArea_1", "died", "deathHints", "tookTooLong1");
	}
	
	SetMessage("Messages", "tookTooLong1", 3);
	SetPlayerActive(false);
	SetPlayerSanity(0);
	PlayGuiSound("player_cough.snt", 10);
	FadeOut(3);
	AddTimer("die", 4, "killYourself");
}

void killYourself(string &in asTimer){
	SetEntityActive("key"+GetLocalVarInt("keyOn"), false);
	
	SetEntityActive("shovel"+(GetLocalVarInt("shovelOn")+1), false);
	SetEntityActive("shovel"+(GetLocalVarInt("shovelOn")+2), false);
	SetEntityActive("shovel"+(GetLocalVarInt("shovelOn")+3), false);
	SetLocalVarInt("shovelOn", GetLocalVarInt("shovelOn")+3);
	
	RemoveEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach1");
	RemoveEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach2");
	RemoveEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach3");
	RemoveEntityCollideCallback("key"+GetLocalVarInt("keyOn"), "outOfReach4");
	
	SetLocalVarInt("keyOn", GetLocalVarInt("keyOn")+1);
	
	DisableDeathStartSound();
	SetPlayerHealth(0);
}

void releaseLook(){
	StopPlayerLookAt();
}