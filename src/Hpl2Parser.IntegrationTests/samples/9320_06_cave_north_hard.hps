void OnEnter()
{
	if(ScriptDebugOn())
	{
		SetGlobalVarInt("FastSeekerAchievement", 1);
		SetGlobalVarInt("HealthAchievement", 1);
		SetGlobalVarInt("ItemsAchievement", 1);
		SetGlobalVarInt("NoDeathAchievement", 1);
		//SetGlobalVarInt("StatuesAchievement", 1);
		SetGlobalVarInt("WardrobeAchievement", 1);
		SetGlobalVarInt("EnemiesAchievement", 1);
		SetGlobalVarInt("PuzzleAchievement", 1);
		//SetGlobalVarInt("NoPuzzleAchievement", 1);
		SetGlobalVarInt("NoStatuesAchievement", 1);
		SetGlobalVarInt("SanityAchievement", 1);
		SetGlobalVarInt("SlimesAchievement", 1);
		SetGlobalVarInt("LightsAchievement", 1);
	}
	
	PreloadParticleSystem("ps_acid_web_dissolve.ps");
	PreloadParticleSystem("ps_dust_falling.ps");
	PreloadParticleSystem("ps_light_dust.ps");
	PreloadParticleSystem("ps_light_dust_large.ps");
	PreloadParticleSystem("ps_area_fog.ps");
	PreloadParticleSystem("ps_area_fog_large.ps");
	PreloadParticleSystem("ps_area_fog_small.ps");
	PreloadParticleSystem("ps_area_fog_sewer_long_warmup.ps");
	PreloadParticleSystem("ps_door_damage_wood.ps");
	PreloadParticleSystem("ps_break_wood.ps");
	
	PreloadSound("02_acid_web.snt");
	PreloadSound("02_woosh");
	PreloadSound("02_guardian_idle_rand.snt");
	PreloadSound("02_statue_terror.snt");
	PreloadSound("04_ambience_wind_eerie.snt");
	PreloadSound("06_grunt_roar.snt");
	PreloadSound("06_in_a_bottle.snt");
	PreloadSound("06_statue_heartbeat.snt");
	PreloadSound("06_statue_laugh.snt");
	PreloadSound("sounds/enemy/brute/attack_claw_hit.snt");
	PreloadSound("scare_thump_flash.snt");
	PreloadSound("close_gate.snt");
	PreloadSound("11_glass_crack.snt");
	PreloadSound("13_amb.snt");
	PreloadSound("15_sand_debris.snt");
	PreloadSound("15_amb.snt");
	PreloadSound("15_rock_amb.snt");
	PreloadSound("15_wall_crawl.snt");
	PreloadSound("ui_insanity_touch");
	
	PreloadSound("gameplay_acid_web.snt");
	PreloadSound("lock_door.snt");
	PreloadSound("locked_door.snt");
	PreloadSound("open_door.snt");
	PreloadSound("open_door_long.snt");
	PreloadSound("door_gate_bar_locked.snt");
	PreloadSound("door_mansion_close.snt");
	PreloadSound("door_mansion_open.snt");
	PreloadSound("close_door.snt");
	PreloadSound("close_door_long.snt");
	PreloadSound("unlock_door.snt");
	PreloadSound("react_breath.snt");
	PreloadSound("react_breath_slow.snt");
	PreloadSound("react_pant.snt");
	PreloadSound("react_scare.snt");
	PreloadSound("react_sigh.snt");
	PreloadSound("general_fire_burning.snt");
	PreloadSound("general_fire_burning_low.snt");
	PreloadSound("break_pottery.snt");
	PreloadSound("break_glass_bottle.snt");
	PreloadSound("break_glass_large.snt");
	PreloadSound("break_wood.snt");
	PreloadSound("break_wood_metal.snt");
	PreloadSound("guardian_activated.snt");
	PreloadSound("guardian_ontop.snt");
	PreloadSound("hit_wood.snt");
	PreloadSound("player_climb.snt");
	PreloadSound("player_crouch.snt");
	PreloadSound("player_jump.snt");
	PreloadSound("player_stand.snt");
	PreloadSound("roll_wood.snt");
	PreloadSound("slime_attack_normal_hit.snt");
	PreloadSound("slime_create.snt");
	PreloadSound("slime_loop.snt");
	PreloadSound("step_run_dirt.snt");
	PreloadSound("step_walk_dirt.snt");
	PreloadSound("step_sneak_dirt.snt");
	PreloadSound("step_run_fabric.snt");
	PreloadSound("step_walk_fabric.snt");
	PreloadSound("step_sneak_fabric.snt");
	PreloadSound("step_run_metal.snt");
	PreloadSound("step_walk_metal.snt");
	PreloadSound("step_sneak_metal.snt");
	PreloadSound("step_run_organic.snt");
	PreloadSound("step_walk_organic.snt");
	PreloadSound("step_sneak_organic.snt");
	PreloadSound("step_run_rock.snt");
	PreloadSound("step_walk_rock.snt");
	PreloadSound("step_sneak_rock.snt");
	PreloadSound("step_run_wood.snt");
	PreloadSound("step_run_wood_squeaky.snt");
	PreloadSound("step_walk_wood.snt");
	PreloadSound("step_walk_wood_squeaky.snt");
	PreloadSound("step_sneak_wood.snt");
	PreloadSound("step_sneak_wood_squeaky.snt");
	PreloadSound("flashback_flash.snt");
	PreloadSound("hurt_pant.snt");
	PreloadSound("sanity_damage.snt");
	PreloadSound("sanity_drain_high.snt");
	PreloadSound("sanity_drain_med.snt");
	PreloadSound("sanity_drain_low.snt");
	PreloadSound("sanity_heartbeat.snt");
	PreloadSound("sanity_pant.snt");
	PreloadSound("ui_add_quest.snt");
	PreloadSound("ui_lantern_off.snt");
	PreloadSound("ui_lantern_on.snt");
	PreloadSound("ui_sanity_gain.snt");
	PreloadSound("ui_terror_meter.snt");
	PreloadSound("enemy_hallucination_disappear.snt");

	SetMapDisplayNameEntry("CaveNorth");
	
	for(int i=1; i<=22; i++) SetEntityInteractionDisabled("torch_auto_" + i, true);
	
	if(GetGlobalVarInt("LastQuest") == 1)
	{
		SetupLoadScreen("LoadingHints", "24To25", 0, "game_loading_alexander.jpg");
		
		StartEffectFlash(1.5f, 1.0f, 2.0f);
		PlayGuiSound("enemy_hallucination_disappear", 0.9f);
	
		AddTimer("06_memories_theme.ogg", 0.4f, "TimerPlayMusic");
	
		SetMessage("Jack", "LastQuestSuccess", 18.0f);
		
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0.1f);
		SetPlayerLookSpeedMul(0.5f);
		AddTimer("resetspeedmul", 16.0f, "TimerStopLook");
		
		SetEntityActive("AreaDiscoverSlime", true);
		SetEntityActive("slime_aggro", true);
		if(GetGlobalVarInt("SlimesAchievement") == 0) SetEntityActive("SlimeAggroDamageArea", true);
		SetEntityActive("deformed_man_1", false);
		SetEntityActive("deformed_man_dead_1", true);
		SetEntityActive("fakewall_1", true);
		SetEntityActive("fakewall_2", true);
		SetEntityActive("fakewall_3", false);
		SetEntityActive("castle_arched01_2", false);
		SetEntityActive("note_paper01_1", false);
		SetEntityActive("stool_wood_2", false);
		SetEntityActive("stool_wood_3", true);
		SetEntityActive("lantern_1", true);
		SetEntityActive("AreaBrokenLantern", true);
		SetEntityActive("pool_oil", true);
		
		SetEntityInteractionDisabled("lantern_1", true);
		
		SetSwingDoorLocked("castle_arched01_3", false, false);
		SetEntityPlayerInteractCallback("castle_arched01_3", "", true);
		
		PlaySoundAtEntity("slime_aggro_loop", "slime_loop.snt", "slime_aggro", 0, true);
	}
	else
	{
		if(GetGlobalVarInt("LightsAchievement") == 1)
			SetLanternLitCallback("LanternOilForEver");
		else
			SetLanternLitCallback("LanternOilReduced");
	}
	
	if(GetGlobalVarInt("HealthAchievement") == 1)
		AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("EnemiesAchievement") == 1)
	{
		SetEnemySanityDecreaseActive("grunt_1", false);
		SetEnemySanityDecreaseActive("brute_1", false);
		SetEnemySanityDecreaseActive("suitor_1", false);
	}	
}

void OnLeave()
{
	RemoveTimer("addhealth");
	RemoveTimer("checkhealth");
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
}

void OnStart()
{
	CompleteQuest("StrangeNotesMission", "StrangeNotesMission");

	CheckPoint ("BlueLights", "PlayerStartArea_2", "CPBlueLights", "DeathHints", "NightmaresAreClose");
	
	SetEntityActive("slime_redroom_1", true);
	SetEntityActive("slime_redroom_2", true);
	SetEntityActive("slime_redroom_3", true);

	SetPlayerCrouching(true);

	AddEntityCollideCallback("Player", "AreaEnterDivineCave", "CollideAreaEnterDivineCave", true, 1);
	AddEntityCollideCallback("Player", "AreaEscapeBlueRoom", "CollideAreaEscapeBlueRoom", true, 1);
	AddEntityCollideCallback("Player", "AreaDiscoverStatue", "CollideAreaDiscoverStatue", true, 1);
	AddEntityCollideCallback("Player", "AreaActiveCheckMonstersQuest", "CollideAreaActiveCheckMonstersQuest", true, 1);
	AddEntityCollideCallback("Player", "AreaCheckMonstersQuest", "CollideAreaCheckMonstersQuest", false, 1);
	AddEntityCollideCallback("Player", "AreaInstantDeath_1", "CollideAreaInstantDeath", false, 1);
	AddEntityCollideCallback("Player", "AreaInstantDeath_2", "CollideAreaInstantDeath", false, 1);
	AddEntityCollideCallback("Player", "AreaInstantDeath_3", "CollideAreaInstantDeath", false, 1);
	AddEntityCollideCallback("Player", "AreaDiscoverSlime", "CollideAreaDiscoverSlime", true, 1);
	AddEntityCollideCallback("Player", "AreaStartVision", "CollideAreaStartVision", true, 1);
	AddEntityCollideCallback("Player", "AreaArmourHeads", "CollideAreaArmourHeads", true, 1);
	
	AddEntityCollideCallback("grunt_1", "AreaGruntRoom", "CollideAreaRoom", true, 1);
	AddEntityCollideCallback("grunt_1", "AreaGruntRedRoom", "CollideAreaRedRoom", true, 1);
	AddEntityCollideCallback("brute_1", "AreaBruteRoom", "CollideAreaRoom", true, 1);
	AddEntityCollideCallback("brute_1", "AreaBruteRedRoom", "CollideAreaRedRoom", true, 1);
	AddEntityCollideCallback("suitor_1", "AreaSuitorRoom", "CollideAreaRoom", true, 1);
	AddEntityCollideCallback("suitor_1", "AreaSuitorRedRoom", "CollideAreaRedRoom", true, 1);
	
	AddUseItemCallback("KeyDoor", "key_tomb_rusty_1", "castle_arched01_2", "UsedKeyOnDoor", true);
	AddUseItemCallback("KnifeSlime1", "ceremony_knife_1", "slime_endingdoor", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KnifeSlime2", "ceremony_knife_1", "slime_endingvision", "UsedKnifeOnSlime", false);
	AddUseItemCallback("KeyLevelDoor", "key_tower_1", "level_orb_room_door_1", "UsedKeyOnDoor", true);
	AddUseItemCallback("NeedleLevelDoor", "hollow_needle_1", "level_orb_room_door_1", "UsedNeedleOnDoor", false);

	SetMapDisplayNameEntry("CaveNorth");
	
	SetLightVisible("SpotLight_1", false);
	SetLightVisible("PointLight_1", false);
	SetLightVisible("PointLight_2", false);
	SetLightVisible("PointLight_3", false);
	SetLightVisible("PointLight_4", false);
	SetLightVisible("PointLight_5", false);
	SetLightVisible("PointLight_6", false);
	
	SetupLoadScreen("LoadingHints", "22To23", 0, "game_loading_brennenburg.jpg");
	
	if(GetGlobalVarInt("NoStatuesAchievement") == 1)
	{
		SetEntityActive("AreaDiscoverStatue", false);
		SetEntityActive("note_paper01_1", true);
		SetEntityInteractionDisabled("note_paper01_1", true);
		PlaySoundAtEntity("memorywhispers", "02_insanity_whisper_rand", "AreaStartVision", 0, true);
	}
	if(GetGlobalVarInt("SlimesAchievement") == 1)
	{
		for(int s=1; s<=15; s++)
			SetEntityActive("SlimeDamageArea_" + s, false);
	}
	
	if(ScriptDebugOn())
	{
		if(HasItem("lantern_1") == false) GiveItemFromFile("lantern_1", "lantern.ent");
		if(HasItem("ceremony_knife_1") == false) GiveItemFromFile("ceremony_knife_1", "ceremony_knife.ent");
	}
}

void LanternOilForEver(bool abLit)
{
	if(abLit == true)
	{
		SetPlayerLampOil(100.0f);
		AddTimer("fulloil", 20.0f, "TimerFullOil");
	}
	else
	{
		RemoveTimer("fulloil");
		SetPlayerLampOil(100.0f);
	}
}

void TimerFullOil(string &in asTimer)
{
	SetPlayerLampOil(100.0f);
	AddTimer(asTimer, 20.0f, "TimerFullOil");
}

void LanternOilReduced(bool abLit)
{
	if(abLit == true)
	{
		AddTimer("checkoil", 5.0f, "TimerCheckOil");
	}
	else
	{
		RemoveTimer("checkoil");
	}
}

void TimerCheckOil(string &in asTimer)
{
	if(asTimer == "checkoil")
	{
		if(GetPlayerLampOil() > 2.0f)
		{
			AddPlayerLampOil(-0.726f);
			AddTimer("checkoil", 5.0f, "TimerCheckOil");
		}
	}
}

void TimerHealthAchievement(string &in asTimer)
{
	if(asTimer == "addhealth")
	{
		if(GetPlayerHealth() <= 98.0f)
		{
			AddPlayerHealth(2.0f);
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "checkhealth")
	{
		if(GetPlayerHealth() > 98.0f)
		{
			AddTimer("checkhealth", 10.0f, "TimerHealthAchievement");
		}
		else
		{
			AddTimer("addhealth", 7.0f, "TimerHealthAchievement");
		}
	}
	else if(asTimer == "pausehealth")
	{
		RemoveTimer("addhealth");
		RemoveTimer("checkhealth");
	}
}

void TouchBrokenLantern(string &in asEntity)
{
	SetMessage("Hints", "BrokenLantern", 5.0f);
	PlaySoundAtEntity("lanternbrokesound", "11_glass_crack.snt", asEntity, 0.6f, false);
}

void TimerPlayMusic(string &in asTimer)
{
	PlayMusic(asTimer, false, 0.8f, 0.1f, 10, false);
}

void UsedNeedleOnDoor(string &in asItem, string &in asEntity)
{
	SetMessage("Jack", "UseNeedleFail", 5.0f);
}

void CollideAreaArmourHeads(string &in asParent, string &in asChild, int alState)
{
	AddTimer("scare", 0.6f, "TimerPlayerReactions");
	AddTimer("breath", 2.0f, "TimerPlayerReactions");
	AddTimer("breath", 5.0f, "TimerPlayerReactions");

	AddPropImpulse("armour_nice_complete_3", 0.0f, 0.0f, -10.0f, "world");
	AddPropImpulse("armour_nice_complete_6", 0.0f, 0.0f, -10.0f, "world");
	AddPropImpulse("armour_nice_complete_8", 0.0f, 0.0f, -10.0f, "world");
	AddPropImpulse("armour_nice_complete_10", 0.0f, 0.0f, -10.0f, "world");
	AddPropImpulse("armour_nice_complete_12", 0.0f, 0.0f, -10.0f, "world");
	AddPropImpulse("armour_nice_complete_14", 0.0f, 0.0f, -10.0f, "world");
	AddPropImpulse("armour_nice_complete_4", 0.0f, 0.0f, 10.0f, "world");
	AddPropImpulse("armour_nice_complete_5", 0.0f, 0.0f, 10.0f, "world");
	AddPropImpulse("armour_nice_complete_7", 0.0f, 0.0f, 10.0f, "world");
	AddPropImpulse("armour_nice_complete_9", 0.0f, 0.0f, 10.0f, "world");
	AddPropImpulse("armour_nice_complete_11", 0.0f, 0.0f, 10.0f, "world");
	AddPropImpulse("armour_nice_complete_13", 0.0f, 0.0f, 10.0f, "world");
	
	PlayGuiSound("scare_thump_flash", 1.0f);
	PlayGuiSound("sanity_drain_high", 0.7f);
	StartScreenShake(0.2f, 0.1f, 0.0f, 0.0f);
}

void CollideAreaStartVision(string &in asParent, string &in asChild, int alState)
{
	AddTimer("prehouse", 1.0f, "TimerLoadHouse");
	SetPlayerActive(false);
	PlayGuiSound("scare_thump_flash", 1.0f);
	PlayGuiSound("sanity_drain_high", 0.7f);
	PlayGuiSound("ui_insanity_touch.ogg", 0.8f);
	StartScreenShake(0.2f, 0.1f, 0.0f, 0.0f);
}

void CollideAreaDiscoverSlime(string &in asParent, string &in asChild, int alState)
{
	StartPlayerLookAt("slime_aggro", 2.0f, 2.0f, "");
	AddTimer("", 2.0f, "TimerStopLook");
	AddTimer("breath", 0.5f, "TimerPlayerReactions");
	AddTimer("breath", 2.0f, "TimerPlayerReactions");
	
	PlayMusic("15_paper_daniel03", false, 0.7f, 0.1f, 10, false);
	
	SetEntityActive("fakewall_1", false);
	SetEntityActive("fakewall_2", false);
	SetEntityActive("fakewall_3", false);
}

void CollideAreaInstantDeath(string &in asParent, string &in asChild, int alState)
{
	GivePlayerDamage(100000.0f, "Slash", false, true);
	PlayGuiSound("sounds/enemy/brute/attack_claw_hit.snt", 0.6f);
}

void CollideAreaRoom(string &in asParent, string &in asChild, int alState)
{
	if(asParent == "grunt_1")
	{
		SetEntityActive("redroom_box_9", false);
	
		SetLocalVarInt("GruntInRoom", 1);
	
		SetEnemyDisableTriggers(asParent, true);
		ClearEnemyPatrolNodes(asParent);
		
		TeleportEnemyToNode(asParent, "PathNodeArea_6", true);
		
		AddEnemyPatrolNode(asParent, "PathNodeArea_5", 1.0f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_4", 0.001f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_3", 0.001f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_2", 0.001f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_1", 0.001f, "");
	}
	if(asParent == "brute_1")
	{
		SetEntityActive("redroom_box_8", false);
	
		SetLocalVarInt("BruteInRoom", 1);
	
		SetEnemyDisableTriggers(asParent, true);
		ClearEnemyPatrolNodes(asParent);
		
		TeleportEnemyToNode(asParent, "PathNodeArea_9", true);
		
		AddEnemyPatrolNode(asParent, "PathNodeArea_10", 1.0f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_11", 0.001f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_12", 0.001f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_13", 0.001f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_14", 0.001f, "");
	}
	if(asParent == "suitor_1")
	{
		SetEntityActive("redroom_box_7", false);
	
		SetLocalVarInt("SuitorInRoom", 1);
	
		SetEnemyDisableTriggers(asParent, true);
		ClearEnemyPatrolNodes(asParent);
		
		TeleportEnemyToNode(asParent, "PathNodeArea_16", true);
		
		AddEnemyPatrolNode(asParent, "PathNodeArea_17", 1.0f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_18", 0.001f, "");
		AddEnemyPatrolNode(asParent, "PathNodeArea_19", 0.001f, "");
	}
	if(GetLocalVarInt("GruntInRoom") == 1 && GetLocalVarInt("BruteInRoom") == 1 && GetLocalVarInt("SuitorInRoom") == 1) AddTimer("monsterquest", 30.0f, "TimerCheckQuest");
}

void TimerCheckQuest(string &in asTimer)
{
	if(asTimer == "monsterquest") 
		if(GetLocalVarInt("MonstersQuestComplete") == 0)
		{
			SetLocalVarInt("MonstersQuestComplete", 1);
			CompleteQuest("MonstersInRooms", "MonstersInRooms");
			GiveSanityBoost();
			if(GetGlobalVarInt("ShooterAchievement") == 1)
			{
				AddPlayerHealth(50.0f);
				AddPlayerSanity(50.0f);
			}
			PlayMusic("23_puzzle.ogg", false, 1.0f, 1.0f, 10, false);
			PlayMusic("06_cave_theme.ogg", true, 1.0f, 1.0f, 0, false);
			SetMessage("Jack", "MonstersQuestSuccess", 8.0f);
			FadeEnemyToSmoke("grunt_1", false);
			FadeEnemyToSmoke("brute_1", false);
			FadeEnemyToSmoke("suitor_1", false);
		}
}

void CollideAreaRedRoom(string &in asParent, string &in asChild, int alState)
{
	FadeEnemyToSmoke(asParent, true);
	if(GetLocalVarInt("GruntInRoom") == 1 && GetLocalVarInt("BruteInRoom") == 1 && GetLocalVarInt("SuitorInRoom") == 1)
	{
		SetLocalVarInt("MonstersQuestComplete", 1);
		CompleteQuest("MonstersInRooms", "MonstersInRooms");
		GiveSanityBoost();
		if(GetGlobalVarInt("ShooterAchievement") == 1)
		{
			AddPlayerHealth(50.0f);
			AddPlayerSanity(50.0f);
		}
		PlayMusic("23_puzzle.ogg", false, 1.0f, 1.0f, 10, false);
		PlayMusic("06_cave_theme.ogg", true, 1.0f, 1.0f, 0, false);
		SetMessage("Jack", "MonstersQuestSuccess", 8.0f);
		
		FadeEnemyToSmoke("grunt_1", false);
		FadeEnemyToSmoke("brute_1", false);
		FadeEnemyToSmoke("suitor_1", false);
	}
	if(asParent == "suitor_1") SetEntityActive("redroom_box_7", true);
	if(asParent == "brute_1") SetEntityActive("redroom_box_8", true);
	if(asParent == "grunt_1") SetEntityActive("redroom_box_9", true);
}

void InteractLockedDoor(string &in asEntity)
{
	if(asEntity == "level_orb_room_door_1")
	{
		if(GetGlobalVarInt("NoStatuesAchievement") == 0)
		{
			AddTimer("52", 3.0f, "TimerJackTalk");
			PlayMusic("23_paper_alexander.ogg", false, 1.0f, 3.0f, 10, false);
			PlaySoundAtEntity("memorywhispers", "02_insanity_whisper_rand", "AreaStartVision", 0, true);
			SetPlayerMoveSpeedMul(0.1f);
			SetPlayerRunSpeedMul(0.1f);
		}
	}
	else if(asEntity == "castle_arched01_3") SetMessage("Ch01Level06", "DoorBlocked", 4.0f);
}

void CollideAreaCheckMonstersQuest(string &in asParent, string &in asChild, int alState)
{
	if(GetLocalVarInt("GruntInRoom") == 1 && GetLocalVarInt("BruteInRoom") == 1 && GetLocalVarInt("SuitorInRoom") == 1)
	{
		//CompleteQuest("MonstersInRooms", "MonstersInRooms");
	
		PlayMusic("26_event_agrippa_head.ogg", false, 1.0f, 1.0f, 10, false);
	
		SetMessage("Statue", "MonstersQuestSuccess", 5.0f);
		
		AddTimer("resetspeedmul", 5.0f, "TimerStopLook");
		SetPlayerMoveSpeedMul(0.1f);
		SetPlayerRunSpeedMul(0.1f);
		SetPlayerLookSpeedMul(0.1f);
		StartPlayerLookAt("slime_endingdoor", 2.0f, 2.0f, "");
		
		PlaySoundAtEntity("fadeoutwebsound", "guardian_activated.snt", "fadeoutslime", 2.0f, false);
		CreateParticleSystemAtEntity("fadeoutslimedoor", "particles/ps_acid_web_dissolve.ps", "slime_endingdoor", false);
		CreateParticleSystemAtEntity("fadeoutslimevis", "particles/ps_acid_web_dissolve.ps", "slime_endingvision", false); 
		SetPropActiveAndFade("slime_endingdoor", false, 2.0f);
		SetPropActiveAndFade("slime_endingvision", false, 2.0f);
		
		SetEntityActive(asChild, false);
	}
	else SetMessage("Statue", "MonstersQuestUncomplete", 12.0f);
}

void CollideAreaActiveCheckMonstersQuest(string &in asParent, string &in asChild, int alState)
{
	AddTimer("activemonsters", RandInt(1, 4), "TimerActiveMonsters");

	AddQuest("MonstersInRooms", "MonstersInRooms");
	SetEntityActive("AreaCheckMonstersQuest", true);
	SetEntityActive("slime_redroom_1", false);
	SetEntityActive("slime_redroom_2", false);
	SetEntityActive("slime_redroom_3", false);
	SetLightVisible("RedRoomLight_1", false);
	SetLightVisible("RedRoomLight_2", false);
	SetLightVisible("RedRoomLight_3", false);
	SetMessage("Jack", "51", 8.0f);
	
	SetEntityActive("redroom_box_7", true);
	SetEntityActive("redroom_box_8", true);
	SetEntityActive("redroom_box_9", true);
	
	CheckPoint ("Monsters", "PlayerStartArea_3", "CPMonsters", "Hints", "DefaultDeath");
}

void UsedKnifeOnSlime(string &in asItem, string &in asEntity)
{
	if(asEntity == "slime_endingdoor" || asEntity == "slime_endingvision") SetMessage("Statue", "UseKnifeFail", 8.0f);
}

void CPBlueLights(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	PlayMusic("06_cave_theme.ogg", true, 1.0f, 1.0f, 0, false);
}

void CPMonsters(string &in asName, int alCount)
{
	if(GetGlobalVarInt("ItemsAchievement") == 1)
		if(GetPlayerLampOil() <= 20.0f)
			AddPlayerLampOil(20.0f);
	if(GetGlobalVarInt("FastSeekerAchievement") == 1)
		SetPlayerRunSpeedMul(1.175f);
	if(GetGlobalVarInt("WardrobeAchievement") == 1)
		SetPlayerJumpForceMul(1.175f);
	if(GetGlobalVarInt("NoDeathAchievement") == 1)
		SetPlayerHealth(100.1f);
	if(GetGlobalVarInt("SanityAchievement") == 1)
		SetPlayerSanity(100.1f);
	AddTimer("activemonsters", RandInt(3, 6), "TimerActiveMonsters");
	SetMessage("Statue", "MonstersQuestFail", 8.0f);
	if(GetLocalVarInt("GruntInRoom") == 1) SetEntityActive("redroom_box_9", true);
	if(GetLocalVarInt("BruteInRoom") == 1) SetEntityActive("redroom_box_8", true);
	if(GetLocalVarInt("SuitorInRoom") == 1) SetEntityActive("redroom_box_7", true);
}

void TimerActiveMonsters(string &in asTimer)
{
	if(GetLocalVarInt("GruntInRoom") == 0)
	{
		ClearEnemyPatrolNodes("grunt_1");
		
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_80", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_77", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_66", 5.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_60", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_58", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_57", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_55", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_66", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_77", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_80", 4.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_87", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_89", 2.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_87", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_81", 0.001f, "");
		AddEnemyPatrolNode("grunt_1", "PathNodeArea_83", 2.001f, "");
		
		SetEntityActive("grunt_1", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)
			SetEnemySanityDecreaseActive("grunt_1", false);
	}
	if(GetLocalVarInt("BruteInRoom") == 0)
	{
		ClearEnemyPatrolNodes("brute_1");
		
		AddEnemyPatrolNode("brute_1", "PathNodeArea_66", 2.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_55", 4.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_52", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_48", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_35", 5.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_37", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_42", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_46", 3.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_43", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_42", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_51", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_52", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_53", 0.001f, "");
		AddEnemyPatrolNode("brute_1", "PathNodeArea_54", 2.001f, "");
		
		SetEntityActive("brute_1", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)
			SetEnemySanityDecreaseActive("brute_1", false);
	}
	if(GetLocalVarInt("SuitorInRoom") == 0)
	{
		ClearEnemyPatrolNodes("suitor_1");
		
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_28", 2.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_29", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_157", 1.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_162", 3.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_157", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_29", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_30", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_35", 5.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_30", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_29", 3.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_163", 3.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_168", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_193", 3.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_168", 0.001f, "");
		AddEnemyPatrolNode("suitor_1", "PathNodeArea_29", 0.001f, "");
		
		SetEntityActive("suitor_1", true);
		
		if(GetGlobalVarInt("EnemiesAchievement") == 1)
			SetEnemySanityDecreaseActive("suitor_1", false);
	}
	PlayMusic("06_monsters_theme.ogg", true, 1.0f, 3.0f, 0, false);
}

void CollideAreaDiscoverStatue(string &in asParent, string &in asChild, int alState)
{
	AddTimer("03", 13.0f, "TimerStatueTalk");
	AddTimer("scare", 1.5f, "TimerPlayerReactions");
	SetMessage("Statue", "02", 12.0f);
	
	PlayMusic("04_event_hole.ogg", false, 1.0f, 1.0f, 10, false);
	StopMusic(1.0f, 0);

	AddTimer("resetspeedmul", 5.0f, "TimerStopLook");
	SetPlayerMoveSpeedMul(0.1f);
	SetPlayerRunSpeedMul(0.1f);
	SetPlayerLookSpeedMul(0.1f);
	StartPlayerLookAt("AreaEndingStatue", 2.0f, 2.0f, "");
	
	SetPropActiveAndFade("slime_endingdoor", true, 2.0f);
	SetPropActiveAndFade("slime_endingvision", true, 2.0f);
	PlaySoundAtEntity("createwebsound", "slime_create", "slime_endingdoor", 0, false);
	PlayGuiSound("21_alex_low_freq_rumble", 0.7f);
	
	AddPropImpulse("castle_arched01_2", 0, 0, -10, "world");
	SetSwingDoorLocked("castle_arched01_2", true, false);
	
	SetEntityActive("AreaStartVision", false);
	
	SetLightVisible("SpotLight_1", true);
	SetLightVisible("PointLight_1", true);
	SetLightVisible("PointLight_2", true);
	SetLightVisible("PointLight_3", true);
	SetLightVisible("PointLight_4", true);
	SetLightVisible("PointLight_5", true);
	SetLightVisible("PointLight_6", true);
	SetLampLit("bridge_torch_1", true, true);
	SetLampLit("bridge_torch_2", true, true);
	
	for(int k=7; k<=22; k++) SetLampLit("torch_auto_" + k, true, true);
}

void TimerStatueTalk(string &in asTimer)
{
	if(asTimer == "03")
	{
		AddTimer("monsterroar1", 6.0f, "TimerPlayMonsterRoar");
		SetMessage("Statue", asTimer, 5.0f);
	}
	if(asTimer == "04")
	{
		AddTimer("48", 13.0f, "TimerJackTalk");
		SetMessage("Statue", asTimer, 12.0f);
	}
	if(asTimer == "05")
	{
		AddTimer("49", 8.5f, "TimerJackTalk");
		SetMessage("Statue", asTimer, 7.5f);
	}
	if(asTimer == "06")
	{
		AddTimer("50", 23.0f, "TimerJackTalk");
		SetMessage("Statue", asTimer, 22.0f);
	}
	if(asTimer == "07")
	{	
		AddTimer("53", 4.0f, "TimerJackTalk");
		SetMessage("Statue", asTimer, 4.0f);
	}
}

void TimerJackTalk(string &in asTimer)
{
	if(asTimer == "48")
	{
		AddTimer("05", 9.0f, "TimerStatueTalk");
		SetMessage("Jack", asTimer, 8.0f);
	}
	if(asTimer == "49")
	{
		AddTimer("06", 11.0f, "TimerStatueTalk");
		SetMessage("Jack", asTimer, 10.0f);
	}
	if(asTimer == "50")
	{
		AddTimer("castle_arched01_2", 5.0f, "TimerUnlockDoor");
		SetMessage("Jack", asTimer, 5.0f);
		SetEntityActive("AreaActiveCheckMonstersQuest", true);
	}
	if(asTimer == "52")
	{
		AddTimer("07", 4.0f, "TimerStatueTalk");
		SetMessage("Jack", asTimer, 4.0f);
	}
	if(asTimer == "53")
	{
		AddTimer("54", 5.0f, "TimerJackTalk");
		SetMessage("Jack", asTimer, 5.0f);
	}
	if(asTimer == "54")
	{
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetEntityActive("AreaStartVision", true);
		SetEntityActive("note_paper01_1", true);
		SetEntityInteractionDisabled("note_paper01_1", true);
		if(GetGlobalVarInt("FastSeekerAchievement") == 1)
			SetPlayerRunSpeedMul(1.175f);
		if(GetGlobalVarInt("WardrobeAchievement") == 1)
			SetPlayerJumpForceMul(1.175f);
	}
}

void TimerLoadHouse(string &in asTimer)
{
	if(asTimer == "prehouse")
	{
		AddTimer("", 0.6f, "TimerStopLook");
		AddTimer("house", 0.7f, "TimerLoadHouse");
		StartEffectFlash(1.0f, 2.0f, 1.0f);
		StartPlayerLookAt("AreaLoadHouseLookAt", 2.0f, 2.0f, "");
		StopMusic(0.7f, 10);
		StopMusic(0.1f, 0);
	}
	if(asTimer == "house") ChangeMap("06_house_hard.map", "PlayerStartArea_1", "flashback_flash", "");
}

void TimerUnlockDoor(string &in asTimer)
{
	SetSwingDoorLocked(asTimer, false, true);
}

void TimerPlayMonsterRoar(string &in asTimer)
{
	if(asTimer == "monsterroar1")
	{
		AddTimer("04", 5.0f, "TimerStatueTalk");
		
		AddTimer("", 3.0f, "TimerStopLook");
		AddTimer("scareeffect", 1.0f, "TimerPlayerReactions");
		AddTimer("breatheffect", 3.0f, "TimerPlayerReactions");
		PlaySoundAtEntity("monsterroar1sound", "06_grunt_roar.snt", "AreaGruntSound", 0.1f, false);
		StartPlayerLookAt("AreaGruntSound", 2.5f, 2.5f, "");
	}
}

void PickedUpKey(string &in asEntity)
{
	if(asEntity == "key_tomb_rusty_1")
	{
		if(GetGlobalVarInt("NoStatuesAchievement") == 0)
		{
			AddTimer("bluelight_2", 2.0f, "TimerFadeBlueLights");
			PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", "bluelight_1", 0.5f, false);
			SetLampLit("bluelight_1", false, true);
			SetEntityActive("AreaEscapeBlueRoom", true);
		}
		for(int k=1; k<=6; k++) SetLampLit("torch_auto_" + k, true, true);
	}
}

void TimerFadeBlueLights(string &in asTimer)
{
	GiveSanityDamage(5.0f, false);
	if(asTimer == "bluelight_2")
	{
		AddTimer("bluelight_3", 2.0f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_3")
	{
		AddTimer("bluelight_4", 2.0f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_4")
	{
		AddTimer("bluelight_5", 2.0f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_5")
	{
		AddTimer("bluelight_6", 1.0f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
		
		PlaySoundAtEntity("statue_heartbeat_sound", "06_statue_heartbeat", "Player", 0, true);
	}
	if(asTimer == "bluelight_6")
	{
		AddTimer("bluelight_7", 1.0f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_7")
	{
		AddTimer("bluelight_8", 1.0f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_8")
	{
		AddTimer("bluelight_9", 1.0f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_9")
	{
		AddTimer("bluelight_10", 0.5f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_10")
	{
		AddTimer("bluelight_11", 0.5f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_11")
	{
		AddTimer("bluelight_12", 0.5f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_12")
	{
		AddTimer("bluelight_13", 0.5f, "TimerFadeBlueLights");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
	}
	if(asTimer == "bluelight_13")
	{
		AddTimer("killplayer", 17.0f, "TimerKillPlayer");
		AddTimer("laugh", 5.0f, "TimerLaugh");
		PlaySoundAtEntity("blue_light_sound", "06_in_a_bottle", asTimer, 0.5f, false);
		SetLampLit(asTimer, false, true);
		
		FadeSepiaColorTo(0.6f, 3.0f);
		SetSwingDoorLocked("castle_1", true, true);
		PlayMusic("05_event_steps", false, 1.0f, 1.0f, 10, false);
		SetLanternActive(false, true);
		SetPlayerSanity(10.0f);
		FadeLightTo("PointLight_7", 0.9f, 0.1f, 0.125f, 0.9f, -1, 2);
	}
}

void TimerLaugh(string &in asTimer)
{
	PlayGuiSound("06_statue_laugh", 1.0f);
}

void TimerKillPlayer(string &in asTimer)
{
	PlaySoundAtEntity("slime_attack_normal_hit", "slime_attack_normal_hit.snt", "Player", 0.1f, false);
	GivePlayerDamage(10000000, "BloodSplat", true, true);
	FadeSepiaColorTo(0.0f, 3.0f);
	StopSound("statue_heartbeat_sound", 2.0f);
	FadeLightTo("PointLight_7", 0, 0, 0, 0, -1, 2);
}

void CollideAreaEnterDivineCave(string &in asParent, string &in asChild, int alState)
{
	PlayMusic("06_cave_theme.ogg", true, 1.0f, 1.0f, 0, false);
	SetMessage("Jack", "47", 8.0f);
	for(int i=1; i<=6; i++) SetLampLit("torch_start_" + i, true, true);
}

void CollideAreaEscapeBlueRoom(string &in asParent, string &in asChild, int alState)
{
	for(int i=1; i<=13; i++) RemoveTimer("bluelight_" + i);
	StopSound("statue_heartbeat_sound", 2.0f);
	AddTimer("breath", 0.1f, "TimerPlayerReactions");
}

void UsedKeyOnDoor(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("unlock_door", "unlock_door", asEntity, 0, false);
	SetSwingDoorLocked(asEntity, false, false);
	SetLevelDoorLocked(asEntity, false);
	GiveSanityBoostSmall();
	if(GetGlobalVarInt("ShooterAchievement") == 1)
	{
		AddPlayerHealth(25.0f);
		AddPlayerSanity(25.0f);
	}
	RemoveItem(asItem);
}

void TimerFadeScreen(string &in asTimer)
{
	if(asTimer == "fadein")
	{
		FadeIn(2.0f);
	}
	if(asTimer == "fadeout")
	{
		FadeOut(2.0f);
	}
	if(asTimer == "fadeinactiveplayer")
	{
		FadeIn(2.0f);
		SetPlayerActive(true);
	}
	if(asTimer == "fadeoutactiveplayer")
	{
		FadeOut(2.0f);
		SetPlayerActive(true);	
	}	
}

void TimerStopLook(string &in asTimer)
{
	if(asTimer == "resetspeedmul")
	{
		SetPlayerMoveSpeedMul(1.0f);
		SetPlayerRunSpeedMul(1.0f);
		SetPlayerLookSpeedMul(1.0f);
		if(GetGlobalVarInt("FastSeekerAchievement") == 1)
			SetPlayerRunSpeedMul(1.175f);
		if(GetGlobalVarInt("WardrobeAchievement") == 1)
			SetPlayerJumpForceMul(1.175f);
	}
	if(asTimer == "activeplayer")
	{
		SetPlayerActive(true);
	}
	StopPlayerLookAt();
}

void TimerPlayerReactions(string &in asTimer)
{
	if(asTimer == "scareeffect")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "breatheffect")
	{
		PlayGuiSound("react_breath", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "sigheffect")
	{
		PlayGuiSound("react_sigh", 0.4f);
		FadeSepiaColorTo(0, 0.1f);
		FadeRadialBlurTo(0, 0.1f);
	}
	else if(asTimer == "panteffect")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, false);
		FadeSepiaColorTo(0.5f, 0.025f);
		FadeRadialBlurTo(0.1f, 0.025f);
		SetRadialBlurStartDist(0.2f);
	}
	else if(asTimer == "scare")
	{
		PlayGuiSound("react_scare", 0.7f);
		GiveSanityDamage(8.0f, true);
	}
	else if(asTimer == "breath")
	{
		PlayGuiSound("react_breath", 0.5f);
		GiveSanityDamage(4.0f, false);
	}
	else if(asTimer == "sigh")
	{
		PlayGuiSound("react_sigh", 0.5f);
		GiveSanityDamage(2.0f, false);
	}
	else if(asTimer == "pant")
	{
		PlayGuiSound("react_pant", 0.7f);
		GiveSanityDamage(10.0f, true);
	}
}