////////////////////////////
// Run when entering map
void OnStart()

{
          if(ScriptDebugOn())
          {
               GiveItemFromFile("lantern", "lantern.ent");
               SetPlayerLampOil(100.0f);
 
               for(int i = 0;i < 10;i++)
               {
                    GiveItemFromFile("tinderbox", "tinderbox.ent");
               }
          }
}


////////////////////////////
// Run when entering map
void OnEnter()

{
	//CheckPoint("CheckPoint_1", "PlayerStartArea_1", "StartTimer", "", "");
	AddEntityCollideCallback("Player", "TimerStart", "StartTimer", true, 0);	//StartTimer is the original for the Function CallBack
	SetEntityPlayerInteractCallback("StartButton", "BeginPuzzle", true);
	SetEntityPlayerInteractCallback("resetTimer", "ResetTimer", true);
	SetEntityPlayerLookAtCallback("resetTimer", "ResetTimerText", false);
}

	void StartTimer(string &in asParent, string &in asChild, int alState)
	{
		SetMessage("ScreenMessages", "TimerActivated4", 0);
		AddTimer("Time", 300, "spawnSteve");
		AddTimer("Warn", 240, "Warning");
		CheckPoint("", "PlayerStartArea_1", "Reset", "", "");
		SetEntityActive("resetTimer", true);
		AddDebugMessage("Timer has started", true);
	}
	
	void Reset(string &in asName, int alCount)
	{
		ResetProp("steve");
		SetMessage("ScreenMessages", "TimerActivated4", 0);
		AddTimer("Time", 300, "spawnSteve");
		AddTimer("Warn", 240, "Warning");
		SetEntityActive("resetTimer", true);
	}
	

	void spawnSteve(string &in asTimer)
	{
		SetEntityActive("resetTimer", false);
		SetEntityActive("steve", true);
		ShowEnemyPlayerPosition("steve");
		AddEnemyPatrolNode("steve", "PathNodeArea_1", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_2", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_3", 0.1, "");
	}
	
	void spawnSteve(string &in asParent, string &in asChild, int alState)
	{
		SetEntityActive("steve", true);
		AddEnemyPatrolNode("steve", "PathNodeArea_1", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_2", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_3", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_4", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_5", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_6", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_7", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_8", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_9", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_10", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_11", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_12", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_13", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_14", 0.1, "");
		AddEnemyPatrolNode("steve", "PathNodeArea_15", 0.1, "");
	}
	
	void Warning(string &in asTimer)
	{
		SetMessage("ScreenMessages", "Warning", 0);
	}
	
void BeginPuzzle(string &in asEntity)
{
	SetEntityActive("StartButton", false);
	SetEntityActive("Button1", true);
	SetEntityPlayerInteractCallback("Button1", "FirstButton", true);
	CreateParticleSystemAtEntity("", "ps_dust_whirl_large.ps", "WindBlow", false);
	PlaySoundAtEntity("", "scare_wind.snt", "Player", 0, false);
	PlaySoundAtEntity("", "scare_wind_reverse.snt", "Player", 0, false);
	FadeLightTo("lights", 0, 0, 0, 0, -1, 1);
	SetLampLit("candlestick_wall_1", false, true);
	SetLampLit("candlestick_wall_2", false, true);
	SetLampLit("candlestick_wall_3", false, true);
	SetLampLit("candlestick_wall_4", false, true);
	SetLampLit("candlestick_wall_5", false, true);
	SetLampLit("candlestick_wall_6", false, true);
	SetLampLit("candlestick_wall_7", false, true);
	SetLampLit("candlestick_wall_8", false, true);
	SetLampLit("candlestick_wall_9", false, true);
	SetLampLit("candlestick_wall_10", false, true);
	SetLampLit("candlestick_wall_11", false, true);
	SetLampLit("candlestick_wall_12", false, true);
	SetLampLit("candlestick_wall_13", false, true);
	SetLampLit("chandelier_nice_1", false, true);
	SetLampLit("chandelier_nice_2", false, true);
	SetLampLit("chandelier_nice_3", false, true);
	SetLampLit("chandelier_nice_4", false, true);
}

	void FirstButton(string &in asEntity)
	{
		PlaySoundAtEntity("", "unlock_door.snt", "Player", 0, false);
		SetEntityActive("Button1", false);
		SetEntityActive("Button2", true);
		SetEntityPlayerInteractCallback("Button2", "SecondButton", true);
	}
	
		void SecondButton(string &in asEntity)
		{
			PlaySoundAtEntity("", "unlock_door.snt", "Player", 0, false);
			SetEntityActive("Button2", false);
			SetEntityActive("Button3", true);
			SetEntityPlayerInteractCallback("Button3", "ThirdButton", true);
		}
		
			void ThirdButton(string &in asEntity)
			{
				PlaySoundAtEntity("", "unlock_door.snt", "Player", 0, false);
				SetEntityActive("Button3", false);
				SetEntityActive("Button4", true);
				SetEntityPlayerInteractCallback("Button4", "FourthButton", true);
			}
				
				void FourthButton(string &in asEntity)
				{
					PlaySoundAtEntity("", "unlock_door.snt", "Player", 0, false);
					SetEntityActive("Button4", false);
					SetEntityActive("Button5", true);
					SetEntityPlayerInteractCallback("Button5", "FifthButton", true);
				}
					
					void FifthButton(string &in asEntity)
					{
						PlaySoundAtEntity("", "unlock_door.snt", "Player", 0, false);
						SetEntityActive("Button5", false);
						AddTimer("", 0.3, "UnlockDoor");
					}
					
					void UnlockDoor(string &in asTimer)
					{
						SetEntityActive("resetTimer", false);
						SetSwingDoorClosed("deskdoor", false, true);
						RemoveTimer("Warn");
						RemoveTimer("Time");
						SetSwingDoorDisableAutoClose("mansion_1", true);
						FadeLightTo("lights", 1, 1, 1, 1, -1, 1);
						SetPlayerActive(false);
						AddTimer("", 1.5, "CrackOpen");
						AddTimer("", 4.5, "StopLookAt");
						StartPlayerLookAt("LookatDoor", 2, 2, "");
						PlaySoundAtEntity("", "WW_Secret.snt", "Player", 0, false);
						SetLampLit("candlestick_wall_1", true, true);
						SetLampLit("candlestick_wall_2", true, true);
						SetLampLit("candlestick_wall_3", true, true);
						SetLampLit("candlestick_wall_4", true, true);
						SetLampLit("candlestick_wall_5", true, true);
						SetLampLit("candlestick_wall_6", true, true);
						SetLampLit("candlestick_wall_7", true, true);
						SetLampLit("candlestick_wall_8", true, true);
						SetLampLit("candlestick_wall_9", true, true);
						SetLampLit("candlestick_wall_10", true, true);
						SetLampLit("candlestick_wall_11", true, true);
						SetLampLit("candlestick_wall_12", true, true);
						SetLampLit("candlestick_wall_13", true, true);
						SetLampLit("chandelier_nice_1", true, true);
						SetLampLit("chandelier_nice_2", true, true);
						SetLampLit("chandelier_nice_3", true, true);
						SetLampLit("chandelier_nice_4", true, true);
						GetSwingDoorLocked("mansion_1");
						AddEntityCollideCallback("Player", "ActivateSteve", "spawnSteve", true, 0);
					}
						
						void CrackOpen(string &in asTimer)
							{
								SetSwingDoorLocked("mansion_1", false, false);
								SetSwingDoorClosed("mansion_1", false, false);
								for (int i = 0; i < 10; i++)
										{
											AddTimer("", i * 0.1, "OpenDoor");
										}
							}
					
						void OpenDoor(string &in asTimer)
						{
							
							AddPropForce("mansion_1", 0, 0, -120, "world"); 
						}
						
							void StopLookAt(string &in asTimer)
							{
								SetPlayerActive(true);
								StopPlayerLookAt(); 
							}
void ResetTimer(string &in asEntity)
{
	RemoveTimer("Warn");
	RemoveTimer("Time");
	AddTimer("Warn", 240, "Warning");
	AddTimer("Time", 300, "spawnSteve");
	SetMessage("ScreenMessages", "Confirm_resetTimer", 0);
	SetEntityActive("resetTimer", false);
}

void ResetTimerText(string &in asEntity, int alState)
{
	if (alState ==1)
	{
		SetMessage("ScreenMessages", "resetTimer", 0);
	}
}

						
////////////////////////////
// Run when leaving map
void OnLeave()
{

}
