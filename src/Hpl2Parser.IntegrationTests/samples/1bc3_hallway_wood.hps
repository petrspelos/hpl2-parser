// Loading the map, first time
void OnStart()
{
	ClearSavedMaps();
	SetupLoadScreen("LoadingText", "C01Level02", 1, "");
	
	// DISABLE
	SetEntityInteractionDisabled("deskpad_1", true);
	SetEntityInteractionDisabled("chest_of_drawers_nice_1", true);
	SetEntityInteractionDisabled("stool_wood_1", true);
	SetInventoryDisabled(true);
	int i;
	for(i=1; i<=12; i++) SetEntityInteractionDisabled("candle_floor_"+i, true);
	for(i=1; i<=18; i++) SetEntityInteractionDisabled("torch_static01_"+i, true);
	for(i=1; i<=8; i++) SetEntityInteractionDisabled("torch_floor_"+i, true);
	for(i=1; i<=25; i++) SetEntityInteractionDisabled("candlestick_wall_"+i, true);
	for(i=1; i<=3; i++) SetEntityInteractionDisabled("armour_hallway_"+i, true);
	SetEntityInteractionDisabled("ChandelierHallway", true);
	SetEntityInteractionDisabled("candle_floor_small_1", true);
	for(i=1; i<=2; i++) SetLightVisible("RedLight_"+i, false);

	InitRiddle("riddle_01_knowledge", "PickedUpLetter", 0.1f);

	// INITIALIZATION
	// GiveItemFromFile("lantern", "lantern.ent");
	SetPlayerLampOil(0);
	CheckPoint("start_point", "PlayerStartArea_1", "MapCheckPoint", "DeathMessages", "C01Level01_Hall");
	AddLocalVarInt("hallway_torches_lit", 0);
	AddLocalVarInt("corridor_ambience_playing", 0);
	PreloadSound("general_wind_whirl");
	PreloadSound("break_wood_metal");
	PreloadSound("ui_add_quest");
	PreloadSound("door_mansion_open");
	PreloadSound("impact_metal_chain_high");

	for(i=1; i<=9; i++) AddGlobalVarInt("HaveBlackBookShred"+i, 0);

	// INTERACTIONS
	AddEntityCollideCallback("Player", "ScriptDiningRoomVoice", "DiningRoomVoice", true, 0);
	for(i=1; i<=3; i++) AddEntityCollideCallback("ink_bottle_throw_"+i, "ScriptPaintingArea", "ShowTheDecalHint", true, 0);
	AddEntityCollideCallback("Player", "ScriptDiningRoomLadder", "LadderMoveDown", false, 0);
	AddEntityCollideCallback("LadderDown", "ladder_static", "CollideLadderDown", false, 1);
	AddEntityCollideCallback("Player", "InsideTheCloset", "EnterTheCloset", false, 0);
	// SetEntityPlayerInteractCallback("riddle_01_knowledge_note", "PickedUpLetter", true);
	for(i=1; i<=2; i++) SetEntityPlayerInteractCallback("tinderbox_"+i, "HallwayTurnoffLight", true);
	SetEntityPlayerInteractCallback("key_torture_chamber_1", "GotTheKey", true);
	SetEntityConnectionStateChangeCallback("DiningRoomLever", "PulledTheLever");
	
	// VOICE
	AddEffectVoice("Ch01Level01_01_EnterHallway.ogg", "", "Voice", "Ch01Level01_01_EnterHallway", false, "", 0, 0);
}

void OnEnter()
{
	SetupLoadScreen("LoadingText", "C01Level02", 1, "");
}

// control the checkpoints in this map
void MapCheckPoint(string &in asName, int alCount)
{
	// remember: alCount = 0 at first respawn!
	// resets something when you die
	int i;
	if(asName == "start_point")
	{
		SetSwingDoorLocked("hallway_door", true, false);
		SetSwingDoorClosed("hallway_door", true, false);
	}
	else if(asName == "middle_point")
	{
		SetSwingDoorLocked("DiningRoomDoor", true, false);
		SetSwingDoorLocked("hallway_door", true, false);
		for(i=1; i<=2; i++) SetLampLit("candlestick_floor_"+i, true, false);
		SetLeverStuckState("DiningRoomLever", 0, false);
		SetEntityActive("InsideTheCloset", false);
		SetEntityActive("TheCloset", true);
		SetEntityActive("papercloset_*", true);
		ResetProp("ink_bottle_throw_*");
		SetSwingDoorDisableAutoClose("TheCloset", false);
		SetSwingDoorLocked("TheCloset", false, false);
		SetEntityInteractionDisabled("TheCloset", false);
		ResetProp("DiningRoomDoor");
		DestroyAllDudes("TheDude");
		ResetProp("TheCloset");
		SetEntityActive("DDE_*", true);
		ResetProp("DDE_*");
		//SetPropStaticPhysics("DDE_*", true);
		//SetEntityActive("SDDE_*", true);
	}
	else if(asName == "last_point")
	{
	}
}

// make the dining room light vanish
void HallwayTurnoffLight(string &in asEntity)
{
	SetEntityActive("tinderbox_1", false);
	SetEntityActive("tinderbox_2", false);
	GiveItemFromFile("", "tinderbox");
	SetMessage("Ch01Level01_Hallway", "TinderboxPickedUp", 0.0f);
	float time_lights_off = 1.00f;
	PlaySoundAtEntity("", "general_wind_whirl", "armour_nice_complete_7", time_lights_off, false);
	AddTimer("", time_lights_off, "HallwayWhipeoffLights");
}

// make the dining room light vanish... for real.
void HallwayWhipeoffLights(string &in asTimer)
{
	int i;
	for(i=1; i<=18; i++) SetLampLit("torch_static01_"+i, false, true);
	for(i=1; i<=8; i++) SetLampLit("candlestick_floor_"+i, false, true);
	for(i=1; i<=8; i++) SetLampLit("torch_floor_"+i, false, true);
	for(i=1; i<=8; i++) SetLampLit("candlestick_wall_"+i, false, true);
	for(i=22; i<=25; i++) SetLampLit("candlestick_wall_"+i, false, true);
	for(i=1; i<=4; i++) SetLightVisible("hallwayLight_"+i, false);
	SetLampLit("candle_floor_small_1", false, true);
	SetLampLit("ChandelierHallway", false, true);
	for(i=1; i<=2; i++) SetEntityPlayerInteractCallback("candlestick_floor_"+i, "DiningRoomTurnonTorch", true);
	for(i=3; i<=8; i++) SetEntityPlayerInteractCallback("candlestick_floor_"+i, "DiningRoomTurnonTorch", false);
	AddTimer("", 1, "HallwayWhipeoffLightsVoice");
}

// the voice
void HallwayWhipeoffLightsVoice(string &in asTimer)
{
	AddEffectVoice("Ch01Level01_02_DarkHallway.ogg", "", "Voice", "Ch01Level01_02_DarkHallway", false, "", 0, 0);
}

// when you turn on the torches
void DiningRoomTurnonTorch(string &in asEntity)
{
	string pre = "candlestick_floor_";
	if(asEntity != pre+"1" && asEntity != pre+"2")
	{
		AddTimer(asEntity, 0.66f, "DiningRoomWrongTorch");
		return;
	}
	int num = GetLocalVarInt("hallway_torches_lit");
	if(num >= 3) return;
	int torch = 0;
	if(asEntity == pre+"1") torch = 1;
	else if(asEntity == pre+"2") torch = 2;
	if(num == 0) num = torch;
	else if(num != torch) num = 3;
	if(num >= 3)
	{
		int i;
		for(i=1; i<=8; i++) SetEntityInteractionDisabled("candlestick_floor_"+i, true);
		DiningRoomOpenPassage();
	}
	SetLocalVarInt("hallway_torches_lit", num);
}

// when you turn on the wrong torches
void DiningRoomWrongTorch(string &in asEntity)
{
	PlaySoundAtEntity("", "ui_fire_damage", asEntity, 0, false);
	GiveItemFromFile("", "tinderbox");
	SetLampLit(asEntity, false, true);
}

// make the dining room door open
void DiningRoomOpenPassage()
{
	SetEntityActive("secret_block_box_*", false);
	SetMoveObjectState("moving_armour", 1);
	SetMoveObjectState("hallway_dynwall", 1);
	SetMoveObjectState("dinner_dynwall", 1);
	/*SetEntityActive("hallway_dynwall_down", false);
	SetEntityActive("hallway_dynwall_up", true);
	PlaySoundAtEntity("", "impact_wood_heavy_high", "hallway_dynwall_up", 0, false);*/
	AddEntityCollideCallback("Player", "ScriptSecretPassage", "SecretPassageAmbience", false, 0);
	AddDiary("Ch01Level01_Candlesticks", "bg_diaries");
}

// secret passage ambience music
void SecretPassageAmbience(string &in asParent, string &in asChild, int alState)
{
	int prio = 50;
	if(alState > 0)
	{
		SetPlayerJumpDisabled(true);
		SetPlayerCrouchDisabled(true);
		SetPlayerCrouching(true);
		PlayMusic("C01L01_Corridor.ogg", true, 1, 4, prio, false);
	} else {
		SetPlayerCrouchDisabled(false);
		SetPlayerJumpDisabled(false);
		SetPlayerCrouching(false);
		StopMusic(1, prio);
	}
}

// speaks when enters the dining room
void DiningRoomVoice(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("secret_block_box_*", true);
	SetMoveObjectState("hallway_dynwall", 0);
	SetMoveObjectState("dinner_dynwall", 0);
	SetMoveObjectState("moving_armour", 0);
	//SetLightVisible("SpotLight_2", false);
	FadeLightTo("SpotLight_2", 0, 0, 0, 0, -1, 1);
	RemoveEntityCollideCallback("Player", "ScriptSecretPassage");
	AddTimer("", 2, "DiningRoomVoiceSpeak");
}
void DiningRoomVoiceSpeak(string &in asTimer)
{
	AddEffectVoice("Ch01Level01_03_EnterDiningRoom.ogg", "", "Voice", "Ch01Level01_03_EnterDiningRoom", false, "", 0, 0);
}

// if ink_bottle throwed against painting_nodecal then it shows the arrow
void ShowTheDecalHint(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("painting_nodecal", false);
	SetEntityActive(asChild, false);
}

// pulling the lever makes the dude steps start
void PulledTheLever(string &in theLever, int alState)
{
	if(alState != 0)
	{
		CheckPoint("middle_point", "PlayerStartArea_middle", "MapCheckPoint", "DeathMessages", "C01Level01_Hallway");
		StopAllEffectVoices(0);
		/*SetEntityActive("dinner_dynwall_down", true);
		SetEntityActive("dinner_dynwall_up", false);
		SetEntityActive("hallway_dynwall_down", true);
		SetEntityActive("hallway_dynwall_up", false);
		PlaySoundAtEntity("", "impact_wood_heavy_high", "dinner_dynwall_down", 0, false);
		SetLightVisible("SpotLight_2", false);*/
		SetLeverStuckState(theLever, alState, true);
		SetEntityActive("InsideTheCloset", true);
		AddTimer("", 6, "DudesArriving");
		AddTimer("", 2.66f, "DudesArrivingSounds");
		AddEffectVoice("Ch01Level01_04_DiningRoomLever.ogg", "", "Voice", "Ch01Level01_04_DiningRoomLever", false, "", 0, 0);
	}
}

// player enters/exits the closet
void EnterTheCloset(string &in asParent, string &in asChild, int alState)
{
	int in_it = 0;
	if(alState == 1) in_it = 1;
	SetLocalVarInt("PlayerInTheCloset", in_it);
}

// a distant sound from the dude
void DudesArrivingSounds(string &in inTimer)
{
	PlaySoundAtEntity("", "door_mansion_open", "Player", 0, false);
}

// makes the steps fx, then the dude comes
void DudesArriving(string &in inTimer)
{
	PlayMusic("diningroom_steps_light.ogg", false, 25, 0, 20, false);
	AddTimer("", 18.5f, "DudeArrived");
}

// dude has arrived.
void DudeArrived(string &in asTimer)
{
	StopMusic(1, 20);
	SetSwingDoorLocked("DiningRoomDoor", false, false);
	int in_the_closet = GetLocalVarInt("PlayerInTheCloset");
	if(in_the_closet == 1 && GetSwingDoorState("TheCloset") == -1)
	{
		SetSwingDoorClosed("TheCloset", true, true);
		SetSwingDoorLocked("TheCloset", true, true);
		//PlayMusic("journal_open.ogg", true, 5.0f, 0.0f, 11, false);
		PlayGuiSound("ui_add_quest", 5.0f);
		AddTimer("", 3.3f, "DudeStopsWriting");
	}
	else
	{
		string theDude = PlaceADude("TheDude", "a_mod_pactum_tenebris/entities/enemy/the_shadow/the_shadow.ent", "TheDudeStartArea");
		//AddPropImpulse("DiningRoomDoor", 0, 0, 1000, "object");
		SetPropHealth("DiningRoomDoor", 0);
		DudeGetsYou(theDude);
		AddEntityCollideCallback(theDude, "OutsideTheCloset", "TheDudeAndTheCloset", true, 0);
		int i;
		//for(i=1; i<=14; i++) AddEntityCollideCallback(theDude, "SDDE_"+i, "DudeSmash", false, 1);
		for(i=1; i<=14; i++) AddEntityCollideCallback(theDude, "DDE_"+i, "DudeSmash", false, 1);
		if(in_the_closet != 1 && GetSwingDoorState("TheCloset") == -1)
		{
			ResetProp("TheCloset");
			SetSwingDoorLocked("TheCloset", true, false);
		}
		else
		{
			SetEntityInteractionDisabled("TheCloset", true);
			SetSwingDoorLocked("TheCloset", false, false);
			SetSwingDoorClosed("TheCloset", false, true);
			if(in_the_closet == 1)
			{
				SetSwingDoorDisableAutoClose("TheCloset", true);
			}
		}
	}
}

// dude destroys everything
void DudeSmash(string &in asParent, string &in asChild, int alState)
{
	/*int cnt = asChild.length() - 1;
	string asEntity = StringSub(asChild, 1, cnt);*/
	string asEntity = asChild;
	SetPropStaticPhysics(asEntity, false);
	//SetPropHealth(asEntity, 0);
	CreateParticleSystemAtEntity("", "ps_break_wood.ps", asChild, false);
	PlaySoundAtEntity("", "break_wood_metal", asChild, 0, false);
	SetEntityActive(asEntity, false);
	//SetEntityActive(asChild, false);
}

// dude destroys the closet
void TheDudeAndTheCloset(string &in asParent, string &in asChild, int alState)
{
	CreateParticleSystemAtEntity("", "ps_break_wood.ps", "TheCloset", false);
	PlaySoundAtEntity("", "break_wood_metal", "TheCloset", 0, false);
	SetPropStaticPhysics("papercloset_*", false);
	SetEntityActive("papercloset_*", false);
	SetEntityActive("TheCloset", false);
}

// dude's writing
void DudeStopsWriting(string &in inStep)
{
	//StopMusic(0.5f, 11);
	AddTimer("step0", 2.75f, "DudesGoing");
}

// dude's going
void DudesGoing(string &in inStep)
{
	int step, maxStep = 20, goneSteps = 5;
	if(inStep == "step0") step = 1;
	else step = GetLocalVarInt("DudesArrivingStep");
	SetLocalVarInt("DudesArrivingStep", step+1);
	float timeout, volume;
	StopMusic(0.0f, 21);
	if(step == goneSteps)
	{
		PlaySoundAtEntity("", "close_door", "DiningRoomDoor", 0, false);
		AddTimer("", 2, "DudeGone");
		return;
	}
	volume = maxStep * 0.25f - (step - maxStep) * 0.25;
	// timeout = 1.2f - (maxStep - (step - maxStep)) * 0.03f;
	timeout = 1.2f - 4 * 0.03f;
	PlayMusic("player_crouch1.ogg", false, volume, 0.0f, 21, false);
	AddTimer("step"+step, timeout, "DudesGoing");
}

// dude is gone
void DudeGone(string &in asTimer)
{
	AddEffectVoice("Ch01Level01_05_DiningRoomLetter.ogg", "", "Voice", "Ch01Level01_05_DiningRoomLetter", false, "", 0, 0);
	CheckPoint("last_point", "PlayerStartArea_middle", "MapCheckPoint", "DeathMessages", "C01Level01_Diningroom");
	SetEntityActive("riddle_01_knowledge_note", true);
	SetEntityActive("riddle_01_knowledge_click", true);
	PlaySoundAtEntity("", "door_mansion_close", "DiningRoomDoor", 0, false);
	SetSwingDoorLocked("DiningRoomDoor", true, true);
	SetSwingDoorLocked("TheCloset", false, false);
}

// activates the ladder area script
void PickedUpLetter(string &in asEntity)
{
	SetLocalVarInt("PickedUpNote", 1);
}

// makes ladder go down
void LadderMoveDown(string &in asParent, string &in asChild, int alState)
{
	if(GetLocalVarInt("PickedUpNote") != 1) return;
	RemoveEntityCollideCallback("Player", "ScriptDiningRoomLadder");
	SetMoveObjectState("ladder_static", 0.8f);
	PlaySoundAtEntity("", "16_ladder_down", "ladder_static", 0, false);
}

// stops ladder going down
void CollideLadderDown(string &in asParent, string &in asChild, int alState)
{
	PlaySoundAtEntity("", "impact_wood_heavy_high", "ladder_static", 0, false);
	CreateParticleSystemAtEntity("ladder_fell", "ps_break_wood_small", "LadderDown", false);
	SetEntityActive("LadderArea_1", true);
	GiveSanityBoostSmall();
	PlayMusic("02_puzzle.ogg", false, 0.70f, 0, 10, false);
	CreateParticleSystemAtEntityExt("BookParticle", "ps_torch_fire_nosmoke", "BlackBook", true, 0, 1, 1, 1, true, 1, 2, 100, 110);
	AddEntityCollideCallback("Player", "ScriptBookNear", "NearTheBook", false, 0);
	SetEntityPlayerLookAtCallback("ScriptBookLookAt", "LookingAtTheBook", true);
	SetEntityPlayerInteractCallback("BlackBook", "PickedUpBook", true);
}

// the player gets near the book
void NearTheBook(string &in asParent, string &in asChild, int alState)
{
	bool enabled = false;
	if(alState > 0) enabled = true;
	SetEntityActive("ScriptBookLookAt", enabled);
}

// the player looks at the book
void LookingAtTheBook(string &in asEntity, int alState)
{
	AddEffectVoice("Ch01Level01_06_DiningRoomGlare.ogg", "", "Voice", "Ch01Level01_06_DiningRoomGlare", false, "", 0, 0);
	SetEntityActive("LadderArea_5", true);
}

// put the book in the inventory
void PickedUpBook(string &in asEntity)
{
	SetInventoryDisabled(false);
	HideRiddle("riddle_01_knowledge");
	GiveSanityBoostSmall();
	AddEffectVoice("Ch01Level01_07_DiningRoomBook.ogg", "", "Voice", "Ch01Level01_07_DiningRoomBook", false, "", 0, 0);
	SetEntityActive(asEntity, false);
	DestroyParticleSystem("BookParticle");
	SetEntityActive("LadderArea_5", false);
	SetMessage("Ch01Level01_Hallway", "BlackBookPickedUp", 6.00f);
	GiveItem("inventory_black_book", "InventoryBlackBook", "BlackBook", "blackbook.tga", 1.00f);
	// restores the doors and lights to backtrack
	SetLampLit("candlestick_floor_1", false, false);
	SetLampLit("candlestick_floor_2", false, false);
	SetLampLit("torch_floor_5", true, false);
	SetLampLit("torch_floor_6", true, false);
	AddEntityCollideCallback("Player", "ScriptDiningRoomLightsOff", "DiningroomTurnoffLights", true, 0);
	ResetProp("DiningRoomDoor");
	SetEntityInteractionDisabled("DiningRoomDoor", true);
	AddDisplayDiary("Ch01Level01_BlackBook", "bg_diaries");
}

// turns off diningroom lights
void DiningroomTurnoffLights(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("LadderArea_1", false);
	float time_lights_off = 1.00f;
	PlaySoundAtEntity("", "general_wind_whirl", "DiningRoomDoor", time_lights_off, false);
	AddTimer("", time_lights_off, "DiningroomWhipeoffLights");
	//AddEntityCollideCallback("Player", "ScriptDiningRoomGetKey", "SetupPactumTenebris", true, 0);
}

// make the dining room light vanish... for real.
void DiningroomWhipeoffLights(string &in asTimer)
{
	int i;
	//for(i=1; i<=2; i++) SetLightVisible("SpotLight_"+i, false);
	for(i=1; i<=3; i++) SetLampLit("candlestick_tri_"+i, false, false);
	for(i=5; i<=7; i++) SetLampLit("chandelier_nice_"+i, false, true);
	for(i=9; i<=10; i++) SetLampLit("torch_floor_"+i, false, true);
	for(i=9; i<=14; i++) SetLampLit("candlestick_floor_"+i, false, false);
	for(i=9; i<=21; i++) SetLampLit("candlestick_wall_"+i, false, false);
	SetLightVisible("PointLight_20", false);
	// for(i=19; i<=24; i++) SetLampLit("torch_static01_"+i, false, false);
	for(i=1; i<=8; i++) SetLightVisible("InOutsideLight_"+i, false);
	// SetLightVisible("SpotLight_1", false);
	AddTimer("", 1, "FirstShredAppears");
}

// makes the shred appear
void FirstShredAppears(string &in asTimer)
{
	SetEntityActive("BlackBookShred_01", true);
	SetEntityActive("BlackBookShred_01_nail", true);
	SetEntityCallbackFunc("BlackBookShred_01", "PickedUpFirstShred");
	CreateParticleSystemAtEntityExt("ShredParticle", "ps_torch_fire_nosmoke", "BlackBookShred_01", true, 0, 1, 1, 1, true, 1, 2, 100, 110);
}

// picked up black book shred 01
void PickedUpFirstShred(string &in asEntity, string &in type)
{
	SetGlobalVarInt("HaveBlackBookShred1", 1);
	DestroyParticleSystem("ShredParticle");
	//SetMessage("BasicPhrases", "PickedUpShred", 6.00f);
	//AddEffectVoice("Ch01Level01_08_DiningRoomShred.ogg", "", "Voice", "Ch01Level01_08_DiningRoomShred", false, "", 0, 0);
	// SetMessage("Voice", "Ch01Level01_08_DiningRoomShred", 6.00f);
	// SetEntityActive(asEntity, false);
	// SetEntityActive(asEntity + "_script", false);
	SetEntityInteractionDisabled("DiningRoomDoor", false);
	SetEntityActive("painting_nodecal", true);
	SetupPactumTenebris("", "", 1);
	if(GetPlayerHealth() < 50) SetPlayerHealth(50);
}

// prepares for the pactum tenebris showdown
void SetupPactumTenebris(string &in asParent, string &in asChild, int aslState)
{
	StopMusic(0.0f, 1);
	AddEntityCollideCallback("Player", "ScriptDiningRoomLookCanvas", "LookAtTheCanvas", true, 1);
	SetEntityPlayerLookAtCallback("ScriptKeyLookAt", "StartPactumTenebris", true);
}

// forces player to look at the canvas
void LookAtTheCanvas(string &in asKey, string &in asChild, int alState)
{
	//StartPlayerLookAt("ScriptKeyLookAt", 10.0f, 10.2f, "");
	SetEntityActive("ScriptKeyLookAt", false);
	StartPactumTenebris("ScriptKeyLookAt", 1);
}

// pops out the key
void StartPactumTenebris(string &in asEntity, int alState)
{
	SetEntityActive("ScriptDiningRoomLookCanvas", false);
	SetPlayerActive(false);
	StartPlayerLookAt("KeyLevel2", 10.0f, 10.2f, "");
	// PlayMusic("04_event_hole.ogg", false, 0.70f, 0, 20, false);
	PlayMusic("C01L01_Pactum.ogg", false, 0.70f, 0, 20, false);
	//FadeImageTrailTo(3.0f, 10.0f);
	FadePlayerFOVMulTo(0.5f, 1.5f);
	int i;
	for(i=1; i<=2; i++) SetLightVisible("RedLight_"+i, true);
	SetLampLit("torch_floor_9", true, true);
	SetLampLit("torch_floor_10", true, true);
	for(i=1; i<=12; i++) SetLampLit("candle_floor_"+i, true, false);
	FadeLightTo("PactumLight", 0.7f, 0.0f, 0.0f, 1.0f, -1, 10.0f);
	AddTimer("KeyLevel2", 15.0f, "EndPactumTenebris");
}

// resumes the gameplay
void EndPactumTenebris(string &in asKey)
{
	StopMusic(2, 20);
	//FadeImageTrailTo(0.0f, 0.5f);
	FadePlayerFOVMulTo(1, 0.6f);
	StopPlayerLookAt();
	SetPlayerActive(true);
	SetEntityActive(asKey, true);
	AddPropImpulse(asKey, 0, 0, -7.0f, "world");
	AddUseItemCallback("", asKey, "level_wood_1", "UsedKeyOnHallwayDoor", true);
	AddEntityCollideCallback(asKey, "ScriptDiningRoomKey", "KeyDropped", false, 1);
	SetEntityCallbackFunc(asKey, "PickedUpKey");
}

// key was dropped
void KeyDropped(string &in asKey, string &in asChild, int alState)
{
	PlaySoundAtEntity("", "impact_metal_chain_high", asKey, 0, false);
	CreateParticleSystemAtEntity("key_drop_dust_particle", "ps_dust_impact", asKey, false);
}

void PickedUpKey(string &in asEntity, string &in type)
{
	if(type != "OnPickup") return;
	// SetSwingDoorLocked("DiningRoomDoor", false, true);
	// PlaySoundAtEntity("", "unlock_door.snt", "DiningRoomDoor", 0, false);
	// SetSwingDoorClosed("DiningRoomDoor", false, true);
	SetEntityActive("BlackBookShred_01_nail", false);
	PlaySoundAtEntity("", "door_mansion_open", "DiningRoomDoor", 0, false);
	SlamOpenDoor("DiningRoomDoor", false, false);
	SetSwingDoorLocked("hallway_door", false, false);
	SetSwingDoorClosed("hallway_door", false, true);
	SlamOpenDoor("hallway_door", false, false);
}

// unlocks the hallway level door
void UsedKeyOnHallwayDoor(string &in asItem, string &in asEntity)
{
	PlaySoundAtEntity("", "unlock_door", asEntity, 0, false);
	SetLevelDoorLocked(asEntity, false);
	RemoveItem(asItem);
}

/************************
 *
 * SOME USEFUL FUNCTIONS!
 *
 ***********************/

// shows a text on screen to notify a new diary
void AddDisplayDiary(string &in asName, string &in asBkg)
{
	SetMessage("Hints", "DiaryAdded", 0.0f);
	AddDiary(asName, asBkg);
}

// this places a dude wherever you want to
string PlaceADude(string& asName, string& asEntityFile, string& asAreaName)
{
	int i = 0;
	while(GetEntityExists(asName+i))
	{
		i++;
	}
	CreateEntityAtArea(asName+i, asEntityFile, asAreaName, false);
	return asName+i;
}
// this hides all past dudes (call when respawned from death)
void DestroyAllDudes(string& asName)
{
	int i = 0;
	while(GetEntityExists(asName+i))
	{
		DestroyParticleSystem(asName+i+"_Smoke");
		StopSound(asName+i+"_Oohs", 0.0f);
		StopSound(asName+i+"_Aahs", 0.0f);
		SetEnemyDisabled(asName+i, true);
		SetEntityActive(asName+i, false);
		i++;
	}
}

// initiate a riddle
void InitRiddle(string &in asRiddle, string& asCallback, float afCallbackTimer)
{
	HideRiddle(asRiddle);
	AddLocalVarString(asRiddle + "_callback", "");
	SetEntityInteractionDisabled(asRiddle + "_note", true);
	if(asCallback != "")
	{
		SetLocalVarString(asRiddle + "_callback", asCallback);
		SetLocalVarFloat(asRiddle + "_callbackTimer", afCallbackTimer);
	}
	SetEntityPlayerInteractCallback(asRiddle + "_click", "ShowRiddle", true);
}
// hides a riddle icon
void HideRiddle(string &in asRiddle)
{
	SetEntityActive(asRiddle + "_area", false);
	FadeLightTo(asRiddle + "_light", 0, 0, 0, 0, 0, 0.01);
}
// show a riddle icon
void ShowRiddle(string &in asClick)
{
	SetEntityActive(asClick, false);
	string trim = "_click";
	int cnt = asClick.length() - trim.length();
	string asRiddle = StringSub(asClick, 0, cnt);
	string asCallback = GetLocalVarString(asRiddle + "_callback");
	FadeLightTo(asRiddle + "_light", 0.75f, 0.75f, 0.75f, 1, 0.1f, 1.5f);
	SetEntityActive(asRiddle + "_area", true);
	SetPlayerActive(false);
	StartPlayerLookAt(asRiddle + "_area", 10.0f, 10.2f, "");
	AddTimer("", 1, "StopLook");
	SetEntityPlayerInteractCallback(asRiddle + "_area", "FlashRiddle", false);
	FlashRiddle(asRiddle + "_area");
	if(asCallback != "")
	{
		float afCallbackTimer = GetLocalVarFloat(asRiddle + "_callbackTimer");
		AddTimer(asRiddle + "_note", afCallbackTimer, asCallback);
	}
}
// flashes a riddle
void FlashRiddle(string &in asArea)
{
	string trim = "_area";
	int cnt = asArea.length() - trim.length();
	string asRiddle = StringSub(asArea, 0, cnt);
	StartEffectEmotionFlash("Riddles", asRiddle, "journal_open");
}

// stop force-looking at something
void StopLook(string &in asTimer)
{
	StopPlayerLookAt();
	SetPlayerActive(true);
}

// dude gets you
void DudeGetsYou(string &in asDude)
{
	ShowEnemyPlayerPosition(asDude);
	AddTimer(asDude, 1.0f, "DudeGetsYou");
}

// flash fade-out - fade-in
void FlashFadeOut()
{
	FadeOut(0.10f);
	AddTimer("flash_timer", 0.50f, "FlashFadeBackIn");
}
void FlashFadeBackIn(string &in asTimer)
{
	FadeIn(0.50f);
}

// slam closes a door
void SlamCloseDoor(string &in asDoor, bool lookAt, bool lockDoor)
{
	if(lookAt == true)
	{
		SetPlayerActive(false);
		StartPlayerLookAt(asDoor, 10.0f, 10.2f, "");
		AddTimer("", 1.5f, "StopLook");
	}
	SetSwingDoorDisableAutoClose(asDoor, false);
	if(lockDoor == true)
	{
		SetLocalVarInt("LockDoor_"+asDoor, 1);
	}
	SetEntityInteractionDisabled(asDoor, true);
	PushDoor(asDoor);
}
// pushes the door (closes)
void PushDoor(string &in door_name)
{
	if(GetSwingDoorState(door_name) > 0)
	{
		AddPropForce(door_name, 800, 0, -800, "object");
		AddTimer(door_name, 0.1, "PushDoor");
	}
	else
	{
		SetSwingDoorClosed(door_name, true, true);
		if(GetLocalVarInt("LockDoor_"+door_name) == 1)
		{
			AddTimer(door_name, 0.5f, "LockDoor");
		} else {
			SetEntityInteractionDisabled(door_name, false);
		}
		CreateParticleSystemAtEntity("", "ps_break_wood", door_name, false);
		PlaySoundAtEntity("", "break_wood_metal", door_name, 0, false);
	}
}
// locks the door
void LockDoor(string &in door_name)
{
	SetSwingDoorLocked(door_name, true, true);
	SetLocalVarInt("LockDoor_"+door_name, 0);
	SetEntityInteractionDisabled(door_name, false);
}

// slam opens a door
void SlamOpenDoor(string &in asDoor, bool lookAt, bool makeNoise)
{
	if(lookAt == true)
	{
		SetPlayerActive(false);
		StartPlayerLookAt(asDoor, 10.0f, 10.2f, "");
		AddTimer("", 1.5f, "StopLook");
	}
	SetSwingDoorLocked(asDoor, false, false);
	SetSwingDoorDisableAutoClose(asDoor, true);
	SetSwingDoorClosed(asDoor, false, false);
	if(makeNoise == true) PlaySoundAtEntity("", "break_wood_metal", asDoor, 0, false);
	PullDoor(asDoor);
}
// pulls the door (opens)
void PullDoor(string &in door_name)
{
	if(GetSwingDoorState(door_name) < 1)
	{
		AddPropForce(door_name, 0, 0, 500, "object");
		AddTimer(door_name, 0.1, "PullDoor");
	}
}
