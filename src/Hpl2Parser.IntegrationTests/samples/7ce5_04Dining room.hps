void OnStart()
{   
	AutoSave();
	AddTimer("", 1, "timer");
	AddUseItemCallback("", "Crowbar", "Deski1", "UseCrowbarOnBoards", true);
	AddEntityCollideCallback("Joint", "AreaBreak", "BreakBoards", true, 1);
	AddEntityCollideCallback("Henryk_1", "AreaCollide_1", "GruntGone", true, 1);
	AddEntityCollideCallback("Player", "AreaCollide_2", "GruntWalk", true, 1);
	AddEntityCollideCallback("Henryk_2", "AreaCollide_3", "GruntGone2", true, 1);
	AddEntityCollideCallback("Player", "AreaCollide_4", "Voice2", true, 1);
	AddEntityCollideCallback("Henryk_2", "AreaCollide_5", "Voice2Off", true, 1);
	AddEntityCollideCallback("Player", "AreaCollide_6", "CaveIn", true, 1);
	AddUseItemCallback("", "hollow_needle", "Door", "GruntDoor", true);
	AddEntityCollideCallback("Player", "AreaCollide_7", "SoundAmb", true, 1);
	AddEntityCollideCallback("Player", "AreaDamage_1", "Damage", false, 1);
	
}

void OnEnter()
{ 
	PlayMusic("Dining", true, 1, 0.1, 10, true);
	CheckPoint("EnterArea", "PlayerStartArea_1", "string& asCallback", "", "");
	
}




void OnLeave()
{ 
	SetupLoadScreen("LoadingText", "LoadScreen3", 0, "game_loading_rose.jpg");
}

////////////////////Crowbar Door///////////////////////////////////////

void UseCrowbarOnBoards(string &in asItem, string &in asEntity)
{
	RemoveItem(asItem);
	PlaySoundAtEntity("", "player_crouch.snt", "Player", 0.05, false);
	AddTimer(asEntity, 0.2, "TimerPlaceCrowbar");
	StartPlayerLookAt("joint", 2, 2, "crowbarlooklook");
}

void crowbarlooklook()
{
	StopPlayerLookAt();
}

void TimerPlaceCrowbar(string &in asTimer)
{
		SetEntityActive("Joint", true);
		PlaySoundAtEntity("", "puzzle_place_jar.snt", asTimer, 0.05, false);
}

void BreakBoards(string &in asParent, string &in asChild, int alState) 
{
			SetEntityActive("Joint", false);
			SetEntityActive("Broken", true);
			
			SetEntityActive("Deski1", false);
			SetEntityActive("Deski2", true);
			
			GiveSanityBoostSmall();
			
			PlaySoundAtEntity("", "break_wood_metal.snt", "AreaEffect", 0.05, false);
			
			CreateParticleSystemAtEntity("", "ps_hit_wood.ps", "AreaEffect", false);
			
			PlayMusic("10_puzzle01.ogg", false, 0.7, 0.1, 10, false);
			AddTimer("music1", 10, "TimerMusicStart");
			CompleteQuest("WallBroken", "DiningWall");
			
		
}

////////////////////First Grunt Encounter///////////////////////////////
void GruntDoor(string &in asItem, string &in asEntity)
{
	SetSwingDoorLocked("Door", false, true);
	PlaySoundAtEntity("", "07_pick_lock.snt", asEntity, 0, false);
	SetEntityActive("Henryk_1", true);
	SetEntityActive("AreaCollide_4", true);
	PlayMusic("01_event_dust", false, 0.7, 0.1, 10, true);
	SetEntityActive("level_celler_1", false);
	SetEntityActive("level_celler_4", true);
	
	CheckPoint("GruntAppears", "PlayerStartArea_4", "HenrykRespawn", "", "");
	
	AddTimer("scare", 0.5f, "TimerPlayerreact");
	AddTimer("breath", 1.0f, "TimerPlayerreact");
	AddTimer("breathl", 3.0f, "TimerPlayerreact");
	AddTimer("voice1", 0.4f, "TimerVoice1");
}

void HenrykRespawn(string &in asName, int alCount)
{
	SetEntityActive("Henryk_1", true);
} 

void TimerVoice1(string &in asTimer)
{
	if(asTimer == "voice1") AddEffectVoice("04Player_1", "", "Dialogue", "04Player_1", false, "Player", 0, 0);
}

void TimerPlayerreact(string &in asTimer) 
{
	if(asTimer == "breathl")
		PlayGuiSound("react_"+asTimer, 0.4f);
	else
		PlayGuiSound("react_"+asTimer, 0.7f);
		
	if(asTimer == "scare")
		GiveSanityDamage(10.0f, true);

	AddEnemyPatrolNode("Henryk_1", "Gruntpath_3", 0.001, "");
	AddEnemyPatrolNode("Henryk_1", "Gruntpath_5", 0.001, "");
	AddEnemyPatrolNode("Henryk_1", "Gruntpath_7", 0.001, "");
	AddEnemyPatrolNode("Henryk_1", "Gruntpath_8", 0.001, "");
	AddEnemyPatrolNode("Henryk_1", "Gruntpath_9", 0.001, "");
	AddEnemyPatrolNode("Henryk_1", "Gruntpath_10", 0.001, "");
	AddEnemyPatrolNode("Henryk_1", "Gruntpath_12", 0.001, "");
}

void Voice2(string &in asParent, string &in asChild, int alState)
{
	AddEffectVoice("04Player_2", "", "Dialogue", "04Player_2", false, "Player", 0, 0);
}

void Voice2Off(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("AreaCollide_4", false);
}

void GruntGone(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("Henryk_1", false);
	StopMusic(6.0f, 10);
	PlaySoundAtEntity("", "door_level_cellar_close.snt", "level_celler_1", 0, false);
	AddTimer("music1",10, "TimerMusicStart");
	
}

//////////////////////////////Grunt Walks By////////////////////////////

void GruntWalk(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("Henryk_2", true);
	SetPlayerRunSpeedMul(0.1);
	SetPlayerMoveSpeedMul(0.1);
	SetPlayerLookSpeedMul(0.1);
	
	AddTimer("scare", 0.5f, "TimerPlayerreact");
	AddTimer("breath", 1.0f, "TimerPlayerreact");
	AddTimer("breathl", 3.0f, "TimerPlayerreact");
	
	AddEnemyPatrolNode("Henryk_2", "GruntWalkpath_1", 0.5, "");
	AddEnemyPatrolNode("Henryk_2", "GruntWalkpath_2", 0.4, "");
	AddEnemyPatrolNode("Henryk_2", "GruntWalkpath_3", 0.6, "");
}

void GruntGone2(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("Henryk_2", false);
	SetPlayerRunSpeedMul(1);
	SetPlayerMoveSpeedMul(1);
	SetPlayerLookSpeedMul(1);
	AddTimer("music1", 10, "TimerMusicStart");
}

///////////////////////////////Timer Music//////////////////////////////

void TimerMusicStart(string &in asTimer)
{
	if(asTimer == "music1") PlayMusic("Dining", true, 1, 0.1, 10, false);
}

////////////////////////////////////////Cave in/////////////////////////////

void CaveIn(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("stone_1", true);
	SetEntityActive("stone_2", true);
	SetEntityActive("stone_3", true);
	SetEntityActive("stone_4", true);
	SetEntityActive("stone_5", true);
	SetEntityActive("stone_6", true);
	PlaySoundAtEntity("", "25_break_rock.snt", "stone_2", 0, false);
	
}

//////////////////////////////////////DamagePlayer////////////////////////////

void Damage(string &in asParent, string &in asChild, int alState)
{
	GivePlayerDamage(100, "BloodSplat", false, true);
}


//////////////////////////////////Quests////////////////////////////////

void ShelfQuest(string &in asEntity)
{
	AddQuest("WallBroken", "DiningWall");
}

///////////////////////////////////DoorMessage//////////////////////////

void message(string &in asEntity) {
	SetMessage("message", "SimpleLock", 3);
}

//////////////////////////////////SoundMisc/////////////////////////////

void SoundAmb(string &in asParent, string &in asChild, int alState)
{
	AddTimer("Monster", 1, "TimerMonsterSound");
	AddTimer("HitDoor", 1.7f, "TimerMonsterSound");
	AddTimer("Monster2", 3, "TimerMonsterSound");
	AddTimer("HitDoor2", 2.4f, "TimerMonsterSound");
	AddTimer("HitDoor3", 3, "TimerMonsterSound");
	AddTimer("Monster3", 4, "TimerMonsterSound");
}

void TimerMonsterSound(string &in asTimer)
{
	if(asTimer == "Monster") PlaySoundAtEntity("", "attack_launch", "AreaMonsterAmb", 0, false);
	
	else if(asTimer == "HitDoor") PlaySoundAtEntity("", "hit_wood", "AreaMonsterAmb", 0, false);
	
	else if(asTimer == "Monster2") PlaySoundAtEntity("", "attack_launch", "AreaMonsterAmb", 0, false);
	
	else if(asTimer == "HitDoor2") PlaySoundAtEntity("", "hit_wood", "AreaMonsterAmb", 0, false);
	
	else if(asTimer == "HitDoor3") PlaySoundAtEntity ("", "hit_wood", "AreaMonsterAmb", 0, false);
	
	else if(asTimer == "Monster2") PlaySoundAtEntity("", "notice_long", "AreaMonsterAmb", 0, false);
}



