void OnStart()
{
AddEntityCollideCallback("Player", "AreaGround", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaGround2", "CollideAreaGround", false, 1);
AddEntityCollideCallback("Player", "AreaWater", "WaterDeath", false, 1);
AddEntityCollideCallback("Player", "AreaBreak", "Break", true, 1);
AddEntityCollideCallback("Player", "boards2", "Break2", true, 1);
AddEntityCollideCallback("Player", "AreaHatch", "Hatch", true, 1);
AddEntityCollideCallback("Player", "AreaKaernk", "Splash", true, 1);
AddEntityCollideCallback("Player", "AreaKaernk2", "Splash4", true, 1);
AddEntityCollideCallback("Player", "AreaMan", "Man", true, 1);
AddEntityCollideCallback("Player", "AreaSlime", "Slime", true, 1);
AddEntityCollideCallback("Player", "AreaCorridor", "Corridor", true, 1);
AddEntityCollideCallback("Player", "AreaMorality", "Morality", true, 1);
AddEntityCollideCallback("Player", "AreaNope", "Nope", true, 1);
AddEntityCollideCallback("box", "AreaButton", "AreaBox", true, 1);
AddEntityCollideCallback("box1", "AreaHole", "Plank", true, 1);
AddEntityCollideCallback("rock", "padlock", "Impact", true, 1);
AddEntityCollideCallback("rock2", "padlock", "Impact", true, 1);
AddEntityCollideCallback("rock3", "padlock", "Impact", true, 1);
AddEntityCollideCallback("Player", "roach_1", "roach1", true, 1);
AddEntityCollideCallback("Player", "roach_2", "roach2", true, 1);
AddEntityCollideCallback("Player", "roach_3", "roach3", true, 1);
AddEntityCollideCallback("Player", "roach_4", "roach4", true, 1);
AddEntityCollideCallback("Player", "roach_5", "roach5", true, 1);
AddEntityCollideCallback("Player", "rat_1", "rat1", true, 1);
AddEntityCollideCallback("Player", "rat_2", "rat2", true, 1);
AddEntityCollideCallback("Player", "rat_3", "rat3", true, 1);
AddEntityCollideCallback("Player", "rat_4", "rat4", true, 1);
AddUseItemCallback("","chemical1","bottlearea1","chemical1",true);
AddUseItemCallback("","chemical2","bottlearea2","chemical2",true);
AddUseItemCallback("","chemical3","bottlearea3","chemical3",true);
AddUseItemCallback("","chemical4","bottlearea4","chemical4",true);
AddUseItemCallback("","jar2","AreaPipe","pipe",true);
AddUseItemCallback("", "waxharry2", "nowax", "UseWaxroll", true);
AddUseItemCallback("","brokenpipe","AreaWall","breakwall",true);
AddUseItemCallback("","brokenpipe","padlock","destroypadlock",true);
AddUseItemCallback("","money12","AreaChest","Unlockchest",false);
AddUseItemCallback("","money13","AreaChest","Unlockchest",false);
AddUseItemCallback("","money15","AreaChest","Unlockchest",false);
AddUseItemCallback("","money16","AreaChest","Unlockchest",false);
AddUseItemCallback("","money17","AreaChest","Unlockchest",false);
AddUseItemCallback("","money14","AreaChest","Unlockchest",false);
AddUseItemCallback("","money8","AreaChest","Unlockchest",false);
AddUseItemCallback("","money10","AreaChest","Unlockchest",false);
AddUseItemCallback("","money11","AreaChest","Unlockchest",false);
PlayMusic("06_amb.ogg", true, 1, 5.0f, 0, true);
SetMoveObjectState("brigde", 0.0f);
SetMoveObjectState("gate", 1.0f);
SetEntityInteractionDisabled("shelf", true);
AddTimer("whispers", 35, "whispers");
CheckPoint ("Checkpoint", "PlayerStartArea_1", "DeathSettings", "DeathHints", "Killed");
SetMapDisplayNameEntry("Tempel2");
AutoSave();
}

void CollideAreaGround(string &in asParent, string &in asChild, int alState)
{
        GivePlayerDamage(200, "BloodSplat", true, true);
	PlayGuiSound("player_falldamage_max.snt", 1.0f);
        PlayGuiSound("L03_meat_snapsnt", 1.0f);
	StartScreenShake(0.3f, 0.5f, 0.1f, 0.4f);
        CreateParticleSystemAtEntity("", "blood", "Player", false);
        CreateParticleSystemAtEntity("", "ps_slime_attack_normal", "Player", false);
}

void WaterDeath(string &in asParent, string &in asChild, int alState)
{	
FadeOut(0);
AddTimer("waterdeath2", 2, "waterdeath2");
SetEntityActive("lurker", false);
SetEntityActive("lurker2", false);	
}

void waterdeath2(string &in asTimer)
{	
PlaySoundAtEntity("","water_lurker_idle_rev.snt","Player", 0,false);
AddTimer("waterdeath3", 1, "waterdeath3");
}

void waterdeath3(string &in asTimer)
{	
AddTimer("waterdeath4", 1, "waterdeath4");
GivePlayerDamage(1, "BloodSplat", true, false);
}

void waterdeath4(string &in asTimer)
{	
AddTimer("waterdeath5", 1, "waterdeath5");
GivePlayerDamage(1, "BloodSplat", true, false);
PlaySoundAtEntity("","water_lurker_eat_rev.snt","Player", 0,false);
}

void waterdeath5(string &in asTimer)
{	
GivePlayerDamage(200, "BloodSplat", true, true);
}

void AreaBox(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("box",false);
SetEntityActive("box3",true);
SetMoveObjectState("brigde", 1.0f);
}

void button(string &in asEntity)
{
SetMoveObjectState("brigde", 1.0f);
AddTimer("button2", 2, "button2");
}

void button2(string &in asTimer)
{
SetMoveObjectState("brigde", 0.0f);
SetMessage("Messages", "ch6brigde", 5);
}

//---- Prison area ----//

//Scare in the broken prison cell

void Man(string &in asParent, string &in asChild, int alState)
{
SetEntityActive("man1",true);
AddTimer("man2", 0.1, "man2");
} 

void man2(string &in asTimer)
{
SetEntityActive("man1",false);
SetEntityActive("man2",true);
AddTimer("man3", 0.1, "man3");
}

void man3(string &in asTimer)
{
SetEntityActive("man2",false);
}

void Impact(string &in asParent, string &in asChild, int alState)
{	
        PlaySoundAtEntity("","15_hammer.snt", "padlock", 0, true);
        CreateParticleSystemAtEntity("", "ps_hit_metal", "padlock", false);
	RemoveEntityCollideCallback("rock", "padlock");
	RemoveEntityCollideCallback("rock2", "padlock");
	RemoveEntityCollideCallback("rock3", "padlock");
        SetEntityActive("padlock2", true);
        SetEntityActive("padlock", false);
}

void destroypadlock(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","15_hammer.snt", "padlock", 0, true);
CreateParticleSystemAtEntity("", "ps_hit_metal", "padlock", false);
RemoveEntityCollideCallback("rock", "padlock");
RemoveEntityCollideCallback("rock2", "padlock");
RemoveEntityCollideCallback("rock3", "padlock");
SetEntityActive("padlock2", true);
SetEntityActive("padlock", false);
}

//---- Cellar ----//

//---- Chemicals ----//

void chemical1(string &in asItem, string &in asEntity)
{
SetEntityActive("bottle11", true);
SetEntityActive("bottle1", false);
RemoveItem("chemical1");
PlaySoundAtEntity("", "puzzle_acid_success.snt", "bottle11", 0, false);
AddLocalVarInt("Var1", 1);
func5();
}

void chemical2(string &in asItem, string &in asEntity)
{
SetEntityActive("bottle22", true);
SetEntityActive("bottle2", false);
RemoveItem("chemical2");
PlaySoundAtEntity("", "puzzle_acid_fail.snt", "bottle22", 0, false);
AddLocalVarInt("Var1", 1);
func5();
}

void chemical3(string &in asItem, string &in asEntity)
{
SetEntityActive("bottle33", true);
SetEntityActive("bottle3", false);
RemoveItem("chemical3");
PlaySoundAtEntity("", "puzzle_acid_success.snt", "bottle33", 0, false);
AddLocalVarInt("Var1", 1);
func5();
}

void chemical4(string &in asItem, string &in asEntity)
{
SetEntityActive("bottle44", true);
SetEntityActive("bottle4", false);
RemoveItem("chemical4");
PlaySoundAtEntity("", "puzzle_acid_fail.snt", "bottle44", 0, false);
AddLocalVarInt("Var1", 1);
func5();
}

void func5()
{
if(GetLocalVarInt("Var1") == 4)
    {
PlayMusic("12_puzzle_cavein.ogg", false, 1.0, 0, 1, true);
GiveSanityBoost();
CompleteQuest("Chemical", "Chemical");
SetEntityActive("valve2", true);
SetEntityActive("valve", false);
    }
}

void func_valve(string &in asEntity, int alState)
{
     if (alState == 1)
     {
CreateParticleSystemAtEntity("fireps", "ps_fire_lab_burner", "fire", false);
CreateParticleSystemAtEntity("fireps", "ps_fire_lab_burner", "fire2", false);
CreateParticleSystemAtEntity("fireps", "ps_fire_lab_burner", "fire3", false);
CreateParticleSystemAtEntity("fireps", "ps_fire_lab_burner", "fire4", false);
SetEntityActive("valve2", false);
SetEntityActive("valve", true);
AddTimer("boil", 7, "boil");
          return;
     }
}

void boil(string &in asTimer)
{
CreateParticleSystemAtEntity("boilps", "ps_acid_machine_bubble_large", "burn", false);
CreateParticleSystemAtEntity("boilps", "ps_acid_machine_bubble_large", "burn2", false);
CreateParticleSystemAtEntity("boilps", "ps_acid_machine_bubble_large", "burn3", false);
CreateParticleSystemAtEntity("boilps", "ps_acid_machine_bubble_large", "burn4", false);
PlaySoundAtEntity("boilsound", "puzzle_boil_low.snt", "burn", 0, false);
PlaySoundAtEntity("boilsound", "puzzle_boil_low.snt", "burn2", 0, false);
PlaySoundAtEntity("boilsound", "puzzle_boil_low.snt", "burn3", 0, false);
PlaySoundAtEntity("boilsound", "puzzle_boil_low.snt", "burn4", 0, false);
AddTimer("boil2", 9, "boil2");
}

void boil2(string &in asTimer)
{
CreateParticleSystemAtEntity("boil2ps", "ps_acid_machine_bubble_end", "done", false);
AddTimer("boil3", 2, "boil3");
}

void boil3(string &in asTimer)
{
SetEntityActive("jar2", true);
SetEntityActive("jar", false);
SetEntityActive("bottle44", false);
SetEntityActive("bottle4", true);
SetEntityActive("bottle33", false);
SetEntityActive("bottle3", true);
SetEntityActive("bottle22", false);
SetEntityActive("bottle2", true);
SetEntityActive("bottle11", false);
SetEntityActive("bottle1", true);
DestroyParticleSystem("boilps");
DestroyParticleSystem("boil2ps");
StopSound("boilsound", 0.5f);
CompleteQuest("Ch6slime", "Ch6slime");
}

void pipe(string &in asItem, string &in asEntity)
{
SetEntityConnectionStateChangeCallback("lever", "leverfunc");
RemoveItem("jar2");
PlaySoundAtEntity("", "puzzle_acid_success.snt", "AreaPipe", 0, false);
}

void leverfunc(string &in asEntity, int alState)
{ 
	if (alState == 1)
{ 
        PlaySoundAtEntity("","lock_door","door", 0,false);
        SetEntityConnectionStateChangeCallback("lever", "");
        SetMoveObjectState("gate", 0.0f);
        AddTimer("gas", 2, "gas");
	return;
} 
	if (alState == -1) 
	
        PlaySoundAtEntity("","lock_door","door", 0,false);
        SetEntityConnectionStateChangeCallback("lever", "");
        SetMoveObjectState("gate", 0.0f);
        AddTimer("gas", 2, "gas");
}

void gas(string &in asTimer)
{
PlaySoundAtEntity("steamsound","puzzle_gas.snt","gas", 0,false);
PlaySoundAtEntity("steamsound","puzzle_gas.snt","gas2", 0,false);
AddTimer("gas2", 9, "gas2");
}

void gas2(string &in asTimer)
{
StopSound("steamsound", 0.5f);
AddTimer("gas3", 3, "gas3");
}

void gas3(string &in asTimer)
{
SetMoveObjectState("gate", 1.0f);
PlaySoundAtEntity("","unlock_door","door", 0,false);
SetEntityActive("slime", false);
SetEntityActive("slime2", false);
SetEntityActive("slime3", false);
SetEntityActive("slime4", false);
SetEntityActive("slime5", false);
}

//---- End of chemical quest ----//

void Slime(string &in asParent, string &in asChild, int alState)
{	
AddQuest("Ch6slime", "Ch6slime");	
}

void arm(string &in asEntity)
{
SetEntityActive("arm", false);
SetEntityActive("arm2", true);
}

//---- Falling down ----//

void Break(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("boards", false);
PlaySoundAtEntity("","break_wood.snt","boards", 0,false);
CreateParticleSystemAtEntity("", "ps_break_wood_small", "boards", false);
SetPlayerCrouching(true);
PlaySoundAtEntity("","Scare.snt", "Player", 0, false);
CheckPoint ("Checkpoint2", "PlayerStartArea_3", "DeathSettings", "DeathHints", "Killed");
AutoSave();
}

void Break2(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("boards2", false);
SetEntityActive("boards", false);
PlaySoundAtEntity("","break_wood.snt","boards2", 0,false);
CreateParticleSystemAtEntity("", "ps_break_wood_small", "boards2", false);
SetLocalVarInt("Heartbeat", 1);
AddTimer("HeartBeat_1", 2, "HeartBeat");
SetPlayerRunSpeedMul(0.0f);
SetPlayerMoveSpeedMul(0.0f);
AddTimer("more", 0.1f, "TimerDoBlurPounding");
SetPlayerLookSpeedMul(0.3f);
SetPlayerCrouchDisabled(true);
SetInventoryDisabled(true);
SetLanternDisabled(true);
SetPlayerJumpDisabled(true);
FadePlayerRollTo(-60, 10, 25);
StopPlayerLookAt();
StartScreenShake(0.4f,0.4f, 0.4f,8.5f);
SetPlayerHealth(20);
SetEntityActive("AreaNope", false);
AddTimer("break3", 2, "break3");
}

void break3(string &in asTimer)
{
SetMessage("Messages", "ch6fuck", 4);
AddTimer("break4", 2, "break4");
}

void break4(string &in asTimer)
{
SetMessage("Messages", "ch6shit", 4);
AddTimer("break5", 4, "break5");
}

void break5(string &in asTimer)
{
SetMessage("Messages", "ch6waitasec", 4);
AddTimer("break6", 4, "break6");
}

void break6(string &in asTimer)
{
PlaySoundAtEntity("","drinking.snt","Player", 0,false);
RemoveItem("medicine");
FadeOut(1.0f);
AddTimer("break7", 5, "break7");
}

void break7(string &in asTimer)
{
FadeIn(2.0f);
AddTimer("break8", 3, "break8");
}

void break8(string &in asTimer)
{
SetPlayerLookSpeedMul(1.0f);
SetPlayerCrouchDisabled(false);
SetInventoryDisabled(false);
SetPlayerJumpDisabled(false);
SetLanternDisabled(false);
SetPlayerRunSpeedMul(0.6f);
SetPlayerMoveSpeedMul(0.6f);
FadePlayerRollTo(0.0f, 1.0f, 33.0f);
MovePlayerHeadPos(0.0, 0, 0, 1.0f, 0.5f);
SetPlayerHealth(40);
AddTimer("break9", 8, "break9");
}

void break9(string &in asTimer)
{
SetLocalVarInt("Heartbeat", 0);
}

void Splash(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","water_lurker_hunt_rev.snt","AreaSplash", 0,false);
CreateParticleSystemAtEntity("", "waterlurker_run_splash", "AreaSplash", false);
AddTimer("splash2", 1, "splash2");
}

void splash2(string &in asTimer)
{
GiveSanityDamage(10, true);
PlaySoundAtEntity("breath", "react_breath.snt", "Player", 1.0 / 0.8f, false);
AddTimer("splash3", 5, "splash3");
}

void splash3(string &in asTimer)
{
PlaySoundAtEntity("","water_lurker_idle_rev.snt","AreaSplash", 0,false);
AddTimer("splash3", 12, "splash3");
}

void Splash4(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","water_lurker_eat_rev.snt","AreaSplash2", 0,false);
CreateParticleSystemAtEntity("", "waterlurker_eat_splash", "AreaSplash2", false);
}

void Hatch(string &in asParent, string &in asChild, int alState)
{
ChangeMap("Tempel2.map", "PlayerStartArea_2", "","");
SetEntityActive("AreaGround2", true);
SetEntityActive("AreaCorridor", true);
SetEntityActive("block", false);
SetEntityInteractionDisabled("shelf", false);
SetLanternDisabled(false);
CheckPoint ("Checkpoint3", "PlayerStartArea_2", "DeathSettings", "DeathHints", "Killed");
}

void Plank(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("box1", false);
SetEntityActive("box2", true);
SetMessage("Messages", "ch6plank", 5);	
}

void Corridor(string &in asParent, string &in asChild, int alState)
{	
SetPlayerRunSpeedMul(0.8f);
SetPlayerMoveSpeedMul(0.8f);
PlaySoundAtEntity("","19_creak.snt", "Player", 0, false);
SetLocalVarInt("Heartbeat", 1);
AddTimer("corridor2", 2, "corridor2");
}

void corridor2(string &in asTimer)
{
PlaySoundAtEntity("", "react_breath_slow", "Player", 0.0f, false);
AddTimer("corridor3", 4, "corridor3");
}

void corridor3(string &in asTimer)
{
SetPlayerRunSpeedMul(1.0f);
SetPlayerMoveSpeedMul(1.0f);
SetLocalVarInt("Heartbeat", 0);
}

//---- Etc ----//

void whispers(string &in asTimer)
{
PlaySoundAtEntity("","HalluVoices.snt", "Player", 0, false);
AddTimer("whispers", 250, "whispers");
}

void Morality(string &in asParent, string &in asChild, int alState)
{
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);
}

void TimerDoBlurPounding(string &in asTimer)
{
	if(asTimer == "more")
	{
		SetRadialBlurStartDist(0.7f);
		FadeRadialBlurTo(0.2f, 0.1f);
		AddTimer("less", 2, "TimerDoBlurPounding");
	}
	else
	{
		FadeRadialBlurTo(0.01f, 0.04f);
		AddTimer("more", 5, "TimerDoBlurPounding");
	}
}

void roach1(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("roach_1", false);
PlaySoundAtEntity("","impact_organic_low.snt", "roach_1", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "roach_1", false);	
}

void roach2(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("roach_2", false);
PlaySoundAtEntity("","impact_organic_low.snt", "roach_2", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "roach_2", false);	
}

void roach3(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("roach_3", false);
PlaySoundAtEntity("","impact_organic_low.snt", "roach_3", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "roach_3", false);	
}

void roach4(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("roach_4", false);
PlaySoundAtEntity("","impact_organic_low.snt", "roach_4", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "roach_4", false);	
}

void roach5(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("roach_5", false);
PlaySoundAtEntity("","impact_organic_low.snt", "roach_5", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "roach_5", false);	
}

void rat1(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_1", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_1", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_1", false);	
}

void rat2(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_2", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_2", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_2", false);	
}

void rat3(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_3", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_3", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_3", false);	
}

void rat4(string &in asParent, string &in asChild, int alState)
{	
SetEntityActive("rat_4", false);
PlaySoundAtEntity("","impact_organic_low.snt", "rat_4", 0, true);
CreateParticleSystemAtEntity("", "ps_blood_tiny_splash", "rat_4", false);	
}

void HeartBeat(string &in asTimer)
{
	if(GetLocalVarInt("Heartbeat") == 1)
	{
		if(asTimer == "HeartBeat_1")
		{
			PlaySoundAtEntity("heartbeat", "sanity_heartbeat.snt", "Player", 0.0f, false);
			AddTimer("Beat", 0.05f, "HeartBeat");
			AddTimer("Beat", 0.35f, "HeartBeat");
			AddDebugMessage("EXECUTE TIMER", false);
			AddTimer("HeartBeat_1", 2, "HeartBeat");
		}
		
		if(asTimer == "Beat")
		{
			FadePlayerAspectMulTo(1.25f, 20);
			FadeRadialBlurTo(0.05f, 20);
			FadePlayerFOVMulTo(0.8f, 30);
			AddTimer("Beat_end", 0.05f, "HeartBeat");
		}
		
		if(asTimer == "Beat_end")
		{
			FadePlayerAspectMulTo(1.0f, 1);
			FadePlayerFOVMulTo(1.0f, 0.75f);
			FadeRadialBlurTo(0.0f, 1);
		}
	}
}

void notemusic(string &in asEntity)
{
AddTimer("notemusic2", 20, "notemusic2");
PlayMusic("10_paper_daniel02", false, 1.0f, 2.0f, 0, true);
PlaySoundAtEntity("","ui_sanity_gain.snt", "Player", 0, false);
AddGlobalVarInt("Morality", 1);	
}

void notemusic2(string &in asTimer)
{
PlayMusic("06_amb.ogg", true, 1, 5.0f, 0, true);
}

void breakwall(string &in asItem, string &in asEntity)
{
StartScreenShake(0.1, 2.0, 0.05, 0.5);
PlaySoundAtEntity("","explosion_rock_large.snt","wall1", 0,false);
SetEntityActive("wall1", false);
SetEntityActive("wall2", false);
SetEntityActive("wall3", false);
SetEntityActive("wall4", false);
SetEntityActive("wall5", false);
SetEntityActive("wall6", false);
SetEntityActive("wall7", false);
SetEntityActive("wall8", false);
SetEntityActive("wall9", false);
SetEntityActive("wall10", false);
SetEntityActive("wall11", false);
SetEntityActive("wall12", false);
SetEntityActive("wall13", false);
SetEntityActive("wall14", false);
SetEntityActive("wall15", false);
SetEntityActive("wall16", false);
SetEntityActive("wall17", false);
SetEntityActive("wall18", false);
SetEntityActive("wall19", false);
SetEntityActive("wall20", false);
SetEntityActive("wall21", false);
SetEntityActive("wall22", false);
SetEntityActive("wall23", false);
SetEntityActive("wall24", false);
SetEntityActive("wall25", true);
SetEntityActive("wall26", true);
}

void UseWaxroll(string &in asItem, string &in asEntity)
{
PlaySoundAtEntity("","12_make_drill.snt","Player", 0,false);
RemoveItem(asItem);
SetEntityActive("nowax", false);
SetEntityConnectionStateChangeCallback("phono", "phono");
}

void phono(string &in asEntity, int alState)
{
     if (alState == 1)
     {
AddEffectVoice("harryphono2.ogg", "", "Voice", "00_Harryphono2", false, "", 0, 0 );
SetPlayerActive(false);
AddTimer("phono2", 15, "phono2");
          return;
     }
}

void phono2(string &in asTimer)
{
AddDiary("DiaryHarry2", "");
SetMessage("Messages", "diaryharry2", 8);
SetPlayerActive(true);
}

void Unlockchest(string &in asItem, string &in asEntity)
{
RemoveItem(asItem);
PlaySoundAtEntity("","unlock_door","Player", 0,false);
SetEntityActive("AreaChest", false);
}

//---- Messages ----//

void Nope(string &in asParent, string &in asChild, int alState)
{	
SetMessage("Messages", "nope", 7);
}

void nowax(string &in asEntity)
{
SetMessage("Messages", "nowax", 4);
}

void locked(string &in asEntity)
{
SetMessage("Messages", "locked", 4);
}

void chest(string &in asEntity)
{
SetMessage("Messages", "ch6chest", 5);
}

void weakpadlock(string &in asEntity)
{
SetMessage("Messages", "ch6weakpadlock", 4);
}

//---- Death settings ----//

void DeathSettings(string &in asName, int alCount)
{
SetPlayerHealth(50);
SetPlayerSanity(50);
FadeIn(0);
PlayMusic("06_amb.ogg", true, 1, 5.0f, 0, true);
}

void OnEnter()
{	
}

void OnLeave()
{
StopMusic(10, 0);
SetupLoadScreen("loadscreentext", "...", 1, "load_cellar.png");
}